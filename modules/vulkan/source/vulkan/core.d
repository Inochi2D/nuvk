/**
 * Vulkan Core
 * 
 * Copyright:
 *     Copyright Â© 2015-2025, The Khronos Group Inc.
 * 
 * License: $(LINK2 https://www.apache.org/licenses/LICENSE-2.0, Apache-2.0)
 */
module vulkan.core;

import numem.core.types : OpaqueHandle;
import vulkan.loader;

public import vulkan.defines;

extern (System) @nogc nothrow:

version (VK_VERSION_1_4)
    version = VK_VERSION_1_3;
version (VK_VERSION_1_3)
    version = VK_VERSION_1_2;
version (VK_VERSION_1_2)
    version = VK_VERSION_1_1;


// Header boilerplate



// Fundamental types used by many commands and structures

alias VkBool32 = uint;
alias VkDeviceAddress = ulong;
alias VkDeviceSize = ulong;

struct VkExtent2D {
    uint width;
    uint height;
}

struct VkExtent3D {
    uint width;
    uint height;
    uint depth;
}

alias VkFlags = uint;

struct VkOffset2D {
    int x;
    int y;
}

struct VkOffset3D {
    int x;
    int y;
    int z;
}

struct VkRect2D {
    VkOffset2D offset;
    VkExtent2D extent;
}

enum VkResult {
    VK_SUCCESS = 0,
    VK_NOT_READY = 1,
    VK_TIMEOUT = 2,
    VK_EVENT_SET = 3,
    VK_EVENT_RESET = 4,
    VK_INCOMPLETE = 5,
    VK_ERROR_OUT_OF_HOST_MEMORY = -1,
    VK_ERROR_OUT_OF_DEVICE_MEMORY = -2,
    VK_ERROR_INITIALIZATION_FAILED = -3,
    VK_ERROR_DEVICE_LOST = -4,
    VK_ERROR_MEMORY_MAP_FAILED = -5,
    VK_ERROR_LAYER_NOT_PRESENT = -6,
    VK_ERROR_EXTENSION_NOT_PRESENT = -7,
    VK_ERROR_FEATURE_NOT_PRESENT = -8,
    VK_ERROR_INCOMPATIBLE_DRIVER = -9,
    VK_ERROR_TOO_MANY_OBJECTS = -10,
    VK_ERROR_FORMAT_NOT_SUPPORTED = -11,
    VK_ERROR_FRAGMENTED_POOL = -12,
    VK_ERROR_UNKNOWN = -13,
    VK_ERROR_VALIDATION_FAILED = -1000011001,
    VK_ERROR_OUT_OF_POOL_MEMORY = -1000069000,
    VK_ERROR_INVALID_EXTERNAL_HANDLE = -1000072003,
    VK_ERROR_FRAGMENTATION = -1000161000,
    VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS = -1000257000,
    VK_PIPELINE_COMPILE_REQUIRED = 1000297000,
    VK_ERROR_NOT_PERMITTED = -1000174001,
    VK_ERROR_INVALID_PIPELINE_CACHE_DATA = -1000298000,
    VK_ERROR_NO_PIPELINE_MATCH = -1000298001,
    VK_ERROR_SURFACE_LOST_KHR = -1000000000,
    VK_ERROR_NATIVE_WINDOW_IN_USE_KHR = -1000000001,
    VK_SUBOPTIMAL_KHR = 1000001003,
    VK_ERROR_OUT_OF_DATE_KHR = -1000001004,
    VK_ERROR_INCOMPATIBLE_DISPLAY_KHR = -1000003001,
    VK_ERROR_VALIDATION_FAILED_EXT = VK_ERROR_VALIDATION_FAILED,
    VK_ERROR_INVALID_SHADER_NV = -1000012000,
    VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR = -1000023000,
    VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR = -1000023001,
    VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR = -1000023002,
    VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR = -1000023003,
    VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR = -1000023004,
    VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR = -1000023005,
    VK_ERROR_OUT_OF_POOL_MEMORY_KHR = VK_ERROR_OUT_OF_POOL_MEMORY,
    VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR = VK_ERROR_INVALID_EXTERNAL_HANDLE,
    VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT = -1000158000,
    VK_ERROR_FRAGMENTATION_EXT = VK_ERROR_FRAGMENTATION,
    VK_ERROR_NOT_PERMITTED_EXT = VK_ERROR_NOT_PERMITTED,
    VK_ERROR_NOT_PERMITTED_KHR = VK_ERROR_NOT_PERMITTED,
    VK_ERROR_INVALID_DEVICE_ADDRESS_EXT = VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS,
    VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT = -1000255000,
    VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR = VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS,
    VK_THREAD_IDLE_KHR = 1000268000,
    VK_THREAD_DONE_KHR = 1000268001,
    VK_OPERATION_DEFERRED_KHR = 1000268002,
    VK_OPERATION_NOT_DEFERRED_KHR = 1000268003,
    VK_PIPELINE_COMPILE_REQUIRED_EXT = VK_PIPELINE_COMPILE_REQUIRED,
    VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT = VK_PIPELINE_COMPILE_REQUIRED,
    VK_ERROR_INVALID_VIDEO_STD_PARAMETERS_KHR = -1000299000,
    VK_ERROR_COMPRESSION_EXHAUSTED_EXT = -1000338000,
    VK_INCOMPATIBLE_SHADER_BINARY_EXT = 1000482000,
    VK_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT = VK_INCOMPATIBLE_SHADER_BINARY_EXT,
    VK_PIPELINE_BINARY_MISSING_KHR = 1000483000,
    VK_ERROR_NOT_ENOUGH_SPACE_KHR = -1000483000,
}

enum VK_SUCCESS = VkResult.VK_SUCCESS;
enum VK_NOT_READY = VkResult.VK_NOT_READY;
enum VK_TIMEOUT = VkResult.VK_TIMEOUT;
enum VK_EVENT_SET = VkResult.VK_EVENT_SET;
enum VK_EVENT_RESET = VkResult.VK_EVENT_RESET;
enum VK_INCOMPLETE = VkResult.VK_INCOMPLETE;
enum VK_ERROR_OUT_OF_HOST_MEMORY = VkResult.VK_ERROR_OUT_OF_HOST_MEMORY;
enum VK_ERROR_OUT_OF_DEVICE_MEMORY = VkResult.VK_ERROR_OUT_OF_DEVICE_MEMORY;
enum VK_ERROR_INITIALIZATION_FAILED = VkResult.VK_ERROR_INITIALIZATION_FAILED;
enum VK_ERROR_DEVICE_LOST = VkResult.VK_ERROR_DEVICE_LOST;
enum VK_ERROR_MEMORY_MAP_FAILED = VkResult.VK_ERROR_MEMORY_MAP_FAILED;
enum VK_ERROR_LAYER_NOT_PRESENT = VkResult.VK_ERROR_LAYER_NOT_PRESENT;
enum VK_ERROR_EXTENSION_NOT_PRESENT = VkResult.VK_ERROR_EXTENSION_NOT_PRESENT;
enum VK_ERROR_FEATURE_NOT_PRESENT = VkResult.VK_ERROR_FEATURE_NOT_PRESENT;
enum VK_ERROR_INCOMPATIBLE_DRIVER = VkResult.VK_ERROR_INCOMPATIBLE_DRIVER;
enum VK_ERROR_TOO_MANY_OBJECTS = VkResult.VK_ERROR_TOO_MANY_OBJECTS;
enum VK_ERROR_FORMAT_NOT_SUPPORTED = VkResult.VK_ERROR_FORMAT_NOT_SUPPORTED;
enum VK_ERROR_FRAGMENTED_POOL = VkResult.VK_ERROR_FRAGMENTED_POOL;
enum VK_ERROR_UNKNOWN = VkResult.VK_ERROR_UNKNOWN;
enum VK_ERROR_VALIDATION_FAILED = VkResult.VK_ERROR_VALIDATION_FAILED;
enum VK_ERROR_OUT_OF_POOL_MEMORY = VkResult.VK_ERROR_OUT_OF_POOL_MEMORY;
enum VK_ERROR_INVALID_EXTERNAL_HANDLE = VkResult.VK_ERROR_INVALID_EXTERNAL_HANDLE;
enum VK_ERROR_FRAGMENTATION = VkResult.VK_ERROR_FRAGMENTATION;
enum VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS = VkResult.VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS;
enum VK_PIPELINE_COMPILE_REQUIRED = VkResult.VK_PIPELINE_COMPILE_REQUIRED;
enum VK_ERROR_NOT_PERMITTED = VkResult.VK_ERROR_NOT_PERMITTED;
enum VK_ERROR_INVALID_PIPELINE_CACHE_DATA = VkResult.VK_ERROR_INVALID_PIPELINE_CACHE_DATA;
enum VK_ERROR_NO_PIPELINE_MATCH = VkResult.VK_ERROR_NO_PIPELINE_MATCH;
enum VK_ERROR_SURFACE_LOST_KHR = VkResult.VK_ERROR_SURFACE_LOST_KHR;
enum VK_ERROR_NATIVE_WINDOW_IN_USE_KHR = VkResult.VK_ERROR_NATIVE_WINDOW_IN_USE_KHR;
enum VK_SUBOPTIMAL_KHR = VkResult.VK_SUBOPTIMAL_KHR;
enum VK_ERROR_OUT_OF_DATE_KHR = VkResult.VK_ERROR_OUT_OF_DATE_KHR;
enum VK_ERROR_INCOMPATIBLE_DISPLAY_KHR = VkResult.VK_ERROR_INCOMPATIBLE_DISPLAY_KHR;
enum VK_ERROR_VALIDATION_FAILED_EXT = VK_ERROR_VALIDATION_FAILED;
enum VK_ERROR_INVALID_SHADER_NV = VkResult.VK_ERROR_INVALID_SHADER_NV;
enum VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR = VkResult.VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR;
enum VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR = VkResult.VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR;
enum VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR = VkResult.VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR;
enum VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR = VkResult.VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR;
enum VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR = VkResult.VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR;
enum VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR = VkResult.VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR;
enum VK_ERROR_OUT_OF_POOL_MEMORY_KHR = VK_ERROR_OUT_OF_POOL_MEMORY;
enum VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR = VK_ERROR_INVALID_EXTERNAL_HANDLE;
enum VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT = VkResult.VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT;
enum VK_ERROR_FRAGMENTATION_EXT = VK_ERROR_FRAGMENTATION;
enum VK_ERROR_NOT_PERMITTED_EXT = VK_ERROR_NOT_PERMITTED;
enum VK_ERROR_NOT_PERMITTED_KHR = VK_ERROR_NOT_PERMITTED;
enum VK_ERROR_INVALID_DEVICE_ADDRESS_EXT = VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS;
enum VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT = VkResult.VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT;
enum VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR = VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS;
enum VK_THREAD_IDLE_KHR = VkResult.VK_THREAD_IDLE_KHR;
enum VK_THREAD_DONE_KHR = VkResult.VK_THREAD_DONE_KHR;
enum VK_OPERATION_DEFERRED_KHR = VkResult.VK_OPERATION_DEFERRED_KHR;
enum VK_OPERATION_NOT_DEFERRED_KHR = VkResult.VK_OPERATION_NOT_DEFERRED_KHR;
enum VK_PIPELINE_COMPILE_REQUIRED_EXT = VK_PIPELINE_COMPILE_REQUIRED;
enum VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT = VK_PIPELINE_COMPILE_REQUIRED;
enum VK_ERROR_INVALID_VIDEO_STD_PARAMETERS_KHR = VkResult.VK_ERROR_INVALID_VIDEO_STD_PARAMETERS_KHR;
enum VK_ERROR_COMPRESSION_EXHAUSTED_EXT = VkResult.VK_ERROR_COMPRESSION_EXHAUSTED_EXT;
enum VK_INCOMPATIBLE_SHADER_BINARY_EXT = VkResult.VK_INCOMPATIBLE_SHADER_BINARY_EXT;
deprecated("aliased")
enum VK_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT = VK_INCOMPATIBLE_SHADER_BINARY_EXT;
enum VK_PIPELINE_BINARY_MISSING_KHR = VkResult.VK_PIPELINE_BINARY_MISSING_KHR;
enum VK_ERROR_NOT_ENOUGH_SPACE_KHR = VkResult.VK_ERROR_NOT_ENOUGH_SPACE_KHR;

enum VkStructureType {
    APPLICATION_INFO = 0,
    INSTANCE_CREATE_INFO = 1,
    DEVICE_QUEUE_CREATE_INFO = 2,
    DEVICE_CREATE_INFO = 3,
    SUBMIT_INFO = 4,
    MEMORY_ALLOCATE_INFO = 5,
    MAPPED_MEMORY_RANGE = 6,
    BIND_SPARSE_INFO = 7,
    FENCE_CREATE_INFO = 8,
    SEMAPHORE_CREATE_INFO = 9,
    EVENT_CREATE_INFO = 10,
    QUERY_POOL_CREATE_INFO = 11,
    BUFFER_CREATE_INFO = 12,
    BUFFER_VIEW_CREATE_INFO = 13,
    IMAGE_CREATE_INFO = 14,
    IMAGE_VIEW_CREATE_INFO = 15,
    SHADER_MODULE_CREATE_INFO = 16,
    PIPELINE_CACHE_CREATE_INFO = 17,
    PIPELINE_SHADER_STAGE_CREATE_INFO = 18,
    PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = 19,
    PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = 20,
    PIPELINE_TESSELLATION_STATE_CREATE_INFO = 21,
    PIPELINE_VIEWPORT_STATE_CREATE_INFO = 22,
    PIPELINE_RASTERIZATION_STATE_CREATE_INFO = 23,
    PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = 24,
    PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = 25,
    PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = 26,
    PIPELINE_DYNAMIC_STATE_CREATE_INFO = 27,
    GRAPHICS_PIPELINE_CREATE_INFO = 28,
    COMPUTE_PIPELINE_CREATE_INFO = 29,
    PIPELINE_LAYOUT_CREATE_INFO = 30,
    SAMPLER_CREATE_INFO = 31,
    DESCRIPTOR_SET_LAYOUT_CREATE_INFO = 32,
    DESCRIPTOR_POOL_CREATE_INFO = 33,
    DESCRIPTOR_SET_ALLOCATE_INFO = 34,
    WRITE_DESCRIPTOR_SET = 35,
    COPY_DESCRIPTOR_SET = 36,
    FRAMEBUFFER_CREATE_INFO = 37,
    RENDER_PASS_CREATE_INFO = 38,
    COMMAND_POOL_CREATE_INFO = 39,
    COMMAND_BUFFER_ALLOCATE_INFO = 40,
    COMMAND_BUFFER_INHERITANCE_INFO = 41,
    COMMAND_BUFFER_BEGIN_INFO = 42,
    RENDER_PASS_BEGIN_INFO = 43,
    BUFFER_MEMORY_BARRIER = 44,
    IMAGE_MEMORY_BARRIER = 45,
    MEMORY_BARRIER = 46,
    LOADER_INSTANCE_CREATE_INFO = 47,
    LOADER_DEVICE_CREATE_INFO = 48,
    PHYSICAL_DEVICE_SUBGROUP_PROPERTIES = 1000094000,
    BIND_BUFFER_MEMORY_INFO = 1000157000,
    BIND_IMAGE_MEMORY_INFO = 1000157001,
    PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES = 1000083000,
    MEMORY_DEDICATED_REQUIREMENTS = 1000127000,
    MEMORY_DEDICATED_ALLOCATE_INFO = 1000127001,
    MEMORY_ALLOCATE_FLAGS_INFO = 1000060000,
    DEVICE_GROUP_RENDER_PASS_BEGIN_INFO = 1000060003,
    DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO = 1000060004,
    DEVICE_GROUP_SUBMIT_INFO = 1000060005,
    DEVICE_GROUP_BIND_SPARSE_INFO = 1000060006,
    BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO = 1000060013,
    BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO = 1000060014,
    PHYSICAL_DEVICE_GROUP_PROPERTIES = 1000070000,
    DEVICE_GROUP_DEVICE_CREATE_INFO = 1000070001,
    BUFFER_MEMORY_REQUIREMENTS_INFO_2 = 1000146000,
    IMAGE_MEMORY_REQUIREMENTS_INFO_2 = 1000146001,
    IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 = 1000146002,
    MEMORY_REQUIREMENTS_2 = 1000146003,
    SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 = 1000146004,
    PHYSICAL_DEVICE_FEATURES_2 = 1000059000,
    PHYSICAL_DEVICE_PROPERTIES_2 = 1000059001,
    FORMAT_PROPERTIES_2 = 1000059002,
    IMAGE_FORMAT_PROPERTIES_2 = 1000059003,
    PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 = 1000059004,
    QUEUE_FAMILY_PROPERTIES_2 = 1000059005,
    PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 = 1000059006,
    SPARSE_IMAGE_FORMAT_PROPERTIES_2 = 1000059007,
    PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 = 1000059008,
    PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES = 1000117000,
    RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO = 1000117001,
    IMAGE_VIEW_USAGE_CREATE_INFO = 1000117002,
    PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO = 1000117003,
    RENDER_PASS_MULTIVIEW_CREATE_INFO = 1000053000,
    PHYSICAL_DEVICE_MULTIVIEW_FEATURES = 1000053001,
    PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES = 1000053002,
    PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES = 1000120000,
    PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES = PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,
    PROTECTED_SUBMIT_INFO = 1000145000,
    PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES = 1000145001,
    PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES = 1000145002,
    DEVICE_QUEUE_INFO_2 = 1000145003,
    SAMPLER_YCBCR_CONVERSION_CREATE_INFO = 1000156000,
    SAMPLER_YCBCR_CONVERSION_INFO = 1000156001,
    BIND_IMAGE_PLANE_MEMORY_INFO = 1000156002,
    IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO = 1000156003,
    PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES = 1000156004,
    SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES = 1000156005,
    DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO = 1000085000,
    PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO = 1000071000,
    EXTERNAL_IMAGE_FORMAT_PROPERTIES = 1000071001,
    PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO = 1000071002,
    EXTERNAL_BUFFER_PROPERTIES = 1000071003,
    PHYSICAL_DEVICE_ID_PROPERTIES = 1000071004,
    EXTERNAL_MEMORY_BUFFER_CREATE_INFO = 1000072000,
    EXTERNAL_MEMORY_IMAGE_CREATE_INFO = 1000072001,
    EXPORT_MEMORY_ALLOCATE_INFO = 1000072002,
    PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO = 1000112000,
    EXTERNAL_FENCE_PROPERTIES = 1000112001,
    EXPORT_FENCE_CREATE_INFO = 1000113000,
    EXPORT_SEMAPHORE_CREATE_INFO = 1000077000,
    PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO = 1000076000,
    EXTERNAL_SEMAPHORE_PROPERTIES = 1000076001,
    PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES = 1000168000,
    DESCRIPTOR_SET_LAYOUT_SUPPORT = 1000168001,
    PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES = 1000063000,
    PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES = PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES,
    PHYSICAL_DEVICE_VULKAN_1_1_FEATURES = 49,
    PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES = 50,
    PHYSICAL_DEVICE_VULKAN_1_2_FEATURES = 51,
    PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES = 52,
    IMAGE_FORMAT_LIST_CREATE_INFO = 1000147000,
    ATTACHMENT_DESCRIPTION_2 = 1000109000,
    ATTACHMENT_REFERENCE_2 = 1000109001,
    SUBPASS_DESCRIPTION_2 = 1000109002,
    SUBPASS_DEPENDENCY_2 = 1000109003,
    RENDER_PASS_CREATE_INFO_2 = 1000109004,
    SUBPASS_BEGIN_INFO = 1000109005,
    SUBPASS_END_INFO = 1000109006,
    PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES = 1000177000,
    PHYSICAL_DEVICE_DRIVER_PROPERTIES = 1000196000,
    PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES = 1000180000,
    PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES = 1000082000,
    PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES = 1000197000,
    DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO = 1000161000,
    PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES = 1000161001,
    PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES = 1000161002,
    DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO = 1000161003,
    DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT = 1000161004,
    PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES = 1000199000,
    SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE = 1000199001,
    PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES = 1000221000,
    IMAGE_STENCIL_USAGE_CREATE_INFO = 1000246000,
    PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES = 1000130000,
    SAMPLER_REDUCTION_MODE_CREATE_INFO = 1000130001,
    PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES = 1000211000,
    PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES = 1000108000,
    FRAMEBUFFER_ATTACHMENTS_CREATE_INFO = 1000108001,
    FRAMEBUFFER_ATTACHMENT_IMAGE_INFO = 1000108002,
    RENDER_PASS_ATTACHMENT_BEGIN_INFO = 1000108003,
    PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES = 1000253000,
    PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES = 1000175000,
    PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES = 1000241000,
    ATTACHMENT_REFERENCE_STENCIL_LAYOUT = 1000241001,
    ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT = 1000241002,
    PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES = 1000261000,
    PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES = 1000207000,
    PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES = 1000207001,
    SEMAPHORE_TYPE_CREATE_INFO = 1000207002,
    TIMELINE_SEMAPHORE_SUBMIT_INFO = 1000207003,
    SEMAPHORE_WAIT_INFO = 1000207004,
    SEMAPHORE_SIGNAL_INFO = 1000207005,
    PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES = 1000257000,
    BUFFER_DEVICE_ADDRESS_INFO = 1000244001,
    BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO = 1000257002,
    MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO = 1000257003,
    DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO = 1000257004,
    PHYSICAL_DEVICE_VULKAN_1_3_FEATURES = 53,
    PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES = 54,
    PIPELINE_CREATION_FEEDBACK_CREATE_INFO = 1000192000,
    PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES = 1000215000,
    PHYSICAL_DEVICE_TOOL_PROPERTIES = 1000245000,
    PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES = 1000276000,
    PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES = 1000295000,
    DEVICE_PRIVATE_DATA_CREATE_INFO = 1000295001,
    PRIVATE_DATA_SLOT_CREATE_INFO = 1000295002,
    PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES = 1000297000,
    MEMORY_BARRIER_2 = 1000314000,
    BUFFER_MEMORY_BARRIER_2 = 1000314001,
    IMAGE_MEMORY_BARRIER_2 = 1000314002,
    DEPENDENCY_INFO = 1000314003,
    SUBMIT_INFO_2 = 1000314004,
    SEMAPHORE_SUBMIT_INFO = 1000314005,
    COMMAND_BUFFER_SUBMIT_INFO = 1000314006,
    PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES = 1000314007,
    PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES = 1000325000,
    PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES = 1000335000,
    COPY_BUFFER_INFO_2 = 1000337000,
    COPY_IMAGE_INFO_2 = 1000337001,
    COPY_BUFFER_TO_IMAGE_INFO_2 = 1000337002,
    COPY_IMAGE_TO_BUFFER_INFO_2 = 1000337003,
    BLIT_IMAGE_INFO_2 = 1000337004,
    RESOLVE_IMAGE_INFO_2 = 1000337005,
    BUFFER_COPY_2 = 1000337006,
    IMAGE_COPY_2 = 1000337007,
    IMAGE_BLIT_2 = 1000337008,
    BUFFER_IMAGE_COPY_2 = 1000337009,
    IMAGE_RESOLVE_2 = 1000337010,
    PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES = 1000225000,
    PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO = 1000225001,
    PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES = 1000225002,
    PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES = 1000138000,
    PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES = 1000138001,
    WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK = 1000138002,
    DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO = 1000138003,
    PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES = 1000066000,
    RENDERING_INFO = 1000044000,
    RENDERING_ATTACHMENT_INFO = 1000044001,
    PIPELINE_RENDERING_CREATE_INFO = 1000044002,
    PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES = 1000044003,
    COMMAND_BUFFER_INHERITANCE_RENDERING_INFO = 1000044004,
    PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES = 1000280000,
    PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES = 1000280001,
    PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES = 1000281001,
    FORMAT_PROPERTIES_3 = 1000360000,
    PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES = 1000413000,
    PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES = 1000413001,
    DEVICE_BUFFER_MEMORY_REQUIREMENTS = 1000413002,
    DEVICE_IMAGE_MEMORY_REQUIREMENTS = 1000413003,
    PHYSICAL_DEVICE_VULKAN_1_4_FEATURES = 55,
    PHYSICAL_DEVICE_VULKAN_1_4_PROPERTIES = 56,
    DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO = 1000174000,
    PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES = 1000388000,
    QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES = 1000388001,
    PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES = 1000416000,
    PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES = 1000528000,
    PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES = 1000544000,
    PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES = 1000259000,
    PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO = 1000259001,
    PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES = 1000259002,
    PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES = 1000525000,
    PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO = 1000190001,
    PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES = 1000190002,
    PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES = 1000265000,
    MEMORY_MAP_INFO = 1000271000,
    MEMORY_UNMAP_INFO = 1000271001,
    PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES = 1000470000,
    PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES = 1000470001,
    RENDERING_AREA_INFO = 1000470003,
    DEVICE_IMAGE_SUBRESOURCE_INFO = 1000470004,
    SUBRESOURCE_LAYOUT_2 = 1000338002,
    IMAGE_SUBRESOURCE_2 = 1000338003,
    PIPELINE_CREATE_FLAGS_2_CREATE_INFO = 1000470005,
    BUFFER_USAGE_FLAGS_2_CREATE_INFO = 1000470006,
    PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES = 1000080000,
    PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES = 1000232000,
    RENDERING_ATTACHMENT_LOCATION_INFO = 1000232001,
    RENDERING_INPUT_ATTACHMENT_INDEX_INFO = 1000232002,
    PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES = 1000545000,
    PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES = 1000545001,
    BIND_MEMORY_STATUS = 1000545002,
    BIND_DESCRIPTOR_SETS_INFO = 1000545003,
    PUSH_CONSTANTS_INFO = 1000545004,
    PUSH_DESCRIPTOR_SET_INFO = 1000545005,
    PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO = 1000545006,
    PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES = 1000466000,
    PIPELINE_ROBUSTNESS_CREATE_INFO = 1000068000,
    PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES = 1000068001,
    PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES = 1000068002,
    PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES = 1000270000,
    PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES = 1000270001,
    MEMORY_TO_IMAGE_COPY = 1000270002,
    IMAGE_TO_MEMORY_COPY = 1000270003,
    COPY_IMAGE_TO_MEMORY_INFO = 1000270004,
    COPY_MEMORY_TO_IMAGE_INFO = 1000270005,
    HOST_IMAGE_LAYOUT_TRANSITION_INFO = 1000270006,
    COPY_IMAGE_TO_IMAGE_INFO = 1000270007,
    SUBRESOURCE_HOST_MEMCPY_SIZE = 1000270008,
    HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY = 1000270009,
    PHYSICAL_DEVICE_VULKAN_SC_1_0_FEATURES = 1000298000,
    PHYSICAL_DEVICE_VULKAN_SC_1_0_PROPERTIES = 1000298001,
    DEVICE_OBJECT_RESERVATION_CREATE_INFO = 1000298002,
    COMMAND_POOL_MEMORY_RESERVATION_CREATE_INFO = 1000298003,
    COMMAND_POOL_MEMORY_CONSUMPTION = 1000298004,
    PIPELINE_POOL_SIZE = 1000298005,
    FAULT_DATA = 1000298007,
    FAULT_CALLBACK_INFO = 1000298008,
    PIPELINE_OFFLINE_CREATE_INFO = 1000298010,
    SWAPCHAIN_CREATE_INFO_KHR = 1000001000,
    PRESENT_INFO_KHR = 1000001001,
    DEVICE_GROUP_PRESENT_CAPABILITIES_KHR = 1000060007,
    IMAGE_SWAPCHAIN_CREATE_INFO_KHR = 1000060008,
    BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR = 1000060009,
    ACQUIRE_NEXT_IMAGE_INFO_KHR = 1000060010,
    DEVICE_GROUP_PRESENT_INFO_KHR = 1000060011,
    DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR = 1000060012,
    DISPLAY_MODE_CREATE_INFO_KHR = 1000002000,
    DISPLAY_SURFACE_CREATE_INFO_KHR = 1000002001,
    DISPLAY_PRESENT_INFO_KHR = 1000003000,
    XLIB_SURFACE_CREATE_INFO_KHR = 1000004000,
    XCB_SURFACE_CREATE_INFO_KHR = 1000005000,
    WAYLAND_SURFACE_CREATE_INFO_KHR = 1000006000,
    ANDROID_SURFACE_CREATE_INFO_KHR = 1000008000,
    WIN32_SURFACE_CREATE_INFO_KHR = 1000009000,
    NATIVE_BUFFER_ANDROID = 1000010000,
    SWAPCHAIN_IMAGE_CREATE_INFO_ANDROID = 1000010001,
    PHYSICAL_DEVICE_PRESENTATION_PROPERTIES_ANDROID = 1000010002,
    DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT = 1000011000,
    DEBUG_REPORT_CREATE_INFO_EXT = DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT,
    PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD = 1000018000,
    DEBUG_MARKER_OBJECT_NAME_INFO_EXT = 1000022000,
    DEBUG_MARKER_OBJECT_TAG_INFO_EXT = 1000022001,
    DEBUG_MARKER_MARKER_INFO_EXT = 1000022002,
    VIDEO_PROFILE_INFO_KHR = 1000023000,
    VIDEO_CAPABILITIES_KHR = 1000023001,
    VIDEO_PICTURE_RESOURCE_INFO_KHR = 1000023002,
    VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR = 1000023003,
    BIND_VIDEO_SESSION_MEMORY_INFO_KHR = 1000023004,
    VIDEO_SESSION_CREATE_INFO_KHR = 1000023005,
    VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000023006,
    VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR = 1000023007,
    VIDEO_BEGIN_CODING_INFO_KHR = 1000023008,
    VIDEO_END_CODING_INFO_KHR = 1000023009,
    VIDEO_CODING_CONTROL_INFO_KHR = 1000023010,
    VIDEO_REFERENCE_SLOT_INFO_KHR = 1000023011,
    QUEUE_FAMILY_VIDEO_PROPERTIES_KHR = 1000023012,
    VIDEO_PROFILE_LIST_INFO_KHR = 1000023013,
    PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR = 1000023014,
    VIDEO_FORMAT_PROPERTIES_KHR = 1000023015,
    QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR = 1000023016,
    VIDEO_DECODE_INFO_KHR = 1000024000,
    VIDEO_DECODE_CAPABILITIES_KHR = 1000024001,
    VIDEO_DECODE_USAGE_INFO_KHR = 1000024002,
    DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV = 1000026000,
    DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV = 1000026001,
    DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV = 1000026002,
    PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT = 1000028000,
    PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT = 1000028001,
    PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT = 1000028002,
    CU_MODULE_CREATE_INFO_NVX = 1000029000,
    CU_FUNCTION_CREATE_INFO_NVX = 1000029001,
    CU_LAUNCH_INFO_NVX = 1000029002,
    CU_MODULE_TEXTURING_MODE_CREATE_INFO_NVX = 1000029004,
    IMAGE_VIEW_HANDLE_INFO_NVX = 1000030000,
    IMAGE_VIEW_ADDRESS_PROPERTIES_NVX = 1000030001,
    VIDEO_ENCODE_H264_CAPABILITIES_KHR = 1000038000,
    VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000038001,
    VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR = 1000038002,
    VIDEO_ENCODE_H264_PICTURE_INFO_KHR = 1000038003,
    VIDEO_ENCODE_H264_DPB_SLOT_INFO_KHR = 1000038004,
    VIDEO_ENCODE_H264_NALU_SLICE_INFO_KHR = 1000038005,
    VIDEO_ENCODE_H264_GOP_REMAINING_FRAME_INFO_KHR = 1000038006,
    VIDEO_ENCODE_H264_PROFILE_INFO_KHR = 1000038007,
    VIDEO_ENCODE_H264_RATE_CONTROL_INFO_KHR = 1000038008,
    VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_KHR = 1000038009,
    VIDEO_ENCODE_H264_SESSION_CREATE_INFO_KHR = 1000038010,
    VIDEO_ENCODE_H264_QUALITY_LEVEL_PROPERTIES_KHR = 1000038011,
    VIDEO_ENCODE_H264_SESSION_PARAMETERS_GET_INFO_KHR = 1000038012,
    VIDEO_ENCODE_H264_SESSION_PARAMETERS_FEEDBACK_INFO_KHR = 1000038013,
    VIDEO_ENCODE_H265_CAPABILITIES_KHR = 1000039000,
    VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000039001,
    VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR = 1000039002,
    VIDEO_ENCODE_H265_PICTURE_INFO_KHR = 1000039003,
    VIDEO_ENCODE_H265_DPB_SLOT_INFO_KHR = 1000039004,
    VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_INFO_KHR = 1000039005,
    VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR = 1000039006,
    VIDEO_ENCODE_H265_PROFILE_INFO_KHR = 1000039007,
    VIDEO_ENCODE_H265_RATE_CONTROL_INFO_KHR = 1000039009,
    VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_KHR = 1000039010,
    VIDEO_ENCODE_H265_SESSION_CREATE_INFO_KHR = 1000039011,
    VIDEO_ENCODE_H265_QUALITY_LEVEL_PROPERTIES_KHR = 1000039012,
    VIDEO_ENCODE_H265_SESSION_PARAMETERS_GET_INFO_KHR = 1000039013,
    VIDEO_ENCODE_H265_SESSION_PARAMETERS_FEEDBACK_INFO_KHR = 1000039014,
    VIDEO_DECODE_H264_CAPABILITIES_KHR = 1000040000,
    VIDEO_DECODE_H264_PICTURE_INFO_KHR = 1000040001,
    VIDEO_DECODE_H264_PROFILE_INFO_KHR = 1000040003,
    VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000040004,
    VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR = 1000040005,
    VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR = 1000040006,
    TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD = 1000041000,
    RENDERING_INFO_KHR = RENDERING_INFO,
    RENDERING_ATTACHMENT_INFO_KHR = RENDERING_ATTACHMENT_INFO,
    PIPELINE_RENDERING_CREATE_INFO_KHR = PIPELINE_RENDERING_CREATE_INFO,
    PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR = PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES,
    COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR = COMMAND_BUFFER_INHERITANCE_RENDERING_INFO,
    PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV = 1000050000,
    PRIVATE_VENDOR_INFO_PLACEHOLDER_OFFSET_0_NV = 1000051000,
    RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR = RENDER_PASS_MULTIVIEW_CREATE_INFO,
    PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR = PHYSICAL_DEVICE_MULTIVIEW_FEATURES,
    PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR = PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES,
    EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV = 1000056000,
    EXPORT_MEMORY_ALLOCATE_INFO_NV = 1000056001,
    IMPORT_MEMORY_WIN32_HANDLE_INFO_NV = 1000057000,
    EXPORT_MEMORY_WIN32_HANDLE_INFO_NV = 1000057001,
    WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV = 1000058000,
    PHYSICAL_DEVICE_FEATURES_2_KHR = PHYSICAL_DEVICE_FEATURES_2,
    PHYSICAL_DEVICE_PROPERTIES_2_KHR = PHYSICAL_DEVICE_PROPERTIES_2,
    FORMAT_PROPERTIES_2_KHR = FORMAT_PROPERTIES_2,
    IMAGE_FORMAT_PROPERTIES_2_KHR = IMAGE_FORMAT_PROPERTIES_2,
    PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR = PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2,
    QUEUE_FAMILY_PROPERTIES_2_KHR = QUEUE_FAMILY_PROPERTIES_2,
    PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR = PHYSICAL_DEVICE_MEMORY_PROPERTIES_2,
    SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR = SPARSE_IMAGE_FORMAT_PROPERTIES_2,
    PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR = PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2,
    MEMORY_ALLOCATE_FLAGS_INFO_KHR = MEMORY_ALLOCATE_FLAGS_INFO,
    DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR = DEVICE_GROUP_RENDER_PASS_BEGIN_INFO,
    DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR = DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO,
    DEVICE_GROUP_SUBMIT_INFO_KHR = DEVICE_GROUP_SUBMIT_INFO,
    DEVICE_GROUP_BIND_SPARSE_INFO_KHR = DEVICE_GROUP_BIND_SPARSE_INFO,
    BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR = BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO,
    BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR = BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO,
    VALIDATION_FLAGS_EXT = 1000061000,
    VI_SURFACE_CREATE_INFO_NN = 1000062000,
    PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT = PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES,
    IMAGE_VIEW_ASTC_DECODE_MODE_EXT = 1000067000,
    PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT = 1000067001,
    PIPELINE_ROBUSTNESS_CREATE_INFO_EXT = PIPELINE_ROBUSTNESS_CREATE_INFO,
    PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT = PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES,
    PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT = PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES,
    PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR = PHYSICAL_DEVICE_GROUP_PROPERTIES,
    DEVICE_GROUP_DEVICE_CREATE_INFO_KHR = DEVICE_GROUP_DEVICE_CREATE_INFO,
    PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR = PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO,
    EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR = EXTERNAL_IMAGE_FORMAT_PROPERTIES,
    PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR = PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO,
    EXTERNAL_BUFFER_PROPERTIES_KHR = EXTERNAL_BUFFER_PROPERTIES,
    PHYSICAL_DEVICE_ID_PROPERTIES_KHR = PHYSICAL_DEVICE_ID_PROPERTIES,
    EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR = EXTERNAL_MEMORY_BUFFER_CREATE_INFO,
    EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR = EXTERNAL_MEMORY_IMAGE_CREATE_INFO,
    EXPORT_MEMORY_ALLOCATE_INFO_KHR = EXPORT_MEMORY_ALLOCATE_INFO,
    IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR = 1000073000,
    EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR = 1000073001,
    MEMORY_WIN32_HANDLE_PROPERTIES_KHR = 1000073002,
    MEMORY_GET_WIN32_HANDLE_INFO_KHR = 1000073003,
    IMPORT_MEMORY_FD_INFO_KHR = 1000074000,
    MEMORY_FD_PROPERTIES_KHR = 1000074001,
    MEMORY_GET_FD_INFO_KHR = 1000074002,
    WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR = 1000075000,
    PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR = PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO,
    EXTERNAL_SEMAPHORE_PROPERTIES_KHR = EXTERNAL_SEMAPHORE_PROPERTIES,
    EXPORT_SEMAPHORE_CREATE_INFO_KHR = EXPORT_SEMAPHORE_CREATE_INFO,
    IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = 1000078000,
    EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = 1000078001,
    D3D12_FENCE_SUBMIT_INFO_KHR = 1000078002,
    SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR = 1000078003,
    IMPORT_SEMAPHORE_FD_INFO_KHR = 1000079000,
    SEMAPHORE_GET_FD_INFO_KHR = 1000079001,
    PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR = PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES,
    COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT = 1000081000,
    PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT = 1000081001,
    CONDITIONAL_RENDERING_BEGIN_INFO_EXT = 1000081002,
    PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR = PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,
    PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR = PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,
    PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR = PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES,
    PRESENT_REGIONS_KHR = 1000084000,
    DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR = DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO,
    PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV = 1000087000,
    SURFACE_CAPABILITIES_2_EXT = 1000090000,
    SURFACE_CAPABILITIES2_EXT = SURFACE_CAPABILITIES_2_EXT,
    DISPLAY_POWER_INFO_EXT = 1000091000,
    DEVICE_EVENT_INFO_EXT = 1000091001,
    DISPLAY_EVENT_INFO_EXT = 1000091002,
    SWAPCHAIN_COUNTER_CREATE_INFO_EXT = 1000091003,
    PRESENT_TIMES_INFO_GOOGLE = 1000092000,
    PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX = 1000097000,
    MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX = 1000044009,
    PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV = 1000098000,
    PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT = 1000099000,
    PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT = 1000099001,
    PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT = 1000101000,
    PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT = 1000101001,
    PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT = 1000102000,
    PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT = 1000102001,
    HDR_METADATA_EXT = 1000105000,
    PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR = PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES,
    FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR = FRAMEBUFFER_ATTACHMENTS_CREATE_INFO,
    FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR = FRAMEBUFFER_ATTACHMENT_IMAGE_INFO,
    RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR = RENDER_PASS_ATTACHMENT_BEGIN_INFO,
    ATTACHMENT_DESCRIPTION_2_KHR = ATTACHMENT_DESCRIPTION_2,
    ATTACHMENT_REFERENCE_2_KHR = ATTACHMENT_REFERENCE_2,
    SUBPASS_DESCRIPTION_2_KHR = SUBPASS_DESCRIPTION_2,
    SUBPASS_DEPENDENCY_2_KHR = SUBPASS_DEPENDENCY_2,
    RENDER_PASS_CREATE_INFO_2_KHR = RENDER_PASS_CREATE_INFO_2,
    SUBPASS_BEGIN_INFO_KHR = SUBPASS_BEGIN_INFO,
    SUBPASS_END_INFO_KHR = SUBPASS_END_INFO,
    PHYSICAL_DEVICE_RELAXED_LINE_RASTERIZATION_FEATURES_IMG = 1000110000,
    SHARED_PRESENT_SURFACE_CAPABILITIES_KHR = 1000111000,
    PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR = PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO,
    EXTERNAL_FENCE_PROPERTIES_KHR = EXTERNAL_FENCE_PROPERTIES,
    EXPORT_FENCE_CREATE_INFO_KHR = EXPORT_FENCE_CREATE_INFO,
    IMPORT_FENCE_WIN32_HANDLE_INFO_KHR = 1000114000,
    EXPORT_FENCE_WIN32_HANDLE_INFO_KHR = 1000114001,
    FENCE_GET_WIN32_HANDLE_INFO_KHR = 1000114002,
    IMPORT_FENCE_FD_INFO_KHR = 1000115000,
    FENCE_GET_FD_INFO_KHR = 1000115001,
    PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR = 1000116000,
    PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR = 1000116001,
    QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR = 1000116002,
    PERFORMANCE_QUERY_SUBMIT_INFO_KHR = 1000116003,
    ACQUIRE_PROFILING_LOCK_INFO_KHR = 1000116004,
    PERFORMANCE_COUNTER_KHR = 1000116005,
    PERFORMANCE_COUNTER_DESCRIPTION_KHR = 1000116006,
    PERFORMANCE_QUERY_RESERVATION_INFO_KHR = 1000116007,
    PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR = PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES,
    RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR = RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO,
    IMAGE_VIEW_USAGE_CREATE_INFO_KHR = IMAGE_VIEW_USAGE_CREATE_INFO,
    PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR = PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO,
    PHYSICAL_DEVICE_SURFACE_INFO_2_KHR = 1000119000,
    SURFACE_CAPABILITIES_2_KHR = 1000119001,
    SURFACE_FORMAT_2_KHR = 1000119002,
    PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR = PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,
    PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR = PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR,
    DISPLAY_PROPERTIES_2_KHR = 1000121000,
    DISPLAY_PLANE_PROPERTIES_2_KHR = 1000121001,
    DISPLAY_MODE_PROPERTIES_2_KHR = 1000121002,
    DISPLAY_PLANE_INFO_2_KHR = 1000121003,
    DISPLAY_PLANE_CAPABILITIES_2_KHR = 1000121004,
    IOS_SURFACE_CREATE_INFO_MVK = 1000122000,
    MACOS_SURFACE_CREATE_INFO_MVK = 1000123000,
    MEMORY_DEDICATED_REQUIREMENTS_KHR = MEMORY_DEDICATED_REQUIREMENTS,
    MEMORY_DEDICATED_ALLOCATE_INFO_KHR = MEMORY_DEDICATED_ALLOCATE_INFO,
    DEBUG_UTILS_OBJECT_NAME_INFO_EXT = 1000128000,
    DEBUG_UTILS_OBJECT_TAG_INFO_EXT = 1000128001,
    DEBUG_UTILS_LABEL_EXT = 1000128002,
    DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT = 1000128003,
    DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT = 1000128004,
    ANDROID_HARDWARE_BUFFER_USAGE_ANDROID = 1000129000,
    ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID = 1000129001,
    ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID = 1000129002,
    IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = 1000129003,
    MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = 1000129004,
    EXTERNAL_FORMAT_ANDROID = 1000129005,
    ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID = 1000129006,
    PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT = PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES,
    SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT = SAMPLER_REDUCTION_MODE_CREATE_INFO,
    PHYSICAL_DEVICE_SHADER_ENQUEUE_FEATURES_AMDX = 1000134000,
    PHYSICAL_DEVICE_SHADER_ENQUEUE_PROPERTIES_AMDX = 1000134001,
    EXECUTION_GRAPH_PIPELINE_SCRATCH_SIZE_AMDX = 1000134002,
    EXECUTION_GRAPH_PIPELINE_CREATE_INFO_AMDX = 1000134003,
    PIPELINE_SHADER_STAGE_NODE_CREATE_INFO_AMDX = 1000134004,
    ATTACHMENT_SAMPLE_COUNT_INFO_AMD = 1000044008,
    PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT = PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES,
    PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT = PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES,
    WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT = WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK,
    DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT = DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO,
    PHYSICAL_DEVICE_SHADER_BFLOAT16_FEATURES_KHR = 1000141000,
    SAMPLE_LOCATIONS_INFO_EXT = 1000143000,
    RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT = 1000143001,
    PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT = 1000143002,
    PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT = 1000143003,
    MULTISAMPLE_PROPERTIES_EXT = 1000143004,
    BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR = BUFFER_MEMORY_REQUIREMENTS_INFO_2,
    IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR = IMAGE_MEMORY_REQUIREMENTS_INFO_2,
    IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR = IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2,
    MEMORY_REQUIREMENTS_2_KHR = MEMORY_REQUIREMENTS_2,
    SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR = SPARSE_IMAGE_MEMORY_REQUIREMENTS_2,
    IMAGE_FORMAT_LIST_CREATE_INFO_KHR = IMAGE_FORMAT_LIST_CREATE_INFO,
    PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT = 1000148000,
    PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT = 1000148001,
    PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT = 1000148002,
    PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV = 1000149000,
    WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR = 1000150007,
    ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR = 1000150000,
    ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR = 1000150002,
    ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR = 1000150003,
    ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR = 1000150004,
    ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR = 1000150005,
    ACCELERATION_STRUCTURE_GEOMETRY_KHR = 1000150006,
    ACCELERATION_STRUCTURE_VERSION_INFO_KHR = 1000150009,
    COPY_ACCELERATION_STRUCTURE_INFO_KHR = 1000150010,
    COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR = 1000150011,
    COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR = 1000150012,
    PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR = 1000150013,
    PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR = 1000150014,
    ACCELERATION_STRUCTURE_CREATE_INFO_KHR = 1000150017,
    ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR = 1000150020,
    PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR = 1000347000,
    PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR = 1000347001,
    RAY_TRACING_PIPELINE_CREATE_INFO_KHR = 1000150015,
    RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR = 1000150016,
    RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR = 1000150018,
    PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR = 1000348013,
    PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV = 1000152000,
    ATTACHMENT_SAMPLE_COUNT_INFO_NV = ATTACHMENT_SAMPLE_COUNT_INFO_AMD,
    PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV = 1000154000,
    PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV = 1000154001,
    SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR = SAMPLER_YCBCR_CONVERSION_CREATE_INFO,
    SAMPLER_YCBCR_CONVERSION_INFO_KHR = SAMPLER_YCBCR_CONVERSION_INFO,
    BIND_IMAGE_PLANE_MEMORY_INFO_KHR = BIND_IMAGE_PLANE_MEMORY_INFO,
    IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR = IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO,
    PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR = PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES,
    SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR = SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES,
    BIND_BUFFER_MEMORY_INFO_KHR = BIND_BUFFER_MEMORY_INFO,
    BIND_IMAGE_MEMORY_INFO_KHR = BIND_IMAGE_MEMORY_INFO,
    DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT = 1000158000,
    PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT = 1000158002,
    IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT = 1000158003,
    IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT = 1000158004,
    IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT = 1000158005,
    DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT = 1000158006,
    VALIDATION_CACHE_CREATE_INFO_EXT = 1000160000,
    SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT = 1000160001,
    DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT = DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO,
    PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT = PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES,
    PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT = PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES,
    DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT = DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO,
    DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT = DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT,
    PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR = 1000163000,
    PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES_KHR = 1000163001,
    PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV = 1000164000,
    PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV = 1000164001,
    PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV = 1000164002,
    PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV = 1000164005,
    RAY_TRACING_PIPELINE_CREATE_INFO_NV = 1000165000,
    ACCELERATION_STRUCTURE_CREATE_INFO_NV = 1000165001,
    GEOMETRY_NV = 1000165003,
    GEOMETRY_TRIANGLES_NV = 1000165004,
    GEOMETRY_AABB_NV = 1000165005,
    BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV = 1000165006,
    WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV = 1000165007,
    ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV = 1000165008,
    PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV = 1000165009,
    RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV = 1000165011,
    ACCELERATION_STRUCTURE_INFO_NV = 1000165012,
    PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV = 1000166000,
    PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV = 1000166001,
    PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR = PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES,
    DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR = DESCRIPTOR_SET_LAYOUT_SUPPORT,
    PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT = 1000170000,
    FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT = 1000170001,
    DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT = DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO,
    PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR = PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES,
    PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR = PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES,
    IMPORT_MEMORY_HOST_POINTER_INFO_EXT = 1000178000,
    MEMORY_HOST_POINTER_PROPERTIES_EXT = 1000178001,
    PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT = 1000178002,
    PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR = PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES,
    PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR = 1000181000,
    PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD = 1000183000,
    CALIBRATED_TIMESTAMP_INFO_EXT = CALIBRATED_TIMESTAMP_INFO_KHR,
    PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD = 1000185000,
    VIDEO_DECODE_H265_CAPABILITIES_KHR = 1000187000,
    VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000187001,
    VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR = 1000187002,
    VIDEO_DECODE_H265_PROFILE_INFO_KHR = 1000187003,
    VIDEO_DECODE_H265_PICTURE_INFO_KHR = 1000187004,
    VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR = 1000187005,
    DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR = DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO,
    PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR = PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES,
    QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR = QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES,
    DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD = 1000189000,
    PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT = 1000190000,
    PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT = PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO,
    PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT = PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES,
    PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT = PIPELINE_CREATION_FEEDBACK_CREATE_INFO,
    PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR = PHYSICAL_DEVICE_DRIVER_PROPERTIES,
    PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR = PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES,
    PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR = PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES,
    SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR = SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE,
    PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV = PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_KHR,
    PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV = 1000202000,
    PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV = 1000202001,
    PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV = PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR,
    PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV = 1000204000,
    PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV = 1000205000,
    PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV = 1000205002,
    CHECKPOINT_DATA_NV = 1000206000,
    QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV = 1000206001,
    QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV = 1000314008,
    CHECKPOINT_DATA_2_NV = 1000314009,
    PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR = PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES,
    PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR = PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES,
    SEMAPHORE_TYPE_CREATE_INFO_KHR = SEMAPHORE_TYPE_CREATE_INFO,
    TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR = TIMELINE_SEMAPHORE_SUBMIT_INFO,
    SEMAPHORE_WAIT_INFO_KHR = SEMAPHORE_WAIT_INFO,
    SEMAPHORE_SIGNAL_INFO_KHR = SEMAPHORE_SIGNAL_INFO,
    PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL = 1000209000,
    QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL = 1000210000,
    QUERY_POOL_CREATE_INFO_INTEL = QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL,
    INITIALIZE_PERFORMANCE_API_INFO_INTEL = 1000210001,
    PERFORMANCE_MARKER_INFO_INTEL = 1000210002,
    PERFORMANCE_STREAM_MARKER_INFO_INTEL = 1000210003,
    PERFORMANCE_OVERRIDE_INFO_INTEL = 1000210004,
    PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL = 1000210005,
    PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR = PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES,
    PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT = 1000212000,
    DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD = 1000213000,
    SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD = 1000213001,
    IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA = 1000214000,
    PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR = PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES,
    METAL_SURFACE_CREATE_INFO_EXT = 1000217000,
    PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT = 1000218000,
    PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT = 1000218001,
    RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT = 1000218002,
    RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT = 1000044007,
    PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT = PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES,
    PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT = PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES,
    PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT = PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,
    PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT = PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES,
    FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = 1000226000,
    PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR = 1000226001,
    PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR = 1000226002,
    PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR = 1000226003,
    PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR = 1000226004,
    RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = 1000044006,
    PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD = 1000227000,
    PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD = 1000229000,
    PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES_KHR = PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES,
    RENDERING_ATTACHMENT_LOCATION_INFO_KHR = RENDERING_ATTACHMENT_LOCATION_INFO,
    RENDERING_INPUT_ATTACHMENT_INDEX_INFO_KHR = RENDERING_INPUT_ATTACHMENT_INDEX_INFO,
    PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT = 1000234000,
    PHYSICAL_DEVICE_SHADER_QUAD_CONTROL_FEATURES_KHR = 1000235000,
    PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT = 1000237000,
    PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT = 1000238000,
    MEMORY_PRIORITY_ALLOCATE_INFO_EXT = 1000238001,
    SURFACE_PROTECTED_CAPABILITIES_KHR = 1000239000,
    PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV = 1000240000,
    PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR = PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES,
    ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR = ATTACHMENT_REFERENCE_STENCIL_LAYOUT,
    ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR = ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT,
    PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT = 1000244000,
    PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT = PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT,
    BUFFER_DEVICE_ADDRESS_INFO_EXT = BUFFER_DEVICE_ADDRESS_INFO,
    BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT = 1000244002,
    PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT = PHYSICAL_DEVICE_TOOL_PROPERTIES,
    IMAGE_STENCIL_USAGE_CREATE_INFO_EXT = IMAGE_STENCIL_USAGE_CREATE_INFO,
    VALIDATION_FEATURES_EXT = 1000247000,
    PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR = 1000248000,
    PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV = 1000249000,
    COOPERATIVE_MATRIX_PROPERTIES_NV = 1000249001,
    PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV = 1000249002,
    PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV = 1000250000,
    PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV = 1000250001,
    FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV = 1000250002,
    PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT = 1000251000,
    PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT = 1000252000,
    PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR = PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES,
    PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT = 1000254000,
    PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT = 1000254001,
    PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT = 1000254002,
    SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT = 1000255000,
    SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT = 1000255002,
    SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT = 1000255001,
    HEADLESS_SURFACE_CREATE_INFO_EXT = 1000256000,
    PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR = PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES,
    BUFFER_DEVICE_ADDRESS_INFO_KHR = BUFFER_DEVICE_ADDRESS_INFO,
    BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR = BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO,
    MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR = MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO,
    DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR = DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO,
    PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT = PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES,
    PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT = PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO,
    PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT = PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES,
    PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT = 1000260000,
    PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT = PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES,
    PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT = PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES,
    PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT = 1000267000,
    PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR = 1000269000,
    PIPELINE_INFO_KHR = 1000269001,
    PIPELINE_EXECUTABLE_PROPERTIES_KHR = 1000269002,
    PIPELINE_EXECUTABLE_INFO_KHR = 1000269003,
    PIPELINE_EXECUTABLE_STATISTIC_KHR = 1000269004,
    PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR = 1000269005,
    PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES_EXT = PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES,
    PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES_EXT = PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES,
    MEMORY_TO_IMAGE_COPY_EXT = MEMORY_TO_IMAGE_COPY,
    IMAGE_TO_MEMORY_COPY_EXT = IMAGE_TO_MEMORY_COPY,
    COPY_IMAGE_TO_MEMORY_INFO_EXT = COPY_IMAGE_TO_MEMORY_INFO,
    COPY_MEMORY_TO_IMAGE_INFO_EXT = COPY_MEMORY_TO_IMAGE_INFO,
    HOST_IMAGE_LAYOUT_TRANSITION_INFO_EXT = HOST_IMAGE_LAYOUT_TRANSITION_INFO,
    COPY_IMAGE_TO_IMAGE_INFO_EXT = COPY_IMAGE_TO_IMAGE_INFO,
    SUBRESOURCE_HOST_MEMCPY_SIZE_EXT = SUBRESOURCE_HOST_MEMCPY_SIZE,
    HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY_EXT = HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY,
    MEMORY_MAP_INFO_KHR = MEMORY_MAP_INFO,
    MEMORY_UNMAP_INFO_KHR = MEMORY_UNMAP_INFO,
    PHYSICAL_DEVICE_MAP_MEMORY_PLACED_FEATURES_EXT = 1000272000,
    PHYSICAL_DEVICE_MAP_MEMORY_PLACED_PROPERTIES_EXT = 1000272001,
    MEMORY_MAP_PLACED_INFO_EXT = 1000272002,
    PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT = 1000273000,
    SURFACE_PRESENT_MODE_EXT = SURFACE_PRESENT_MODE_KHR,
    SURFACE_PRESENT_SCALING_CAPABILITIES_EXT = SURFACE_PRESENT_SCALING_CAPABILITIES_KHR,
    SURFACE_PRESENT_MODE_COMPATIBILITY_EXT = SURFACE_PRESENT_MODE_COMPATIBILITY_KHR,
    PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT = PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_KHR,
    SWAPCHAIN_PRESENT_FENCE_INFO_EXT = SWAPCHAIN_PRESENT_FENCE_INFO_KHR,
    SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT = SWAPCHAIN_PRESENT_MODES_CREATE_INFO_KHR,
    SWAPCHAIN_PRESENT_MODE_INFO_EXT = SWAPCHAIN_PRESENT_MODE_INFO_KHR,
    SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT = SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_KHR,
    RELEASE_SWAPCHAIN_IMAGES_INFO_EXT = RELEASE_SWAPCHAIN_IMAGES_INFO_KHR,
    PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT = PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES,
    PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV = 1000277000,
    GRAPHICS_SHADER_GROUP_CREATE_INFO_NV = 1000277001,
    GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV = 1000277002,
    INDIRECT_COMMANDS_LAYOUT_TOKEN_NV = 1000277003,
    INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV = 1000277004,
    GENERATED_COMMANDS_INFO_NV = 1000277005,
    GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV = 1000277006,
    PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV = 1000277007,
    PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV = 1000278000,
    COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV = 1000278001,
    PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR = PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES,
    PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR = PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES,
    PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT = 1000281000,
    PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT = PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES,
    COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM = 1000282000,
    RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM = 1000282001,
    PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT = 1000283000,
    DEPTH_BIAS_INFO_EXT = 1000283001,
    DEPTH_BIAS_REPRESENTATION_INFO_EXT = 1000283002,
    PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT = 1000284000,
    DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT = 1000284001,
    DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT = 1000284002,
    PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT = PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_KHR,
    PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT = PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_KHR,
    SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT = 1000287000,
    PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT = 1000287001,
    PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT = 1000287002,
    PIPELINE_LIBRARY_CREATE_INFO_KHR = 1000290000,
    PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV = 1000292000,
    SURFACE_CAPABILITIES_PRESENT_BARRIER_NV = 1000292001,
    SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV = 1000292002,
    PRESENT_ID_KHR = 1000294000,
    PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR = 1000294001,
    PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT = PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES,
    DEVICE_PRIVATE_DATA_CREATE_INFO_EXT = DEVICE_PRIVATE_DATA_CREATE_INFO,
    PRIVATE_DATA_SLOT_CREATE_INFO_EXT = PRIVATE_DATA_SLOT_CREATE_INFO,
    PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT = PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES,
    VIDEO_ENCODE_INFO_KHR = 1000299000,
    VIDEO_ENCODE_RATE_CONTROL_INFO_KHR = 1000299001,
    VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR = 1000299002,
    VIDEO_ENCODE_CAPABILITIES_KHR = 1000299003,
    VIDEO_ENCODE_USAGE_INFO_KHR = 1000299004,
    QUERY_POOL_VIDEO_ENCODE_FEEDBACK_CREATE_INFO_KHR = 1000299005,
    PHYSICAL_DEVICE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR = 1000299006,
    VIDEO_ENCODE_QUALITY_LEVEL_PROPERTIES_KHR = 1000299007,
    VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR = 1000299008,
    VIDEO_ENCODE_SESSION_PARAMETERS_GET_INFO_KHR = 1000299009,
    VIDEO_ENCODE_SESSION_PARAMETERS_FEEDBACK_INFO_KHR = 1000299010,
    PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV = 1000300000,
    DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV = 1000300001,
    CUDA_MODULE_CREATE_INFO_NV = 1000307000,
    CUDA_FUNCTION_CREATE_INFO_NV = 1000307001,
    CUDA_LAUNCH_INFO_NV = 1000307002,
    PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_FEATURES_NV = 1000307003,
    PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_PROPERTIES_NV = 1000307004,
    REFRESH_OBJECT_LIST_KHR = 1000308000,
    PHYSICAL_DEVICE_TILE_SHADING_FEATURES_QCOM = 1000309000,
    PHYSICAL_DEVICE_TILE_SHADING_PROPERTIES_QCOM = 1000309001,
    RENDER_PASS_TILE_SHADING_CREATE_INFO_QCOM = 1000309002,
    PER_TILE_BEGIN_INFO_QCOM = 1000309003,
    PER_TILE_END_INFO_QCOM = 1000309004,
    DISPATCH_TILE_INFO_QCOM = 1000309005,
    QUERY_LOW_LATENCY_SUPPORT_NV = 1000310000,
    EXPORT_METAL_OBJECT_CREATE_INFO_EXT = 1000311000,
    EXPORT_METAL_OBJECTS_INFO_EXT = 1000311001,
    EXPORT_METAL_DEVICE_INFO_EXT = 1000311002,
    EXPORT_METAL_COMMAND_QUEUE_INFO_EXT = 1000311003,
    EXPORT_METAL_BUFFER_INFO_EXT = 1000311004,
    IMPORT_METAL_BUFFER_INFO_EXT = 1000311005,
    EXPORT_METAL_TEXTURE_INFO_EXT = 1000311006,
    IMPORT_METAL_TEXTURE_INFO_EXT = 1000311007,
    EXPORT_METAL_IO_SURFACE_INFO_EXT = 1000311008,
    IMPORT_METAL_IO_SURFACE_INFO_EXT = 1000311009,
    EXPORT_METAL_SHARED_EVENT_INFO_EXT = 1000311010,
    IMPORT_METAL_SHARED_EVENT_INFO_EXT = 1000311011,
    MEMORY_BARRIER_2_KHR = MEMORY_BARRIER_2,
    BUFFER_MEMORY_BARRIER_2_KHR = BUFFER_MEMORY_BARRIER_2,
    IMAGE_MEMORY_BARRIER_2_KHR = IMAGE_MEMORY_BARRIER_2,
    DEPENDENCY_INFO_KHR = DEPENDENCY_INFO,
    SUBMIT_INFO_2_KHR = SUBMIT_INFO_2,
    SEMAPHORE_SUBMIT_INFO_KHR = SEMAPHORE_SUBMIT_INFO,
    COMMAND_BUFFER_SUBMIT_INFO_KHR = COMMAND_BUFFER_SUBMIT_INFO,
    PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR = PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES,
    PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT = 1000316000,
    PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT = 1000316001,
    PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT = 1000316002,
    DESCRIPTOR_ADDRESS_INFO_EXT = 1000316003,
    DESCRIPTOR_GET_INFO_EXT = 1000316004,
    BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316005,
    IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316006,
    IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316007,
    SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316008,
    OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT = 1000316010,
    DESCRIPTOR_BUFFER_BINDING_INFO_EXT = 1000316011,
    DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT = 1000316012,
    ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316009,
    PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT = 1000320000,
    PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT = 1000320001,
    GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT = 1000320002,
    PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD = 1000321000,
    PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR = 1000203000,
    PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR = 1000322000,
    PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR = 1000323000,
    PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR = PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES,
    PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV = 1000326000,
    PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV = 1000326001,
    PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV = 1000326002,
    ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV = 1000327000,
    PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV = 1000327001,
    ACCELERATION_STRUCTURE_MOTION_INFO_NV = 1000327002,
    PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT = 1000328000,
    PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT = 1000328001,
    PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT = 1000330000,
    PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT = 1000332000,
    PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT = 1000332001,
    COPY_COMMAND_TRANSFORM_INFO_QCOM = 1000333000,
    PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT = PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES,
    PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR = 1000336000,
    COPY_BUFFER_INFO_2_KHR = COPY_BUFFER_INFO_2,
    COPY_IMAGE_INFO_2_KHR = COPY_IMAGE_INFO_2,
    COPY_BUFFER_TO_IMAGE_INFO_2_KHR = COPY_BUFFER_TO_IMAGE_INFO_2,
    COPY_IMAGE_TO_BUFFER_INFO_2_KHR = COPY_IMAGE_TO_BUFFER_INFO_2,
    BLIT_IMAGE_INFO_2_KHR = BLIT_IMAGE_INFO_2,
    RESOLVE_IMAGE_INFO_2_KHR = RESOLVE_IMAGE_INFO_2,
    BUFFER_COPY_2_KHR = BUFFER_COPY_2,
    IMAGE_COPY_2_KHR = IMAGE_COPY_2,
    IMAGE_BLIT_2_KHR = IMAGE_BLIT_2,
    BUFFER_IMAGE_COPY_2_KHR = BUFFER_IMAGE_COPY_2,
    IMAGE_RESOLVE_2_KHR = IMAGE_RESOLVE_2,
    PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT = 1000338000,
    IMAGE_COMPRESSION_CONTROL_EXT = 1000338001,
    SUBRESOURCE_LAYOUT_2_EXT = SUBRESOURCE_LAYOUT_2,
    IMAGE_SUBRESOURCE_2_EXT = IMAGE_SUBRESOURCE_2,
    IMAGE_COMPRESSION_PROPERTIES_EXT = 1000338004,
    PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT = 1000339000,
    PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT = 1000340000,
    PHYSICAL_DEVICE_FAULT_FEATURES_EXT = 1000341000,
    DEVICE_FAULT_COUNTS_EXT = 1000341001,
    DEVICE_FAULT_INFO_EXT = 1000341002,
    PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM = PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT,
    PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT = 1000344000,
    DIRECTFB_SURFACE_CREATE_INFO_EXT = 1000346000,
    PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE = PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT,
    MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE = MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT,
    PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT = 1000352000,
    VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT = 1000352001,
    VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT = 1000352002,
    PHYSICAL_DEVICE_DRM_PROPERTIES_EXT = 1000353000,
    PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT = 1000354000,
    DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT = 1000354001,
    PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT = 1000355000,
    PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT = 1000355001,
    PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT = 1000356000,
    FORMAT_PROPERTIES_3_KHR = FORMAT_PROPERTIES_3,
    PHYSICAL_DEVICE_PRESENT_MODE_FIFO_LATEST_READY_FEATURES_EXT = PHYSICAL_DEVICE_PRESENT_MODE_FIFO_LATEST_READY_FEATURES_KHR,
    IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA = 1000364000,
    MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA = 1000364001,
    MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA = 1000364002,
    IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA = 1000365000,
    SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA = 1000365001,
    BUFFER_COLLECTION_CREATE_INFO_FUCHSIA = 1000366000,
    IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA = 1000366001,
    BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA = 1000366002,
    BUFFER_COLLECTION_PROPERTIES_FUCHSIA = 1000366003,
    BUFFER_CONSTRAINTS_INFO_FUCHSIA = 1000366004,
    BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA = 1000366005,
    IMAGE_CONSTRAINTS_INFO_FUCHSIA = 1000366006,
    IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA = 1000366007,
    SYSMEM_COLOR_SPACE_FUCHSIA = 1000366008,
    BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA = 1000366009,
    SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI = 1000369000,
    PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI = 1000369001,
    PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI = 1000369002,
    PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI = 1000370000,
    MEMORY_GET_REMOTE_ADDRESS_INFO_NV = 1000371000,
    PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV = 1000371001,
    PIPELINE_PROPERTIES_IDENTIFIER_EXT = 1000372000,
    PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT = 1000372001,
    PIPELINE_INFO_EXT = PIPELINE_INFO_KHR,
    IMPORT_FENCE_SCI_SYNC_INFO_NV = 1000373000,
    EXPORT_FENCE_SCI_SYNC_INFO_NV = 1000373001,
    FENCE_GET_SCI_SYNC_INFO_NV = 1000373002,
    SCI_SYNC_ATTRIBUTES_INFO_NV = 1000373003,
    IMPORT_SEMAPHORE_SCI_SYNC_INFO_NV = 1000373004,
    EXPORT_SEMAPHORE_SCI_SYNC_INFO_NV = 1000373005,
    SEMAPHORE_GET_SCI_SYNC_INFO_NV = 1000373006,
    PHYSICAL_DEVICE_EXTERNAL_SCI_SYNC_FEATURES_NV = 1000373007,
    IMPORT_MEMORY_SCI_BUF_INFO_NV = 1000374000,
    EXPORT_MEMORY_SCI_BUF_INFO_NV = 1000374001,
    MEMORY_GET_SCI_BUF_INFO_NV = 1000374002,
    MEMORY_SCI_BUF_PROPERTIES_NV = 1000374003,
    PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCI_BUF_FEATURES_NV = 1000374004,
    PHYSICAL_DEVICE_EXTERNAL_SCI_BUF_FEATURES_NV = PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCI_BUF_FEATURES_NV,
    PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT = 1000375000,
    FRAME_BOUNDARY_EXT = 1000375001,
    PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT = 1000376000,
    SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT = 1000376001,
    MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT = 1000376002,
    PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT = 1000377000,
    SCREEN_SURFACE_CREATE_INFO_QNX = 1000378000,
    PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT = 1000381000,
    PIPELINE_COLOR_WRITE_CREATE_INFO_EXT = 1000381001,
    PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT = 1000382000,
    PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR = 1000386000,
    PHYSICAL_DEVICE_SHADER_UNTYPED_POINTERS_FEATURES_KHR = 1000387000,
    PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT = PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES,
    QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT = QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES,
    PHYSICAL_DEVICE_VIDEO_ENCODE_RGB_CONVERSION_FEATURES_VALVE = 1000390000,
    VIDEO_ENCODE_RGB_CONVERSION_CAPABILITIES_VALVE = 1000390001,
    VIDEO_ENCODE_PROFILE_RGB_CONVERSION_INFO_VALVE = 1000390002,
    VIDEO_ENCODE_SESSION_RGB_CONVERSION_CREATE_INFO_VALVE = 1000390003,
    PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT = 1000391000,
    IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT = 1000391001,
    PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT = 1000392000,
    PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT = 1000392001,
    PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT = 1000393000,
    PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT = 1000395000,
    PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT = 1000395001,
    MICROMAP_BUILD_INFO_EXT = 1000396000,
    MICROMAP_VERSION_INFO_EXT = 1000396001,
    COPY_MICROMAP_INFO_EXT = 1000396002,
    COPY_MICROMAP_TO_MEMORY_INFO_EXT = 1000396003,
    COPY_MEMORY_TO_MICROMAP_INFO_EXT = 1000396004,
    PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT = 1000396005,
    PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT = 1000396006,
    MICROMAP_CREATE_INFO_EXT = 1000396007,
    MICROMAP_BUILD_SIZES_INFO_EXT = 1000396008,
    ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT = 1000396009,
    PHYSICAL_DEVICE_DISPLACEMENT_MICROMAP_FEATURES_NV = 1000397000,
    PHYSICAL_DEVICE_DISPLACEMENT_MICROMAP_PROPERTIES_NV = 1000397001,
    ACCELERATION_STRUCTURE_TRIANGLES_DISPLACEMENT_MICROMAP_NV = 1000397002,
    PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI = 1000404000,
    PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI = 1000404001,
    PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_VRS_FEATURES_HUAWEI = 1000404002,
    PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT = 1000411000,
    SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT = 1000411001,
    PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT = 1000412000,
    PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR = PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES,
    PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR = PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES,
    DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR = DEVICE_BUFFER_MEMORY_REQUIREMENTS,
    DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR = DEVICE_IMAGE_MEMORY_REQUIREMENTS,
    PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM = 1000415000,
    PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES_KHR = PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES,
    DEVICE_QUEUE_SHADER_CORE_CONTROL_CREATE_INFO_ARM = 1000417000,
    PHYSICAL_DEVICE_SCHEDULING_CONTROLS_FEATURES_ARM = 1000417001,
    PHYSICAL_DEVICE_SCHEDULING_CONTROLS_PROPERTIES_ARM = 1000417002,
    PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT = 1000418000,
    IMAGE_VIEW_SLICED_CREATE_INFO_EXT = 1000418001,
    PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE = 1000420000,
    DESCRIPTOR_SET_BINDING_REFERENCE_VALVE = 1000420001,
    DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE = 1000420002,
    PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT = PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_KHR,
    PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT = 1000422000,
    PHYSICAL_DEVICE_RENDER_PASS_STRIPED_FEATURES_ARM = 1000424000,
    PHYSICAL_DEVICE_RENDER_PASS_STRIPED_PROPERTIES_ARM = 1000424001,
    RENDER_PASS_STRIPE_BEGIN_INFO_ARM = 1000424002,
    RENDER_PASS_STRIPE_INFO_ARM = 1000424003,
    RENDER_PASS_STRIPE_SUBMIT_INFO_ARM = 1000424004,
    PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM = PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_EXT,
    PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM = PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_EXT,
    SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM = RENDER_PASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_EXT,
    PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV = 1000426000,
    PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV = PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_KHR,
    PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV = 1000427000,
    PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV = 1000427001,
    PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV = 1000428000,
    COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV = 1000428001,
    PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV = 1000428002,
    PHYSICAL_DEVICE_RAY_TRACING_LINEAR_SWEPT_SPHERES_FEATURES_NV = 1000429008,
    ACCELERATION_STRUCTURE_GEOMETRY_LINEAR_SWEPT_SPHERES_DATA_NV = 1000429009,
    ACCELERATION_STRUCTURE_GEOMETRY_SPHERES_DATA_NV = 1000429010,
    PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV = 1000430000,
    PHYSICAL_DEVICE_SHADER_MAXIMAL_RECONVERGENCE_FEATURES_KHR = 1000434000,
    APPLICATION_PARAMETERS_EXT = 1000435000,
    PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT = 1000437000,
    PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM = 1000440000,
    PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM = 1000440001,
    IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM = 1000440002,
    PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_FEATURES_EXT = 1000451000,
    PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_PROPERTIES_EXT = 1000451001,
    EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT = 1000453000,
    PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT = 1000455000,
    PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT = 1000455001,
    PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT = 1000458000,
    RENDER_PASS_CREATION_CONTROL_EXT = 1000458001,
    RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT = 1000458002,
    RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT = 1000458003,
    DIRECT_DRIVER_LOADING_INFO_LUNARG = 1000459000,
    DIRECT_DRIVER_LOADING_LIST_LUNARG = 1000459001,
    TENSOR_CREATE_INFO_ARM = 1000460000,
    TENSOR_VIEW_CREATE_INFO_ARM = 1000460001,
    BIND_TENSOR_MEMORY_INFO_ARM = 1000460002,
    WRITE_DESCRIPTOR_SET_TENSOR_ARM = 1000460003,
    PHYSICAL_DEVICE_TENSOR_PROPERTIES_ARM = 1000460004,
    TENSOR_FORMAT_PROPERTIES_ARM = 1000460005,
    TENSOR_DESCRIPTION_ARM = 1000460006,
    TENSOR_MEMORY_REQUIREMENTS_INFO_ARM = 1000460007,
    TENSOR_MEMORY_BARRIER_ARM = 1000460008,
    PHYSICAL_DEVICE_TENSOR_FEATURES_ARM = 1000460009,
    DEVICE_TENSOR_MEMORY_REQUIREMENTS_ARM = 1000460010,
    COPY_TENSOR_INFO_ARM = 1000460011,
    TENSOR_COPY_ARM = 1000460012,
    TENSOR_DEPENDENCY_INFO_ARM = 1000460013,
    MEMORY_DEDICATED_ALLOCATE_INFO_TENSOR_ARM = 1000460014,
    PHYSICAL_DEVICE_EXTERNAL_TENSOR_INFO_ARM = 1000460015,
    EXTERNAL_TENSOR_PROPERTIES_ARM = 1000460016,
    EXTERNAL_MEMORY_TENSOR_CREATE_INFO_ARM = 1000460017,
    PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_TENSOR_FEATURES_ARM = 1000460018,
    PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_TENSOR_PROPERTIES_ARM = 1000460019,
    DESCRIPTOR_GET_TENSOR_INFO_ARM = 1000460020,
    TENSOR_CAPTURE_DESCRIPTOR_DATA_INFO_ARM = 1000460021,
    TENSOR_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_ARM = 1000460022,
    FRAME_BOUNDARY_TENSORS_ARM = 1000460023,
    PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT = 1000462000,
    PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT = 1000462001,
    PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT = 1000462002,
    SHADER_MODULE_IDENTIFIER_EXT = 1000462003,
    PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT = 1000342000,
    PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV = 1000464000,
    PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV = 1000464001,
    OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV = 1000464002,
    OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV = 1000464003,
    OPTICAL_FLOW_SESSION_CREATE_INFO_NV = 1000464004,
    OPTICAL_FLOW_EXECUTE_INFO_NV = 1000464005,
    OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV = 1000464010,
    PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT = 1000465000,
    PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT = PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES,
    PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_FEATURES_ANDROID = 1000468000,
    PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_PROPERTIES_ANDROID = 1000468001,
    ANDROID_HARDWARE_BUFFER_FORMAT_RESOLVE_PROPERTIES_ANDROID = 1000468002,
    PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES_KHR = PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES,
    PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES_KHR = PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES,
    RENDERING_AREA_INFO_KHR = RENDERING_AREA_INFO,
    DEVICE_IMAGE_SUBRESOURCE_INFO_KHR = DEVICE_IMAGE_SUBRESOURCE_INFO,
    SUBRESOURCE_LAYOUT_2_KHR = SUBRESOURCE_LAYOUT_2,
    IMAGE_SUBRESOURCE_2_KHR = IMAGE_SUBRESOURCE_2,
    PIPELINE_CREATE_FLAGS_2_CREATE_INFO_KHR = PIPELINE_CREATE_FLAGS_2_CREATE_INFO,
    BUFFER_USAGE_FLAGS_2_CREATE_INFO_KHR = BUFFER_USAGE_FLAGS_2_CREATE_INFO,
    PHYSICAL_DEVICE_ANTI_LAG_FEATURES_AMD = 1000476000,
    ANTI_LAG_DATA_AMD = 1000476001,
    ANTI_LAG_PRESENTATION_INFO_AMD = 1000476002,
    PHYSICAL_DEVICE_DENSE_GEOMETRY_FORMAT_FEATURES_AMDX = 1000478000,
    ACCELERATION_STRUCTURE_DENSE_GEOMETRY_FORMAT_TRIANGLES_DATA_AMDX = 1000478001,
    SURFACE_CAPABILITIES_PRESENT_ID_2_KHR = 1000479000,
    PRESENT_ID_2_KHR = 1000479001,
    PHYSICAL_DEVICE_PRESENT_ID_2_FEATURES_KHR = 1000479002,
    SURFACE_CAPABILITIES_PRESENT_WAIT_2_KHR = 1000480000,
    PHYSICAL_DEVICE_PRESENT_WAIT_2_FEATURES_KHR = 1000480001,
    PRESENT_WAIT_2_INFO_KHR = 1000480002,
    PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR = 1000481000,
    PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT = 1000482000,
    PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT = 1000482001,
    SHADER_CREATE_INFO_EXT = 1000482002,
    SHADER_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT = PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,
    PHYSICAL_DEVICE_PIPELINE_BINARY_FEATURES_KHR = 1000483000,
    PIPELINE_BINARY_CREATE_INFO_KHR = 1000483001,
    PIPELINE_BINARY_INFO_KHR = 1000483002,
    PIPELINE_BINARY_KEY_KHR = 1000483003,
    PHYSICAL_DEVICE_PIPELINE_BINARY_PROPERTIES_KHR = 1000483004,
    RELEASE_CAPTURED_PIPELINE_DATA_INFO_KHR = 1000483005,
    PIPELINE_BINARY_DATA_INFO_KHR = 1000483006,
    PIPELINE_CREATE_INFO_KHR = 1000483007,
    DEVICE_PIPELINE_BINARY_INTERNAL_CACHE_CONTROL_KHR = 1000483008,
    PIPELINE_BINARY_HANDLES_INFO_KHR = 1000483009,
    PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM = 1000484000,
    TILE_PROPERTIES_QCOM = 1000484001,
    PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC = 1000485000,
    AMIGO_PROFILING_SUBMIT_INFO_SEC = 1000485001,
    SURFACE_PRESENT_MODE_KHR = 1000274000,
    SURFACE_PRESENT_SCALING_CAPABILITIES_KHR = 1000274001,
    SURFACE_PRESENT_MODE_COMPATIBILITY_KHR = 1000274002,
    PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_KHR = 1000275000,
    SWAPCHAIN_PRESENT_FENCE_INFO_KHR = 1000275001,
    SWAPCHAIN_PRESENT_MODES_CREATE_INFO_KHR = 1000275002,
    SWAPCHAIN_PRESENT_MODE_INFO_KHR = 1000275003,
    SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_KHR = 1000275004,
    RELEASE_SWAPCHAIN_IMAGES_INFO_KHR = 1000275005,
    PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM = 1000488000,
    SEMAPHORE_SCI_SYNC_POOL_CREATE_INFO_NV = 1000489000,
    SEMAPHORE_SCI_SYNC_CREATE_INFO_NV = 1000489001,
    PHYSICAL_DEVICE_EXTERNAL_SCI_SYNC_2_FEATURES_NV = 1000489002,
    DEVICE_SEMAPHORE_SCI_SYNC_POOL_RESERVATION_CREATE_INFO_NV = 1000489003,
    PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV = 1000490000,
    PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV = 1000490001,
    PHYSICAL_DEVICE_COOPERATIVE_VECTOR_FEATURES_NV = 1000491000,
    PHYSICAL_DEVICE_COOPERATIVE_VECTOR_PROPERTIES_NV = 1000491001,
    COOPERATIVE_VECTOR_PROPERTIES_NV = 1000491002,
    CONVERT_COOPERATIVE_VECTOR_MATRIX_INFO_NV = 1000491004,
    PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_FEATURES_NV = 1000492000,
    PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_PROPERTIES_NV = 1000492001,
    PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT = 1000351000,
    MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT = 1000351002,
    PHYSICAL_DEVICE_LEGACY_VERTEX_ATTRIBUTES_FEATURES_EXT = 1000495000,
    PHYSICAL_DEVICE_LEGACY_VERTEX_ATTRIBUTES_PROPERTIES_EXT = 1000495001,
    LAYER_SETTINGS_CREATE_INFO_EXT = 1000496000,
    PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM = 1000497000,
    PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM = 1000497001,
    PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT = 1000498000,
    PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT = 1000499000,
    LATENCY_SLEEP_MODE_INFO_NV = 1000505000,
    LATENCY_SLEEP_INFO_NV = 1000505001,
    SET_LATENCY_MARKER_INFO_NV = 1000505002,
    GET_LATENCY_MARKER_INFO_NV = 1000505003,
    LATENCY_TIMINGS_FRAME_REPORT_NV = 1000505004,
    LATENCY_SUBMISSION_PRESENT_ID_NV = 1000505005,
    OUT_OF_BAND_QUEUE_TYPE_INFO_NV = 1000505006,
    SWAPCHAIN_LATENCY_CREATE_INFO_NV = 1000505007,
    LATENCY_SURFACE_CAPABILITIES_NV = 1000505008,
    PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR = 1000506000,
    COOPERATIVE_MATRIX_PROPERTIES_KHR = 1000506001,
    PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR = 1000506002,
    DATA_GRAPH_PIPELINE_CREATE_INFO_ARM = 1000507000,
    DATA_GRAPH_PIPELINE_SESSION_CREATE_INFO_ARM = 1000507001,
    DATA_GRAPH_PIPELINE_RESOURCE_INFO_ARM = 1000507002,
    DATA_GRAPH_PIPELINE_CONSTANT_ARM = 1000507003,
    DATA_GRAPH_PIPELINE_SESSION_MEMORY_REQUIREMENTS_INFO_ARM = 1000507004,
    BIND_DATA_GRAPH_PIPELINE_SESSION_MEMORY_INFO_ARM = 1000507005,
    PHYSICAL_DEVICE_DATA_GRAPH_FEATURES_ARM = 1000507006,
    DATA_GRAPH_PIPELINE_SHADER_MODULE_CREATE_INFO_ARM = 1000507007,
    DATA_GRAPH_PIPELINE_PROPERTY_QUERY_RESULT_ARM = 1000507008,
    DATA_GRAPH_PIPELINE_INFO_ARM = 1000507009,
    DATA_GRAPH_PIPELINE_COMPILER_CONTROL_CREATE_INFO_ARM = 1000507010,
    DATA_GRAPH_PIPELINE_SESSION_BIND_POINT_REQUIREMENTS_INFO_ARM = 1000507011,
    DATA_GRAPH_PIPELINE_SESSION_BIND_POINT_REQUIREMENT_ARM = 1000507012,
    DATA_GRAPH_PIPELINE_IDENTIFIER_CREATE_INFO_ARM = 1000507013,
    DATA_GRAPH_PIPELINE_DISPATCH_INFO_ARM = 1000507014,
    DATA_GRAPH_PROCESSING_ENGINE_CREATE_INFO_ARM = 1000507016,
    QUEUE_FAMILY_DATA_GRAPH_PROCESSING_ENGINE_PROPERTIES_ARM = 1000507017,
    QUEUE_FAMILY_DATA_GRAPH_PROPERTIES_ARM = 1000507018,
    PHYSICAL_DEVICE_QUEUE_FAMILY_DATA_GRAPH_PROCESSING_ENGINE_INFO_ARM = 1000507019,
    DATA_GRAPH_PIPELINE_CONSTANT_TENSOR_SEMI_STRUCTURED_SPARSITY_INFO_ARM = 1000507015,
    PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM = 1000510000,
    MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM = 1000510001,
    PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_KHR = 1000201000,
    PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_PROPERTIES_KHR = 1000511000,
    VIDEO_DECODE_AV1_CAPABILITIES_KHR = 1000512000,
    VIDEO_DECODE_AV1_PICTURE_INFO_KHR = 1000512001,
    VIDEO_DECODE_AV1_PROFILE_INFO_KHR = 1000512003,
    VIDEO_DECODE_AV1_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000512004,
    VIDEO_DECODE_AV1_DPB_SLOT_INFO_KHR = 1000512005,
    VIDEO_ENCODE_AV1_CAPABILITIES_KHR = 1000513000,
    VIDEO_ENCODE_AV1_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000513001,
    VIDEO_ENCODE_AV1_PICTURE_INFO_KHR = 1000513002,
    VIDEO_ENCODE_AV1_DPB_SLOT_INFO_KHR = 1000513003,
    PHYSICAL_DEVICE_VIDEO_ENCODE_AV1_FEATURES_KHR = 1000513004,
    VIDEO_ENCODE_AV1_PROFILE_INFO_KHR = 1000513005,
    VIDEO_ENCODE_AV1_RATE_CONTROL_INFO_KHR = 1000513006,
    VIDEO_ENCODE_AV1_RATE_CONTROL_LAYER_INFO_KHR = 1000513007,
    VIDEO_ENCODE_AV1_QUALITY_LEVEL_PROPERTIES_KHR = 1000513008,
    VIDEO_ENCODE_AV1_SESSION_CREATE_INFO_KHR = 1000513009,
    VIDEO_ENCODE_AV1_GOP_REMAINING_FRAME_INFO_KHR = 1000513010,
    PHYSICAL_DEVICE_VIDEO_DECODE_VP9_FEATURES_KHR = 1000514000,
    VIDEO_DECODE_VP9_CAPABILITIES_KHR = 1000514001,
    VIDEO_DECODE_VP9_PICTURE_INFO_KHR = 1000514002,
    VIDEO_DECODE_VP9_PROFILE_INFO_KHR = 1000514003,
    PHYSICAL_DEVICE_VIDEO_MAINTENANCE_1_FEATURES_KHR = 1000515000,
    VIDEO_INLINE_QUERY_INFO_KHR = 1000515001,
    PHYSICAL_DEVICE_PER_STAGE_DESCRIPTOR_SET_FEATURES_NV = 1000516000,
    PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM = 1000518000,
    PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM = 1000518001,
    SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM = 1000518002,
    SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM = 1000519000,
    PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM = 1000519001,
    BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM = 1000519002,
    PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM = 1000520000,
    SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM = 1000520001,
    PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM = 1000521000,
    PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT = 1000524000,
    PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_KHR = PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES,
    PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_KHR = PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO,
    PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_KHR = PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES,
    PHYSICAL_DEVICE_UNIFIED_IMAGE_LAYOUTS_FEATURES_KHR = 1000527000,
    ATTACHMENT_FEEDBACK_LOOP_INFO_EXT = 1000527001,
    PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES_KHR = PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES,
    SCREEN_BUFFER_PROPERTIES_QNX = 1000529000,
    SCREEN_BUFFER_FORMAT_PROPERTIES_QNX = 1000529001,
    IMPORT_SCREEN_BUFFER_INFO_QNX = 1000529002,
    EXTERNAL_FORMAT_QNX = 1000529003,
    PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCREEN_BUFFER_FEATURES_QNX = 1000529004,
    PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT = 1000530000,
    PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_KHR = PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES,
    PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_KHR = PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES,
    PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_KHR = PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO,
    PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_KHR = PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES,
    CALIBRATED_TIMESTAMP_INFO_KHR = 1000184000,
    PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES_KHR = PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES,
    PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES_KHR = PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES,
    PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES_KHR = PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES,
    BIND_MEMORY_STATUS_KHR = BIND_MEMORY_STATUS,
    BIND_DESCRIPTOR_SETS_INFO_KHR = BIND_DESCRIPTOR_SETS_INFO,
    PUSH_CONSTANTS_INFO_KHR = PUSH_CONSTANTS_INFO,
    PUSH_DESCRIPTOR_SET_INFO_KHR = PUSH_DESCRIPTOR_SET_INFO,
    PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO_KHR = PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO,
    SET_DESCRIPTOR_BUFFER_OFFSETS_INFO_EXT = 1000545007,
    BIND_DESCRIPTOR_BUFFER_EMBEDDED_SAMPLERS_INFO_EXT = 1000545008,
    PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV = 1000546000,
    PHYSICAL_DEVICE_TILE_MEMORY_HEAP_FEATURES_QCOM = 1000547000,
    PHYSICAL_DEVICE_TILE_MEMORY_HEAP_PROPERTIES_QCOM = 1000547001,
    TILE_MEMORY_REQUIREMENTS_QCOM = 1000547002,
    TILE_MEMORY_BIND_INFO_QCOM = 1000547003,
    TILE_MEMORY_SIZE_INFO_QCOM = 1000547004,
    PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_KHR = 1000549000,
    PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_KHR = 1000426001,
    COPY_MEMORY_INDIRECT_INFO_KHR = 1000549002,
    COPY_MEMORY_TO_IMAGE_INDIRECT_INFO_KHR = 1000549003,
    DISPLAY_SURFACE_STEREO_CREATE_INFO_NV = 1000551000,
    DISPLAY_MODE_STEREO_PROPERTIES_NV = 1000551001,
    VIDEO_ENCODE_INTRA_REFRESH_CAPABILITIES_KHR = 1000552000,
    VIDEO_ENCODE_SESSION_INTRA_REFRESH_CREATE_INFO_KHR = 1000552001,
    VIDEO_ENCODE_INTRA_REFRESH_INFO_KHR = 1000552002,
    VIDEO_REFERENCE_INTRA_REFRESH_INFO_KHR = 1000552003,
    PHYSICAL_DEVICE_VIDEO_ENCODE_INTRA_REFRESH_FEATURES_KHR = 1000552004,
    VIDEO_ENCODE_QUANTIZATION_MAP_CAPABILITIES_KHR = 1000553000,
    VIDEO_FORMAT_QUANTIZATION_MAP_PROPERTIES_KHR = 1000553001,
    VIDEO_ENCODE_QUANTIZATION_MAP_INFO_KHR = 1000553002,
    VIDEO_ENCODE_QUANTIZATION_MAP_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000553005,
    PHYSICAL_DEVICE_VIDEO_ENCODE_QUANTIZATION_MAP_FEATURES_KHR = 1000553009,
    VIDEO_ENCODE_H264_QUANTIZATION_MAP_CAPABILITIES_KHR = 1000553003,
    VIDEO_ENCODE_H265_QUANTIZATION_MAP_CAPABILITIES_KHR = 1000553004,
    VIDEO_FORMAT_H265_QUANTIZATION_MAP_PROPERTIES_KHR = 1000553006,
    VIDEO_ENCODE_AV1_QUANTIZATION_MAP_CAPABILITIES_KHR = 1000553007,
    VIDEO_FORMAT_AV1_QUANTIZATION_MAP_PROPERTIES_KHR = 1000553008,
    PHYSICAL_DEVICE_RAW_ACCESS_CHAINS_FEATURES_NV = 1000555000,
    EXTERNAL_COMPUTE_QUEUE_DEVICE_CREATE_INFO_NV = 1000556000,
    EXTERNAL_COMPUTE_QUEUE_CREATE_INFO_NV = 1000556001,
    EXTERNAL_COMPUTE_QUEUE_DATA_PARAMS_NV = 1000556002,
    PHYSICAL_DEVICE_EXTERNAL_COMPUTE_QUEUE_PROPERTIES_NV = 1000556003,
    PHYSICAL_DEVICE_SHADER_RELAXED_EXTENDED_INSTRUCTION_FEATURES_KHR = 1000558000,
    PHYSICAL_DEVICE_COMMAND_BUFFER_INHERITANCE_FEATURES_NV = 1000559000,
    PHYSICAL_DEVICE_MAINTENANCE_7_FEATURES_KHR = 1000562000,
    PHYSICAL_DEVICE_MAINTENANCE_7_PROPERTIES_KHR = 1000562001,
    PHYSICAL_DEVICE_LAYERED_API_PROPERTIES_LIST_KHR = 1000562002,
    PHYSICAL_DEVICE_LAYERED_API_PROPERTIES_KHR = 1000562003,
    PHYSICAL_DEVICE_LAYERED_API_VULKAN_PROPERTIES_KHR = 1000562004,
    PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT16_VECTOR_FEATURES_NV = 1000563000,
    PHYSICAL_DEVICE_SHADER_REPLICATED_COMPOSITES_FEATURES_EXT = 1000564000,
    PHYSICAL_DEVICE_SHADER_FLOAT8_FEATURES_EXT = 1000567000,
    PHYSICAL_DEVICE_RAY_TRACING_VALIDATION_FEATURES_NV = 1000568000,
    PHYSICAL_DEVICE_CLUSTER_ACCELERATION_STRUCTURE_FEATURES_NV = 1000569000,
    PHYSICAL_DEVICE_CLUSTER_ACCELERATION_STRUCTURE_PROPERTIES_NV = 1000569001,
    CLUSTER_ACCELERATION_STRUCTURE_CLUSTERS_BOTTOM_LEVEL_INPUT_NV = 1000569002,
    CLUSTER_ACCELERATION_STRUCTURE_TRIANGLE_CLUSTER_INPUT_NV = 1000569003,
    CLUSTER_ACCELERATION_STRUCTURE_MOVE_OBJECTS_INPUT_NV = 1000569004,
    CLUSTER_ACCELERATION_STRUCTURE_INPUT_INFO_NV = 1000569005,
    CLUSTER_ACCELERATION_STRUCTURE_COMMANDS_INFO_NV = 1000569006,
    RAY_TRACING_PIPELINE_CLUSTER_ACCELERATION_STRUCTURE_CREATE_INFO_NV = 1000569007,
    PHYSICAL_DEVICE_PARTITIONED_ACCELERATION_STRUCTURE_FEATURES_NV = 1000570000,
    PHYSICAL_DEVICE_PARTITIONED_ACCELERATION_STRUCTURE_PROPERTIES_NV = 1000570001,
    WRITE_DESCRIPTOR_SET_PARTITIONED_ACCELERATION_STRUCTURE_NV = 1000570002,
    PARTITIONED_ACCELERATION_STRUCTURE_INSTANCES_INPUT_NV = 1000570003,
    BUILD_PARTITIONED_ACCELERATION_STRUCTURE_INFO_NV = 1000570004,
    PARTITIONED_ACCELERATION_STRUCTURE_FLAGS_NV = 1000570005,
    PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_EXT = 1000572000,
    PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_EXT = 1000572001,
    GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_EXT = 1000572002,
    INDIRECT_EXECUTION_SET_CREATE_INFO_EXT = 1000572003,
    GENERATED_COMMANDS_INFO_EXT = 1000572004,
    INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_EXT = 1000572006,
    INDIRECT_COMMANDS_LAYOUT_TOKEN_EXT = 1000572007,
    WRITE_INDIRECT_EXECUTION_SET_PIPELINE_EXT = 1000572008,
    WRITE_INDIRECT_EXECUTION_SET_SHADER_EXT = 1000572009,
    INDIRECT_EXECUTION_SET_PIPELINE_INFO_EXT = 1000572010,
    INDIRECT_EXECUTION_SET_SHADER_INFO_EXT = 1000572011,
    INDIRECT_EXECUTION_SET_SHADER_LAYOUT_INFO_EXT = 1000572012,
    GENERATED_COMMANDS_PIPELINE_INFO_EXT = 1000572013,
    GENERATED_COMMANDS_SHADER_INFO_EXT = 1000572014,
    PHYSICAL_DEVICE_MAINTENANCE_8_FEATURES_KHR = 1000574000,
    MEMORY_BARRIER_ACCESS_FLAGS_3_KHR = 1000574002,
    PHYSICAL_DEVICE_IMAGE_ALIGNMENT_CONTROL_FEATURES_MESA = 1000575000,
    PHYSICAL_DEVICE_IMAGE_ALIGNMENT_CONTROL_PROPERTIES_MESA = 1000575001,
    IMAGE_ALIGNMENT_CONTROL_CREATE_INFO_MESA = 1000575002,
    PHYSICAL_DEVICE_SHADER_FMA_FEATURES_KHR = 1000579000,
    PHYSICAL_DEVICE_DEPTH_CLAMP_CONTROL_FEATURES_EXT = 1000582000,
    PIPELINE_VIEWPORT_DEPTH_CLAMP_CONTROL_CREATE_INFO_EXT = 1000582001,
    PHYSICAL_DEVICE_MAINTENANCE_9_FEATURES_KHR = 1000584000,
    PHYSICAL_DEVICE_MAINTENANCE_9_PROPERTIES_KHR = 1000584001,
    QUEUE_FAMILY_OWNERSHIP_TRANSFER_PROPERTIES_KHR = 1000584002,
    PHYSICAL_DEVICE_VIDEO_MAINTENANCE_2_FEATURES_KHR = 1000586000,
    VIDEO_DECODE_H264_INLINE_SESSION_PARAMETERS_INFO_KHR = 1000586001,
    VIDEO_DECODE_H265_INLINE_SESSION_PARAMETERS_INFO_KHR = 1000586002,
    VIDEO_DECODE_AV1_INLINE_SESSION_PARAMETERS_INFO_KHR = 1000586003,
    SURFACE_CREATE_INFO_OHOS = 1000685000,
    PHYSICAL_DEVICE_HDR_VIVID_FEATURES_HUAWEI = 1000590000,
    HDR_VIVID_DYNAMIC_METADATA_HUAWEI = 1000590001,
    PHYSICAL_DEVICE_COOPERATIVE_MATRIX_2_FEATURES_NV = 1000593000,
    COOPERATIVE_MATRIX_FLEXIBLE_DIMENSIONS_PROPERTIES_NV = 1000593001,
    PHYSICAL_DEVICE_COOPERATIVE_MATRIX_2_PROPERTIES_NV = 1000593002,
    PHYSICAL_DEVICE_PIPELINE_OPACITY_MICROMAP_FEATURES_ARM = 1000596000,
    IMPORT_MEMORY_METAL_HANDLE_INFO_EXT = 1000602000,
    MEMORY_METAL_HANDLE_PROPERTIES_EXT = 1000602001,
    MEMORY_GET_METAL_HANDLE_INFO_EXT = 1000602002,
    PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_KHR = 1000421000,
    PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_ROBUSTNESS_FEATURES_EXT = 1000608000,
    PHYSICAL_DEVICE_FORMAT_PACK_FEATURES_ARM = 1000609000,
    PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_LAYERED_FEATURES_VALVE = 1000611000,
    PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_LAYERED_PROPERTIES_VALVE = 1000611001,
    PIPELINE_FRAGMENT_DENSITY_MAP_LAYERED_CREATE_INFO_VALVE = 1000611002,
    PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_KHR = 1000286000,
    PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_KHR = 1000286001,
    SET_PRESENT_CONFIG_NV = 1000613000,
    PHYSICAL_DEVICE_PRESENT_METERING_FEATURES_NV = 1000613001,
    PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_EXT = 1000425000,
    PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_EXT = 1000425001,
    RENDER_PASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_EXT = 1000425002,
    RENDERING_END_INFO_EXT = 1000619003,
    PHYSICAL_DEVICE_ZERO_INITIALIZE_DEVICE_MEMORY_FEATURES_EXT = 1000620000,
    PHYSICAL_DEVICE_PRESENT_MODE_FIFO_LATEST_READY_FEATURES_KHR = 1000361000,
    PHYSICAL_DEVICE_PIPELINE_CACHE_INCREMENTAL_MODE_FEATURES_SEC = 1000637000,
}

enum VK_STRUCTURE_TYPE_APPLICATION_INFO = VkStructureType.APPLICATION_INFO;
enum VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO = VkStructureType.INSTANCE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO = VkStructureType.DEVICE_QUEUE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO = VkStructureType.DEVICE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_SUBMIT_INFO = VkStructureType.SUBMIT_INFO;
enum VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO = VkStructureType.MEMORY_ALLOCATE_INFO;
enum VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE = VkStructureType.MAPPED_MEMORY_RANGE;
enum VK_STRUCTURE_TYPE_BIND_SPARSE_INFO = VkStructureType.BIND_SPARSE_INFO;
enum VK_STRUCTURE_TYPE_FENCE_CREATE_INFO = VkStructureType.FENCE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO = VkStructureType.SEMAPHORE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_EVENT_CREATE_INFO = VkStructureType.EVENT_CREATE_INFO;
enum VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO = VkStructureType.QUERY_POOL_CREATE_INFO;
enum VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO = VkStructureType.BUFFER_CREATE_INFO;
enum VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO = VkStructureType.BUFFER_VIEW_CREATE_INFO;
enum VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO = VkStructureType.IMAGE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO = VkStructureType.IMAGE_VIEW_CREATE_INFO;
enum VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO = VkStructureType.SHADER_MODULE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO = VkStructureType.PIPELINE_CACHE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO = VkStructureType.PIPELINE_SHADER_STAGE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = VkStructureType.PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = VkStructureType.PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO = VkStructureType.PIPELINE_TESSELLATION_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO = VkStructureType.PIPELINE_VIEWPORT_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO = VkStructureType.PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = VkStructureType.PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = VkStructureType.PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = VkStructureType.PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO = VkStructureType.PIPELINE_DYNAMIC_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO = VkStructureType.GRAPHICS_PIPELINE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO = VkStructureType.COMPUTE_PIPELINE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO = VkStructureType.PIPELINE_LAYOUT_CREATE_INFO;
enum VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO = VkStructureType.SAMPLER_CREATE_INFO;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO = VkStructureType.DESCRIPTOR_SET_LAYOUT_CREATE_INFO;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO = VkStructureType.DESCRIPTOR_POOL_CREATE_INFO;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO = VkStructureType.DESCRIPTOR_SET_ALLOCATE_INFO;
enum VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET = VkStructureType.WRITE_DESCRIPTOR_SET;
enum VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET = VkStructureType.COPY_DESCRIPTOR_SET;
enum VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO = VkStructureType.FRAMEBUFFER_CREATE_INFO;
enum VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO = VkStructureType.RENDER_PASS_CREATE_INFO;
enum VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO = VkStructureType.COMMAND_POOL_CREATE_INFO;
enum VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO = VkStructureType.COMMAND_BUFFER_ALLOCATE_INFO;
enum VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO = VkStructureType.COMMAND_BUFFER_INHERITANCE_INFO;
enum VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO = VkStructureType.COMMAND_BUFFER_BEGIN_INFO;
enum VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO = VkStructureType.RENDER_PASS_BEGIN_INFO;
enum VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER = VkStructureType.BUFFER_MEMORY_BARRIER;
enum VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER = VkStructureType.IMAGE_MEMORY_BARRIER;
enum VK_STRUCTURE_TYPE_MEMORY_BARRIER = VkStructureType.MEMORY_BARRIER;
enum VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO = VkStructureType.LOADER_INSTANCE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO = VkStructureType.LOADER_DEVICE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_SUBGROUP_PROPERTIES;
enum VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO = VkStructureType.BIND_BUFFER_MEMORY_INFO;
enum VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO = VkStructureType.BIND_IMAGE_MEMORY_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES = VkStructureType.PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES;
enum VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS = VkStructureType.MEMORY_DEDICATED_REQUIREMENTS;
enum VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO = VkStructureType.MEMORY_DEDICATED_ALLOCATE_INFO;
enum VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO = VkStructureType.MEMORY_ALLOCATE_FLAGS_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO = VkStructureType.DEVICE_GROUP_RENDER_PASS_BEGIN_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO = VkStructureType.DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO = VkStructureType.DEVICE_GROUP_SUBMIT_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO = VkStructureType.DEVICE_GROUP_BIND_SPARSE_INFO;
enum VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO = VkStructureType.BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO;
enum VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO = VkStructureType.BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_GROUP_PROPERTIES;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO = VkStructureType.DEVICE_GROUP_DEVICE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 = VkStructureType.BUFFER_MEMORY_REQUIREMENTS_INFO_2;
enum VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 = VkStructureType.IMAGE_MEMORY_REQUIREMENTS_INFO_2;
enum VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 = VkStructureType.IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2;
enum VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 = VkStructureType.MEMORY_REQUIREMENTS_2;
enum VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 = VkStructureType.SPARSE_IMAGE_MEMORY_REQUIREMENTS_2;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 = VkStructureType.PHYSICAL_DEVICE_FEATURES_2;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 = VkStructureType.PHYSICAL_DEVICE_PROPERTIES_2;
enum VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 = VkStructureType.FORMAT_PROPERTIES_2;
enum VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2 = VkStructureType.IMAGE_FORMAT_PROPERTIES_2;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 = VkStructureType.PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2;
enum VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 = VkStructureType.QUEUE_FAMILY_PROPERTIES_2;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 = VkStructureType.PHYSICAL_DEVICE_MEMORY_PROPERTIES_2;
enum VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2 = VkStructureType.SPARSE_IMAGE_FORMAT_PROPERTIES_2;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 = VkStructureType.PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES;
enum VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO = VkStructureType.RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO;
enum VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO = VkStructureType.IMAGE_VIEW_USAGE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO = VkStructureType.PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO = VkStructureType.RENDER_PASS_MULTIVIEW_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES = VkStructureType.PHYSICAL_DEVICE_MULTIVIEW_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES = VkStructureType.PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES;
enum VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO = VkStructureType.PROTECTED_SUBMIT_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES = VkStructureType.PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES;
enum VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2 = VkStructureType.DEVICE_QUEUE_INFO_2;
enum VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO = VkStructureType.SAMPLER_YCBCR_CONVERSION_CREATE_INFO;
enum VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO = VkStructureType.SAMPLER_YCBCR_CONVERSION_INFO;
enum VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO = VkStructureType.BIND_IMAGE_PLANE_MEMORY_INFO;
enum VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO = VkStructureType.IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES = VkStructureType.PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES;
enum VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES = VkStructureType.SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO = VkStructureType.DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO;
enum VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES = VkStructureType.EXTERNAL_IMAGE_FORMAT_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO;
enum VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES = VkStructureType.EXTERNAL_BUFFER_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_ID_PROPERTIES;
enum VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO = VkStructureType.EXTERNAL_MEMORY_BUFFER_CREATE_INFO;
enum VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO = VkStructureType.EXTERNAL_MEMORY_IMAGE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO = VkStructureType.EXPORT_MEMORY_ALLOCATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO;
enum VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES = VkStructureType.EXTERNAL_FENCE_PROPERTIES;
enum VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO = VkStructureType.EXPORT_FENCE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO = VkStructureType.EXPORT_SEMAPHORE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO;
enum VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES = VkStructureType.EXTERNAL_SEMAPHORE_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT = VkStructureType.DESCRIPTOR_SET_LAYOUT_SUPPORT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES = VkStructureType.PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES = VkStructureType.PHYSICAL_DEVICE_VULKAN_1_1_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES = VkStructureType.PHYSICAL_DEVICE_VULKAN_1_2_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
enum VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO = VkStructureType.IMAGE_FORMAT_LIST_CREATE_INFO;
enum VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2 = VkStructureType.ATTACHMENT_DESCRIPTION_2;
enum VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2 = VkStructureType.ATTACHMENT_REFERENCE_2;
enum VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2 = VkStructureType.SUBPASS_DESCRIPTION_2;
enum VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2 = VkStructureType.SUBPASS_DEPENDENCY_2;
enum VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2 = VkStructureType.RENDER_PASS_CREATE_INFO_2;
enum VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO = VkStructureType.SUBPASS_BEGIN_INFO;
enum VK_STRUCTURE_TYPE_SUBPASS_END_INFO = VkStructureType.SUBPASS_END_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES = VkStructureType.PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_DRIVER_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES = VkStructureType.PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES = VkStructureType.PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO = VkStructureType.DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES = VkStructureType.PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO = VkStructureType.DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT = VkStructureType.DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES;
enum VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE = VkStructureType.SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES = VkStructureType.PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES;
enum VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO = VkStructureType.IMAGE_STENCIL_USAGE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES;
enum VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO = VkStructureType.SAMPLER_REDUCTION_MODE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES = VkStructureType.PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES = VkStructureType.PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES;
enum VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO = VkStructureType.FRAMEBUFFER_ATTACHMENTS_CREATE_INFO;
enum VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO = VkStructureType.FRAMEBUFFER_ATTACHMENT_IMAGE_INFO;
enum VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO = VkStructureType.RENDER_PASS_ATTACHMENT_BEGIN_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES = VkStructureType.PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES = VkStructureType.PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES = VkStructureType.PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES;
enum VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT = VkStructureType.ATTACHMENT_REFERENCE_STENCIL_LAYOUT;
enum VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT = VkStructureType.ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES = VkStructureType.PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES = VkStructureType.PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES;
enum VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO = VkStructureType.SEMAPHORE_TYPE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO = VkStructureType.TIMELINE_SEMAPHORE_SUBMIT_INFO;
enum VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO = VkStructureType.SEMAPHORE_WAIT_INFO;
enum VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO = VkStructureType.SEMAPHORE_SIGNAL_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES = VkStructureType.PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES;
enum VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO = VkStructureType.BUFFER_DEVICE_ADDRESS_INFO;
enum VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO = VkStructureType.BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO;
enum VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO = VkStructureType.MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO = VkStructureType.DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES = VkStructureType.PHYSICAL_DEVICE_VULKAN_1_3_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
enum VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO = VkStructureType.PIPELINE_CREATION_FEEDBACK_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES = VkStructureType.PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_TOOL_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES = VkStructureType.PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES = VkStructureType.PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES;
enum VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO = VkStructureType.DEVICE_PRIVATE_DATA_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO = VkStructureType.PRIVATE_DATA_SLOT_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES = VkStructureType.PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES;
enum VK_STRUCTURE_TYPE_MEMORY_BARRIER_2 = VkStructureType.MEMORY_BARRIER_2;
enum VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 = VkStructureType.BUFFER_MEMORY_BARRIER_2;
enum VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 = VkStructureType.IMAGE_MEMORY_BARRIER_2;
enum VK_STRUCTURE_TYPE_DEPENDENCY_INFO = VkStructureType.DEPENDENCY_INFO;
enum VK_STRUCTURE_TYPE_SUBMIT_INFO_2 = VkStructureType.SUBMIT_INFO_2;
enum VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO = VkStructureType.SEMAPHORE_SUBMIT_INFO;
enum VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO = VkStructureType.COMMAND_BUFFER_SUBMIT_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES = VkStructureType.PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES = VkStructureType.PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES = VkStructureType.PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES;
enum VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2 = VkStructureType.COPY_BUFFER_INFO_2;
enum VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2 = VkStructureType.COPY_IMAGE_INFO_2;
enum VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 = VkStructureType.COPY_BUFFER_TO_IMAGE_INFO_2;
enum VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2 = VkStructureType.COPY_IMAGE_TO_BUFFER_INFO_2;
enum VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 = VkStructureType.BLIT_IMAGE_INFO_2;
enum VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2 = VkStructureType.RESOLVE_IMAGE_INFO_2;
enum VK_STRUCTURE_TYPE_BUFFER_COPY_2 = VkStructureType.BUFFER_COPY_2;
enum VK_STRUCTURE_TYPE_IMAGE_COPY_2 = VkStructureType.IMAGE_COPY_2;
enum VK_STRUCTURE_TYPE_IMAGE_BLIT_2 = VkStructureType.IMAGE_BLIT_2;
enum VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 = VkStructureType.BUFFER_IMAGE_COPY_2;
enum VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2 = VkStructureType.IMAGE_RESOLVE_2;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES;
enum VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO = VkStructureType.PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES = VkStructureType.PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES = VkStructureType.PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES;
enum VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK = VkStructureType.WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO = VkStructureType.DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES = VkStructureType.PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES;
enum VK_STRUCTURE_TYPE_RENDERING_INFO = VkStructureType.RENDERING_INFO;
enum VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO = VkStructureType.RENDERING_ATTACHMENT_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO = VkStructureType.PIPELINE_RENDERING_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES = VkStructureType.PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES;
enum VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO = VkStructureType.COMMAND_BUFFER_INHERITANCE_RENDERING_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES = VkStructureType.PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES;
enum VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 = VkStructureType.FORMAT_PROPERTIES_3;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES = VkStructureType.PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES;
enum VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS = VkStructureType.DEVICE_BUFFER_MEMORY_REQUIREMENTS;
enum VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS = VkStructureType.DEVICE_IMAGE_MEMORY_REQUIREMENTS;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_4_FEATURES = VkStructureType.PHYSICAL_DEVICE_VULKAN_1_4_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_4_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_VULKAN_1_4_PROPERTIES;
enum VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO = VkStructureType.DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES = VkStructureType.PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES;
enum VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES = VkStructureType.QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES = VkStructureType.PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES = VkStructureType.PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES = VkStructureType.PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES = VkStructureType.PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES;
enum VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO = VkStructureType.PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES;
enum VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO = VkStructureType.PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES = VkStructureType.PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES = VkStructureType.PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES;
enum VK_STRUCTURE_TYPE_MEMORY_MAP_INFO = VkStructureType.MEMORY_MAP_INFO;
enum VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO = VkStructureType.MEMORY_UNMAP_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES = VkStructureType.PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES;
enum VK_STRUCTURE_TYPE_RENDERING_AREA_INFO = VkStructureType.RENDERING_AREA_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO = VkStructureType.DEVICE_IMAGE_SUBRESOURCE_INFO;
enum VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2 = VkStructureType.SUBRESOURCE_LAYOUT_2;
enum VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2 = VkStructureType.IMAGE_SUBRESOURCE_2;
enum VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO = VkStructureType.PIPELINE_CREATE_FLAGS_2_CREATE_INFO;
enum VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO = VkStructureType.BUFFER_USAGE_FLAGS_2_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES = VkStructureType.PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES;
enum VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_LOCATION_INFO = VkStructureType.RENDERING_ATTACHMENT_LOCATION_INFO;
enum VK_STRUCTURE_TYPE_RENDERING_INPUT_ATTACHMENT_INDEX_INFO = VkStructureType.RENDERING_INPUT_ATTACHMENT_INDEX_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES = VkStructureType.PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES;
enum VK_STRUCTURE_TYPE_BIND_MEMORY_STATUS = VkStructureType.BIND_MEMORY_STATUS;
enum VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO = VkStructureType.BIND_DESCRIPTOR_SETS_INFO;
enum VK_STRUCTURE_TYPE_PUSH_CONSTANTS_INFO = VkStructureType.PUSH_CONSTANTS_INFO;
enum VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO = VkStructureType.PUSH_DESCRIPTOR_SET_INFO;
enum VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO = VkStructureType.PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES = VkStructureType.PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES;
enum VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO = VkStructureType.PIPELINE_ROBUSTNESS_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES = VkStructureType.PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES = VkStructureType.PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES;
enum VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY = VkStructureType.MEMORY_TO_IMAGE_COPY;
enum VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY = VkStructureType.IMAGE_TO_MEMORY_COPY;
enum VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO = VkStructureType.COPY_IMAGE_TO_MEMORY_INFO;
enum VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO = VkStructureType.COPY_MEMORY_TO_IMAGE_INFO;
enum VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO = VkStructureType.HOST_IMAGE_LAYOUT_TRANSITION_INFO;
enum VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO = VkStructureType.COPY_IMAGE_TO_IMAGE_INFO;
enum VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE = VkStructureType.SUBRESOURCE_HOST_MEMCPY_SIZE;
enum VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY = VkStructureType.HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_SC_1_0_FEATURES = VkStructureType.PHYSICAL_DEVICE_VULKAN_SC_1_0_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_SC_1_0_PROPERTIES = VkStructureType.PHYSICAL_DEVICE_VULKAN_SC_1_0_PROPERTIES;
enum VK_STRUCTURE_TYPE_DEVICE_OBJECT_RESERVATION_CREATE_INFO = VkStructureType.DEVICE_OBJECT_RESERVATION_CREATE_INFO;
enum VK_STRUCTURE_TYPE_COMMAND_POOL_MEMORY_RESERVATION_CREATE_INFO = VkStructureType.COMMAND_POOL_MEMORY_RESERVATION_CREATE_INFO;
enum VK_STRUCTURE_TYPE_COMMAND_POOL_MEMORY_CONSUMPTION = VkStructureType.COMMAND_POOL_MEMORY_CONSUMPTION;
enum VK_STRUCTURE_TYPE_PIPELINE_POOL_SIZE = VkStructureType.PIPELINE_POOL_SIZE;
enum VK_STRUCTURE_TYPE_FAULT_DATA = VkStructureType.FAULT_DATA;
enum VK_STRUCTURE_TYPE_FAULT_CALLBACK_INFO = VkStructureType.FAULT_CALLBACK_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_OFFLINE_CREATE_INFO = VkStructureType.PIPELINE_OFFLINE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR = VkStructureType.SWAPCHAIN_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PRESENT_INFO_KHR = VkStructureType.PRESENT_INFO_KHR;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR = VkStructureType.DEVICE_GROUP_PRESENT_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR = VkStructureType.IMAGE_SWAPCHAIN_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR = VkStructureType.BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR;
enum VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR = VkStructureType.ACQUIRE_NEXT_IMAGE_INFO_KHR;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR = VkStructureType.DEVICE_GROUP_PRESENT_INFO_KHR;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR = VkStructureType.DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR = VkStructureType.DISPLAY_MODE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR = VkStructureType.DISPLAY_SURFACE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR = VkStructureType.DISPLAY_PRESENT_INFO_KHR;
enum VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR = VkStructureType.XLIB_SURFACE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR = VkStructureType.XCB_SURFACE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR = VkStructureType.WAYLAND_SURFACE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR = VkStructureType.ANDROID_SURFACE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR = VkStructureType.WIN32_SURFACE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_NATIVE_BUFFER_ANDROID = VkStructureType.NATIVE_BUFFER_ANDROID;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_IMAGE_CREATE_INFO_ANDROID = VkStructureType.SWAPCHAIN_IMAGE_CREATE_INFO_ANDROID;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENTATION_PROPERTIES_ANDROID = VkStructureType.PHYSICAL_DEVICE_PRESENTATION_PROPERTIES_ANDROID;
enum VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT = VkStructureType.DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT;
deprecated("aliased")
enum VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD = VkStructureType.PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD;
enum VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT = VkStructureType.DEBUG_MARKER_OBJECT_NAME_INFO_EXT;
enum VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT = VkStructureType.DEBUG_MARKER_OBJECT_TAG_INFO_EXT;
enum VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT = VkStructureType.DEBUG_MARKER_MARKER_INFO_EXT;
enum VK_STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR = VkStructureType.VIDEO_PROFILE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR = VkStructureType.VIDEO_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR = VkStructureType.VIDEO_PICTURE_RESOURCE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR = VkStructureType.VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR;
enum VK_STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR = VkStructureType.BIND_VIDEO_SESSION_MEMORY_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR = VkStructureType.VIDEO_SESSION_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR = VkStructureType.VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR = VkStructureType.VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR = VkStructureType.VIDEO_BEGIN_CODING_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR = VkStructureType.VIDEO_END_CODING_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR = VkStructureType.VIDEO_CODING_CONTROL_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR = VkStructureType.VIDEO_REFERENCE_SLOT_INFO_KHR;
enum VK_STRUCTURE_TYPE_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR = VkStructureType.QUEUE_FAMILY_VIDEO_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR = VkStructureType.VIDEO_PROFILE_LIST_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR = VkStructureType.PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR = VkStructureType.VIDEO_FORMAT_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR = VkStructureType.QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR = VkStructureType.VIDEO_DECODE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR = VkStructureType.VIDEO_DECODE_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR = VkStructureType.VIDEO_DECODE_USAGE_INFO_KHR;
enum VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV = VkStructureType.DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV = VkStructureType.DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV = VkStructureType.DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT = VkStructureType.PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX = VkStructureType.CU_MODULE_CREATE_INFO_NVX;
enum VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX = VkStructureType.CU_FUNCTION_CREATE_INFO_NVX;
enum VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX = VkStructureType.CU_LAUNCH_INFO_NVX;
enum VK_STRUCTURE_TYPE_CU_MODULE_TEXTURING_MODE_CREATE_INFO_NVX = VkStructureType.CU_MODULE_TEXTURING_MODE_CREATE_INFO_NVX;
enum VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX = VkStructureType.IMAGE_VIEW_HANDLE_INFO_NVX;
enum VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX = VkStructureType.IMAGE_VIEW_ADDRESS_PROPERTIES_NVX;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_KHR = VkStructureType.VIDEO_ENCODE_H264_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR = VkStructureType.VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR = VkStructureType.VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PICTURE_INFO_KHR = VkStructureType.VIDEO_ENCODE_H264_PICTURE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_KHR = VkStructureType.VIDEO_ENCODE_H264_DPB_SLOT_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_INFO_KHR = VkStructureType.VIDEO_ENCODE_H264_NALU_SLICE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_GOP_REMAINING_FRAME_INFO_KHR = VkStructureType.VIDEO_ENCODE_H264_GOP_REMAINING_FRAME_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_INFO_KHR = VkStructureType.VIDEO_ENCODE_H264_PROFILE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_KHR = VkStructureType.VIDEO_ENCODE_H264_RATE_CONTROL_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_KHR = VkStructureType.VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_CREATE_INFO_KHR = VkStructureType.VIDEO_ENCODE_H264_SESSION_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_QUALITY_LEVEL_PROPERTIES_KHR = VkStructureType.VIDEO_ENCODE_H264_QUALITY_LEVEL_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_GET_INFO_KHR = VkStructureType.VIDEO_ENCODE_H264_SESSION_PARAMETERS_GET_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_FEEDBACK_INFO_KHR = VkStructureType.VIDEO_ENCODE_H264_SESSION_PARAMETERS_FEEDBACK_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_KHR = VkStructureType.VIDEO_ENCODE_H265_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR = VkStructureType.VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR = VkStructureType.VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PICTURE_INFO_KHR = VkStructureType.VIDEO_ENCODE_H265_PICTURE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_KHR = VkStructureType.VIDEO_ENCODE_H265_DPB_SLOT_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_INFO_KHR = VkStructureType.VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR = VkStructureType.VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_INFO_KHR = VkStructureType.VIDEO_ENCODE_H265_PROFILE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_KHR = VkStructureType.VIDEO_ENCODE_H265_RATE_CONTROL_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_KHR = VkStructureType.VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_CREATE_INFO_KHR = VkStructureType.VIDEO_ENCODE_H265_SESSION_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_QUALITY_LEVEL_PROPERTIES_KHR = VkStructureType.VIDEO_ENCODE_H265_QUALITY_LEVEL_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_GET_INFO_KHR = VkStructureType.VIDEO_ENCODE_H265_SESSION_PARAMETERS_GET_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_FEEDBACK_INFO_KHR = VkStructureType.VIDEO_ENCODE_H265_SESSION_PARAMETERS_FEEDBACK_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR = VkStructureType.VIDEO_DECODE_H264_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR = VkStructureType.VIDEO_DECODE_H264_PICTURE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR = VkStructureType.VIDEO_DECODE_H264_PROFILE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR = VkStructureType.VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR = VkStructureType.VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR = VkStructureType.VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR;
enum VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD = VkStructureType.TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD;
enum VK_STRUCTURE_TYPE_RENDERING_INFO_KHR = VK_STRUCTURE_TYPE_RENDERING_INFO;
enum VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES;
enum VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PRIVATE_VENDOR_INFO_PLACEHOLDER_OFFSET_0_NV = VkStructureType.PRIVATE_VENDOR_INFO_PLACEHOLDER_OFFSET_0_NV;
enum VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES;
enum VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV = VkStructureType.EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV = VkStructureType.EXPORT_MEMORY_ALLOCATE_INFO_NV;
enum VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV = VkStructureType.IMPORT_MEMORY_WIN32_HANDLE_INFO_NV;
enum VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV = VkStructureType.EXPORT_MEMORY_WIN32_HANDLE_INFO_NV;
enum VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV = VkStructureType.WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
enum VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2;
enum VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2;
enum VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2;
enum VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR = VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2;
enum VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO;
enum VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO;
enum VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO;
enum VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT = VkStructureType.VALIDATION_FLAGS_EXT;
enum VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN = VkStructureType.VI_SURFACE_CREATE_INFO_NN;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES;
enum VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT = VkStructureType.IMAGE_VIEW_ASTC_DECODE_MODE_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES;
enum VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO;
enum VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR = VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO;
enum VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR = VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES;
enum VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO;
enum VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR = VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO;
enum VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR = VkStructureType.IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR;
enum VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR = VkStructureType.EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR;
enum VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR = VkStructureType.MEMORY_WIN32_HANDLE_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR = VkStructureType.MEMORY_GET_WIN32_HANDLE_INFO_KHR;
enum VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR = VkStructureType.IMPORT_MEMORY_FD_INFO_KHR;
enum VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR = VkStructureType.MEMORY_FD_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR = VkStructureType.MEMORY_GET_FD_INFO_KHR;
enum VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR = VkStructureType.WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO;
enum VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES;
enum VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = VkStructureType.IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR;
enum VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = VkStructureType.EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR;
enum VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR = VkStructureType.D3D12_FENCE_SUBMIT_INFO_KHR;
enum VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR = VkStructureType.SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR;
enum VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR = VkStructureType.IMPORT_SEMAPHORE_FD_INFO_KHR;
enum VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR = VkStructureType.SEMAPHORE_GET_FD_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES;
enum VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT = VkStructureType.COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT = VkStructureType.CONDITIONAL_RENDERING_BEGIN_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES;
enum VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR = VkStructureType.PRESENT_REGIONS_KHR;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV = VkStructureType.PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT = VkStructureType.SURFACE_CAPABILITIES_2_EXT;
deprecated("aliased")
enum VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT;
enum VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT = VkStructureType.DISPLAY_POWER_INFO_EXT;
enum VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT = VkStructureType.DEVICE_EVENT_INFO_EXT;
enum VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT = VkStructureType.DISPLAY_EVENT_INFO_EXT;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT = VkStructureType.SWAPCHAIN_COUNTER_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE = VkStructureType.PRESENT_TIMES_INFO_GOOGLE;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX = VkStructureType.PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX;
enum VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX = VkStructureType.MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX;
enum VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV = VkStructureType.PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT = VkStructureType.PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT = VkStructureType.PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT = VkStructureType.PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_HDR_METADATA_EXT = VkStructureType.HDR_METADATA_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES;
enum VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO;
enum VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR = VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO;
enum VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR = VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO;
enum VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2;
enum VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2;
enum VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2;
enum VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR = VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2;
enum VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2;
enum VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR = VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO;
enum VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR = VK_STRUCTURE_TYPE_SUBPASS_END_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RELAXED_LINE_RASTERIZATION_FEATURES_IMG = VkStructureType.PHYSICAL_DEVICE_RELAXED_LINE_RASTERIZATION_FEATURES_IMG;
enum VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR = VkStructureType.SHARED_PRESENT_SURFACE_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO;
enum VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES;
enum VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR = VkStructureType.IMPORT_FENCE_WIN32_HANDLE_INFO_KHR;
enum VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR = VkStructureType.EXPORT_FENCE_WIN32_HANDLE_INFO_KHR;
enum VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR = VkStructureType.FENCE_GET_WIN32_HANDLE_INFO_KHR;
enum VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR = VkStructureType.IMPORT_FENCE_FD_INFO_KHR;
enum VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR = VkStructureType.FENCE_GET_FD_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR = VkStructureType.QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR = VkStructureType.PERFORMANCE_QUERY_SUBMIT_INFO_KHR;
enum VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR = VkStructureType.ACQUIRE_PROFILING_LOCK_INFO_KHR;
enum VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR = VkStructureType.PERFORMANCE_COUNTER_KHR;
enum VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR = VkStructureType.PERFORMANCE_COUNTER_DESCRIPTION_KHR;
enum VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_RESERVATION_INFO_KHR = VkStructureType.PERFORMANCE_QUERY_RESERVATION_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES;
enum VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO;
enum VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR = VkStructureType.PHYSICAL_DEVICE_SURFACE_INFO_2_KHR;
enum VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR = VkStructureType.SURFACE_CAPABILITIES_2_KHR;
enum VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR = VkStructureType.SURFACE_FORMAT_2_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR = VkStructureType.DISPLAY_PROPERTIES_2_KHR;
enum VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR = VkStructureType.DISPLAY_PLANE_PROPERTIES_2_KHR;
enum VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR = VkStructureType.DISPLAY_MODE_PROPERTIES_2_KHR;
enum VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR = VkStructureType.DISPLAY_PLANE_INFO_2_KHR;
enum VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR = VkStructureType.DISPLAY_PLANE_CAPABILITIES_2_KHR;
enum VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK = VkStructureType.IOS_SURFACE_CREATE_INFO_MVK;
enum VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK = VkStructureType.MACOS_SURFACE_CREATE_INFO_MVK;
enum VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS;
enum VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO;
enum VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT = VkStructureType.DEBUG_UTILS_OBJECT_NAME_INFO_EXT;
enum VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT = VkStructureType.DEBUG_UTILS_OBJECT_TAG_INFO_EXT;
enum VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT = VkStructureType.DEBUG_UTILS_LABEL_EXT;
enum VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT = VkStructureType.DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT;
enum VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT = VkStructureType.DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID = VkStructureType.ANDROID_HARDWARE_BUFFER_USAGE_ANDROID;
enum VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID = VkStructureType.ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID;
enum VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID = VkStructureType.ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID;
enum VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = VkStructureType.IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID;
enum VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = VkStructureType.MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID;
enum VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID = VkStructureType.EXTERNAL_FORMAT_ANDROID;
enum VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID = VkStructureType.ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES;
enum VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ENQUEUE_FEATURES_AMDX = VkStructureType.PHYSICAL_DEVICE_SHADER_ENQUEUE_FEATURES_AMDX;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ENQUEUE_PROPERTIES_AMDX = VkStructureType.PHYSICAL_DEVICE_SHADER_ENQUEUE_PROPERTIES_AMDX;
enum VK_STRUCTURE_TYPE_EXECUTION_GRAPH_PIPELINE_SCRATCH_SIZE_AMDX = VkStructureType.EXECUTION_GRAPH_PIPELINE_SCRATCH_SIZE_AMDX;
enum VK_STRUCTURE_TYPE_EXECUTION_GRAPH_PIPELINE_CREATE_INFO_AMDX = VkStructureType.EXECUTION_GRAPH_PIPELINE_CREATE_INFO_AMDX;
enum VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_NODE_CREATE_INFO_AMDX = VkStructureType.PIPELINE_SHADER_STAGE_NODE_CREATE_INFO_AMDX;
enum VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD = VkStructureType.ATTACHMENT_SAMPLE_COUNT_INFO_AMD;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES;
enum VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_BFLOAT16_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_SHADER_BFLOAT16_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT = VkStructureType.SAMPLE_LOCATIONS_INFO_EXT;
enum VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT = VkStructureType.RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT = VkStructureType.PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT = VkStructureType.MULTISAMPLE_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2;
enum VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2;
enum VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR = VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2;
enum VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2;
enum VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR = VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2;
enum VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT = VkStructureType.PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV = VkStructureType.PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR = VkStructureType.WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR = VkStructureType.ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR = VkStructureType.ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR = VkStructureType.ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR = VkStructureType.ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR = VkStructureType.ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR = VkStructureType.ACCELERATION_STRUCTURE_GEOMETRY_KHR;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR = VkStructureType.ACCELERATION_STRUCTURE_VERSION_INFO_KHR;
enum VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR = VkStructureType.COPY_ACCELERATION_STRUCTURE_INFO_KHR;
enum VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR = VkStructureType.COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR;
enum VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR = VkStructureType.COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR = VkStructureType.ACCELERATION_STRUCTURE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR = VkStructureType.ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR = VkStructureType.RAY_TRACING_PIPELINE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR = VkStructureType.RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR = VkStructureType.RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV = VkStructureType.PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV = VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO;
enum VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO;
enum VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR = VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO;
enum VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR = VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES;
enum VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES;
enum VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO;
enum VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO;
enum VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT = VkStructureType.DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT = VkStructureType.PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT;
enum VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT = VkStructureType.IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT = VkStructureType.IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT = VkStructureType.IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT = VkStructureType.DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT;
enum VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT = VkStructureType.VALIDATION_CACHE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT = VkStructureType.SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV = VkStructureType.PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV = VkStructureType.PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV = VkStructureType.RAY_TRACING_PIPELINE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV = VkStructureType.ACCELERATION_STRUCTURE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_GEOMETRY_NV = VkStructureType.GEOMETRY_NV;
enum VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV = VkStructureType.GEOMETRY_TRIANGLES_NV;
enum VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV = VkStructureType.GEOMETRY_AABB_NV;
enum VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV = VkStructureType.BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV;
enum VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV = VkStructureType.WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV = VkStructureType.ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV = VkStructureType.RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV = VkStructureType.ACCELERATION_STRUCTURE_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV = VkStructureType.PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT = VkStructureType.PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT;
enum VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT = VkStructureType.FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES;
enum VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT = VkStructureType.IMPORT_MEMORY_HOST_POINTER_INFO_EXT;
enum VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT = VkStructureType.MEMORY_HOST_POINTER_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD = VkStructureType.PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD;
enum VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT = VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD = VkStructureType.PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_KHR = VkStructureType.VIDEO_DECODE_H265_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR = VkStructureType.VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR = VkStructureType.VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_INFO_KHR = VkStructureType.VIDEO_DECODE_H265_PROFILE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_KHR = VkStructureType.VIDEO_DECODE_H265_PICTURE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR = VkStructureType.VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR;
enum VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES;
enum VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR = VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES;
enum VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD = VkStructureType.DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES;
enum VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES;
enum VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV = VkStructureType.PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV;
enum VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV = VkStructureType.CHECKPOINT_DATA_NV;
enum VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV = VkStructureType.QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV = VkStructureType.QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV;
enum VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV = VkStructureType.CHECKPOINT_DATA_2_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES;
enum VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR = VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO;
enum VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR = VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO;
enum VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR = VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL = VkStructureType.PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL;
enum VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL = VkStructureType.QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL;
deprecated("aliased")
enum VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL = VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL;
enum VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL = VkStructureType.INITIALIZE_PERFORMANCE_API_INFO_INTEL;
enum VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL = VkStructureType.PERFORMANCE_MARKER_INFO_INTEL;
enum VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL = VkStructureType.PERFORMANCE_STREAM_MARKER_INFO_INTEL;
enum VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL = VkStructureType.PERFORMANCE_OVERRIDE_INFO_INTEL;
enum VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL = VkStructureType.PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD = VkStructureType.DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD = VkStructureType.SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD;
enum VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA = VkStructureType.IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES;
enum VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT = VkStructureType.METAL_SURFACE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT = VkStructureType.RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT = VkStructureType.RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES;
enum VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES;
enum VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = VkStructureType.FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR = VkStructureType.PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR;
enum VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = VkStructureType.RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD = VkStructureType.PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD = VkStructureType.PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES;
enum VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_LOCATION_INFO_KHR = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_LOCATION_INFO;
enum VK_STRUCTURE_TYPE_RENDERING_INPUT_ATTACHMENT_INDEX_INFO_KHR = VK_STRUCTURE_TYPE_RENDERING_INPUT_ATTACHMENT_INDEX_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_QUAD_CONTROL_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_SHADER_QUAD_CONTROL_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT = VkStructureType.MEMORY_PRIORITY_ALLOCATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR = VkStructureType.SURFACE_PROTECTED_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES;
enum VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT;
enum VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO;
enum VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT = VkStructureType.BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES;
enum VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT = VkStructureType.VALIDATION_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV;
enum VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV = VkStructureType.COOPERATIVE_MATRIX_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV = VkStructureType.PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV = VkStructureType.FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT = VkStructureType.PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT = VkStructureType.SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT;
enum VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT = VkStructureType.SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT;
enum VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT = VkStructureType.SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT;
enum VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT = VkStructureType.HEADLESS_SURFACE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES;
enum VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO;
enum VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO;
enum VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR = VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES;
enum VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR = VkStructureType.PIPELINE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR = VkStructureType.PIPELINE_EXECUTABLE_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR = VkStructureType.PIPELINE_EXECUTABLE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR = VkStructureType.PIPELINE_EXECUTABLE_STATISTIC_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR = VkStructureType.PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES;
enum VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY_EXT = VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY;
enum VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY_EXT = VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY;
enum VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO_EXT = VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO;
enum VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO_EXT = VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO;
enum VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO_EXT = VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO;
enum VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO_EXT = VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO;
enum VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE_EXT = VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE;
enum VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY_EXT = VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY;
enum VK_STRUCTURE_TYPE_MEMORY_MAP_INFO_KHR = VK_STRUCTURE_TYPE_MEMORY_MAP_INFO;
enum VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO_KHR = VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAP_MEMORY_PLACED_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_MAP_MEMORY_PLACED_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAP_MEMORY_PLACED_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_MAP_MEMORY_PLACED_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_MEMORY_MAP_PLACED_INFO_EXT = VkStructureType.MEMORY_MAP_PLACED_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_EXT = VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_KHR;
enum VK_STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_EXT = VK_STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_EXT = VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_EXT = VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_KHR;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_EXT = VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_KHR;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_EXT = VK_STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV = VkStructureType.GRAPHICS_SHADER_GROUP_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV = VkStructureType.GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV = VkStructureType.INDIRECT_COMMANDS_LAYOUT_TOKEN_NV;
enum VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV = VkStructureType.INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV = VkStructureType.GENERATED_COMMANDS_INFO_NV;
enum VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV = VkStructureType.GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV;
enum VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV = VkStructureType.COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES;
enum VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM = VkStructureType.COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM;
enum VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM = VkStructureType.RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_DEPTH_BIAS_INFO_EXT = VkStructureType.DEPTH_BIAS_INFO_EXT;
enum VK_STRUCTURE_TYPE_DEPTH_BIAS_REPRESENTATION_INFO_EXT = VkStructureType.DEPTH_BIAS_REPRESENTATION_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT = VkStructureType.DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT = VkStructureType.DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT = VkStructureType.SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR = VkStructureType.PIPELINE_LIBRARY_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV;
enum VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_BARRIER_NV = VkStructureType.SURFACE_CAPABILITIES_PRESENT_BARRIER_NV;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV = VkStructureType.SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_PRESENT_ID_KHR = VkStructureType.PRESENT_ID_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES;
enum VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR = VkStructureType.VIDEO_ENCODE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR = VkStructureType.VIDEO_ENCODE_RATE_CONTROL_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR = VkStructureType.VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_CAPABILITIES_KHR = VkStructureType.VIDEO_ENCODE_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_USAGE_INFO_KHR = VkStructureType.VIDEO_ENCODE_USAGE_INFO_KHR;
enum VK_STRUCTURE_TYPE_QUERY_POOL_VIDEO_ENCODE_FEEDBACK_CREATE_INFO_KHR = VkStructureType.QUERY_POOL_VIDEO_ENCODE_FEEDBACK_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR = VkStructureType.PHYSICAL_DEVICE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_PROPERTIES_KHR = VkStructureType.VIDEO_ENCODE_QUALITY_LEVEL_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR = VkStructureType.VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_GET_INFO_KHR = VkStructureType.VIDEO_ENCODE_SESSION_PARAMETERS_GET_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_FEEDBACK_INFO_KHR = VkStructureType.VIDEO_ENCODE_SESSION_PARAMETERS_FEEDBACK_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV;
enum VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV = VkStructureType.DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_CUDA_MODULE_CREATE_INFO_NV = VkStructureType.CUDA_MODULE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_CUDA_FUNCTION_CREATE_INFO_NV = VkStructureType.CUDA_FUNCTION_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_CUDA_LAUNCH_INFO_NV = VkStructureType.CUDA_LAUNCH_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_REFRESH_OBJECT_LIST_KHR = VkStructureType.REFRESH_OBJECT_LIST_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_SHADING_FEATURES_QCOM = VkStructureType.PHYSICAL_DEVICE_TILE_SHADING_FEATURES_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_SHADING_PROPERTIES_QCOM = VkStructureType.PHYSICAL_DEVICE_TILE_SHADING_PROPERTIES_QCOM;
enum VK_STRUCTURE_TYPE_RENDER_PASS_TILE_SHADING_CREATE_INFO_QCOM = VkStructureType.RENDER_PASS_TILE_SHADING_CREATE_INFO_QCOM;
enum VK_STRUCTURE_TYPE_PER_TILE_BEGIN_INFO_QCOM = VkStructureType.PER_TILE_BEGIN_INFO_QCOM;
enum VK_STRUCTURE_TYPE_PER_TILE_END_INFO_QCOM = VkStructureType.PER_TILE_END_INFO_QCOM;
enum VK_STRUCTURE_TYPE_DISPATCH_TILE_INFO_QCOM = VkStructureType.DISPATCH_TILE_INFO_QCOM;
enum VK_STRUCTURE_TYPE_QUERY_LOW_LATENCY_SUPPORT_NV = VkStructureType.QUERY_LOW_LATENCY_SUPPORT_NV;
enum VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECT_CREATE_INFO_EXT = VkStructureType.EXPORT_METAL_OBJECT_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECTS_INFO_EXT = VkStructureType.EXPORT_METAL_OBJECTS_INFO_EXT;
enum VK_STRUCTURE_TYPE_EXPORT_METAL_DEVICE_INFO_EXT = VkStructureType.EXPORT_METAL_DEVICE_INFO_EXT;
enum VK_STRUCTURE_TYPE_EXPORT_METAL_COMMAND_QUEUE_INFO_EXT = VkStructureType.EXPORT_METAL_COMMAND_QUEUE_INFO_EXT;
enum VK_STRUCTURE_TYPE_EXPORT_METAL_BUFFER_INFO_EXT = VkStructureType.EXPORT_METAL_BUFFER_INFO_EXT;
enum VK_STRUCTURE_TYPE_IMPORT_METAL_BUFFER_INFO_EXT = VkStructureType.IMPORT_METAL_BUFFER_INFO_EXT;
enum VK_STRUCTURE_TYPE_EXPORT_METAL_TEXTURE_INFO_EXT = VkStructureType.EXPORT_METAL_TEXTURE_INFO_EXT;
enum VK_STRUCTURE_TYPE_IMPORT_METAL_TEXTURE_INFO_EXT = VkStructureType.IMPORT_METAL_TEXTURE_INFO_EXT;
enum VK_STRUCTURE_TYPE_EXPORT_METAL_IO_SURFACE_INFO_EXT = VkStructureType.EXPORT_METAL_IO_SURFACE_INFO_EXT;
enum VK_STRUCTURE_TYPE_IMPORT_METAL_IO_SURFACE_INFO_EXT = VkStructureType.IMPORT_METAL_IO_SURFACE_INFO_EXT;
enum VK_STRUCTURE_TYPE_EXPORT_METAL_SHARED_EVENT_INFO_EXT = VkStructureType.EXPORT_METAL_SHARED_EVENT_INFO_EXT;
enum VK_STRUCTURE_TYPE_IMPORT_METAL_SHARED_EVENT_INFO_EXT = VkStructureType.IMPORT_METAL_SHARED_EVENT_INFO_EXT;
enum VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR = VK_STRUCTURE_TYPE_MEMORY_BARRIER_2;
enum VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2;
enum VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2;
enum VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR = VK_STRUCTURE_TYPE_DEPENDENCY_INFO;
enum VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR = VK_STRUCTURE_TYPE_SUBMIT_INFO_2;
enum VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR = VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO;
enum VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_ADDRESS_INFO_EXT = VkStructureType.DESCRIPTOR_ADDRESS_INFO_EXT;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_GET_INFO_EXT = VkStructureType.DESCRIPTOR_GET_INFO_EXT;
enum VK_STRUCTURE_TYPE_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = VkStructureType.BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT;
enum VK_STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = VkStructureType.IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT;
enum VK_STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = VkStructureType.IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT;
enum VK_STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = VkStructureType.SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT;
enum VK_STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT = VkStructureType.OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT = VkStructureType.DESCRIPTOR_BUFFER_BINDING_INFO_EXT;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT = VkStructureType.DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = VkStructureType.ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT = VkStructureType.GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD = VkStructureType.PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV = VkStructureType.PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV = VkStructureType.ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV = VkStructureType.ACCELERATION_STRUCTURE_MOTION_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM = VkStructureType.COPY_COMMAND_TRANSFORM_INFO_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR = VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2;
enum VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR = VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2;
enum VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2;
enum VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR = VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2;
enum VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2;
enum VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR = VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2;
enum VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR = VK_STRUCTURE_TYPE_BUFFER_COPY_2;
enum VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR = VK_STRUCTURE_TYPE_IMAGE_COPY_2;
enum VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR = VK_STRUCTURE_TYPE_IMAGE_BLIT_2;
enum VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2;
enum VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR = VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT = VkStructureType.IMAGE_COMPRESSION_CONTROL_EXT;
enum VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_EXT = VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2;
enum VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_EXT = VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2;
enum VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT = VkStructureType.IMAGE_COMPRESSION_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FAULT_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_FAULT_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_DEVICE_FAULT_COUNTS_EXT = VkStructureType.DEVICE_FAULT_COUNTS_EXT;
enum VK_STRUCTURE_TYPE_DEVICE_FAULT_INFO_EXT = VkStructureType.DEVICE_FAULT_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT = VkStructureType.DIRECTFB_SURFACE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE = VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT = VkStructureType.VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT;
enum VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT = VkStructureType.VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_DRM_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT = VkStructureType.DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT = VkStructureType.PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_MODE_FIFO_LATEST_READY_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_MODE_FIFO_LATEST_READY_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA = VkStructureType.IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA;
enum VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA = VkStructureType.MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA;
enum VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA = VkStructureType.MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA;
enum VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA = VkStructureType.IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA;
enum VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA = VkStructureType.SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA;
enum VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA = VkStructureType.BUFFER_COLLECTION_CREATE_INFO_FUCHSIA;
enum VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA = VkStructureType.IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA;
enum VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA = VkStructureType.BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA;
enum VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA = VkStructureType.BUFFER_COLLECTION_PROPERTIES_FUCHSIA;
enum VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA = VkStructureType.BUFFER_CONSTRAINTS_INFO_FUCHSIA;
enum VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA = VkStructureType.BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA;
enum VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA = VkStructureType.IMAGE_CONSTRAINTS_INFO_FUCHSIA;
enum VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA = VkStructureType.IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA;
enum VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA = VkStructureType.SYSMEM_COLOR_SPACE_FUCHSIA;
enum VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA = VkStructureType.BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA;
enum VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI = VkStructureType.SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI = VkStructureType.PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI = VkStructureType.PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI = VkStructureType.PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI;
enum VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV = VkStructureType.MEMORY_GET_REMOTE_ADDRESS_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT = VkStructureType.PIPELINE_PROPERTIES_IDENTIFIER_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR;
enum VK_STRUCTURE_TYPE_IMPORT_FENCE_SCI_SYNC_INFO_NV = VkStructureType.IMPORT_FENCE_SCI_SYNC_INFO_NV;
enum VK_STRUCTURE_TYPE_EXPORT_FENCE_SCI_SYNC_INFO_NV = VkStructureType.EXPORT_FENCE_SCI_SYNC_INFO_NV;
enum VK_STRUCTURE_TYPE_FENCE_GET_SCI_SYNC_INFO_NV = VkStructureType.FENCE_GET_SCI_SYNC_INFO_NV;
enum VK_STRUCTURE_TYPE_SCI_SYNC_ATTRIBUTES_INFO_NV = VkStructureType.SCI_SYNC_ATTRIBUTES_INFO_NV;
enum VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_SCI_SYNC_INFO_NV = VkStructureType.IMPORT_SEMAPHORE_SCI_SYNC_INFO_NV;
enum VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_SCI_SYNC_INFO_NV = VkStructureType.EXPORT_SEMAPHORE_SCI_SYNC_INFO_NV;
enum VK_STRUCTURE_TYPE_SEMAPHORE_GET_SCI_SYNC_INFO_NV = VkStructureType.SEMAPHORE_GET_SCI_SYNC_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SCI_SYNC_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_SCI_SYNC_FEATURES_NV;
enum VK_STRUCTURE_TYPE_IMPORT_MEMORY_SCI_BUF_INFO_NV = VkStructureType.IMPORT_MEMORY_SCI_BUF_INFO_NV;
enum VK_STRUCTURE_TYPE_EXPORT_MEMORY_SCI_BUF_INFO_NV = VkStructureType.EXPORT_MEMORY_SCI_BUF_INFO_NV;
enum VK_STRUCTURE_TYPE_MEMORY_GET_SCI_BUF_INFO_NV = VkStructureType.MEMORY_GET_SCI_BUF_INFO_NV;
enum VK_STRUCTURE_TYPE_MEMORY_SCI_BUF_PROPERTIES_NV = VkStructureType.MEMORY_SCI_BUF_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCI_BUF_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCI_BUF_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SCI_BUF_FEATURES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCI_BUF_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_FRAME_BOUNDARY_EXT = VkStructureType.FRAME_BOUNDARY_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT = VkStructureType.SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT;
enum VK_STRUCTURE_TYPE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT = VkStructureType.MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX = VkStructureType.SCREEN_SURFACE_CREATE_INFO_QNX;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT = VkStructureType.PIPELINE_COLOR_WRITE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_UNTYPED_POINTERS_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_SHADER_UNTYPED_POINTERS_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES;
enum VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT = VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_ENCODE_RGB_CONVERSION_FEATURES_VALVE = VkStructureType.PHYSICAL_DEVICE_VIDEO_ENCODE_RGB_CONVERSION_FEATURES_VALVE;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_RGB_CONVERSION_CAPABILITIES_VALVE = VkStructureType.VIDEO_ENCODE_RGB_CONVERSION_CAPABILITIES_VALVE;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_PROFILE_RGB_CONVERSION_INFO_VALVE = VkStructureType.VIDEO_ENCODE_PROFILE_RGB_CONVERSION_INFO_VALVE;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_RGB_CONVERSION_CREATE_INFO_VALVE = VkStructureType.VIDEO_ENCODE_SESSION_RGB_CONVERSION_CREATE_INFO_VALVE;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT = VkStructureType.IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_MICROMAP_BUILD_INFO_EXT = VkStructureType.MICROMAP_BUILD_INFO_EXT;
enum VK_STRUCTURE_TYPE_MICROMAP_VERSION_INFO_EXT = VkStructureType.MICROMAP_VERSION_INFO_EXT;
enum VK_STRUCTURE_TYPE_COPY_MICROMAP_INFO_EXT = VkStructureType.COPY_MICROMAP_INFO_EXT;
enum VK_STRUCTURE_TYPE_COPY_MICROMAP_TO_MEMORY_INFO_EXT = VkStructureType.COPY_MICROMAP_TO_MEMORY_INFO_EXT;
enum VK_STRUCTURE_TYPE_COPY_MEMORY_TO_MICROMAP_INFO_EXT = VkStructureType.COPY_MEMORY_TO_MICROMAP_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_MICROMAP_CREATE_INFO_EXT = VkStructureType.MICROMAP_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_MICROMAP_BUILD_SIZES_INFO_EXT = VkStructureType.MICROMAP_BUILD_SIZES_INFO_EXT;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT = VkStructureType.ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISPLACEMENT_MICROMAP_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_DISPLACEMENT_MICROMAP_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISPLACEMENT_MICROMAP_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_DISPLACEMENT_MICROMAP_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_DISPLACEMENT_MICROMAP_NV = VkStructureType.ACCELERATION_STRUCTURE_TRIANGLES_DISPLACEMENT_MICROMAP_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI = VkStructureType.PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI = VkStructureType.PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_VRS_FEATURES_HUAWEI = VkStructureType.PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_VRS_FEATURES_HUAWEI;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT = VkStructureType.SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES;
enum VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR = VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS;
enum VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR = VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM = VkStructureType.PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES;
enum VK_STRUCTURE_TYPE_DEVICE_QUEUE_SHADER_CORE_CONTROL_CREATE_INFO_ARM = VkStructureType.DEVICE_QUEUE_SHADER_CORE_CONTROL_CREATE_INFO_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_FEATURES_ARM = VkStructureType.PHYSICAL_DEVICE_SCHEDULING_CONTROLS_FEATURES_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_PROPERTIES_ARM = VkStructureType.PHYSICAL_DEVICE_SCHEDULING_CONTROLS_PROPERTIES_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_IMAGE_VIEW_SLICED_CREATE_INFO_EXT = VkStructureType.IMAGE_VIEW_SLICED_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE = VkStructureType.PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE = VkStructureType.DESCRIPTOR_SET_BINDING_REFERENCE_VALVE;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE = VkStructureType.DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_FEATURES_ARM = VkStructureType.PHYSICAL_DEVICE_RENDER_PASS_STRIPED_FEATURES_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_PROPERTIES_ARM = VkStructureType.PHYSICAL_DEVICE_RENDER_PASS_STRIPED_PROPERTIES_ARM;
enum VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_BEGIN_INFO_ARM = VkStructureType.RENDER_PASS_STRIPE_BEGIN_INFO_ARM;
enum VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_INFO_ARM = VkStructureType.RENDER_PASS_STRIPE_INFO_ARM;
enum VK_STRUCTURE_TYPE_RENDER_PASS_STRIPE_SUBMIT_INFO_ARM = VkStructureType.RENDER_PASS_STRIPE_SUBMIT_INFO_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM = VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV;
enum VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV = VkStructureType.COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV;
enum VK_STRUCTURE_TYPE_PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV = VkStructureType.PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_LINEAR_SWEPT_SPHERES_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_RAY_TRACING_LINEAR_SWEPT_SPHERES_FEATURES_NV;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_LINEAR_SWEPT_SPHERES_DATA_NV = VkStructureType.ACCELERATION_STRUCTURE_GEOMETRY_LINEAR_SWEPT_SPHERES_DATA_NV;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_SPHERES_DATA_NV = VkStructureType.ACCELERATION_STRUCTURE_GEOMETRY_SPHERES_DATA_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MAXIMAL_RECONVERGENCE_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_SHADER_MAXIMAL_RECONVERGENCE_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_APPLICATION_PARAMETERS_EXT = VkStructureType.APPLICATION_PARAMETERS_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM = VkStructureType.PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM = VkStructureType.PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM;
enum VK_STRUCTURE_TYPE_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM = VkStructureType.IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT = VkStructureType.EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT = VkStructureType.RENDER_PASS_CREATION_CONTROL_EXT;
enum VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT = VkStructureType.RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT = VkStructureType.RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_INFO_LUNARG = VkStructureType.DIRECT_DRIVER_LOADING_INFO_LUNARG;
enum VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_LIST_LUNARG = VkStructureType.DIRECT_DRIVER_LOADING_LIST_LUNARG;
enum VK_STRUCTURE_TYPE_TENSOR_CREATE_INFO_ARM = VkStructureType.TENSOR_CREATE_INFO_ARM;
enum VK_STRUCTURE_TYPE_TENSOR_VIEW_CREATE_INFO_ARM = VkStructureType.TENSOR_VIEW_CREATE_INFO_ARM;
enum VK_STRUCTURE_TYPE_BIND_TENSOR_MEMORY_INFO_ARM = VkStructureType.BIND_TENSOR_MEMORY_INFO_ARM;
enum VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_TENSOR_ARM = VkStructureType.WRITE_DESCRIPTOR_SET_TENSOR_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TENSOR_PROPERTIES_ARM = VkStructureType.PHYSICAL_DEVICE_TENSOR_PROPERTIES_ARM;
enum VK_STRUCTURE_TYPE_TENSOR_FORMAT_PROPERTIES_ARM = VkStructureType.TENSOR_FORMAT_PROPERTIES_ARM;
enum VK_STRUCTURE_TYPE_TENSOR_DESCRIPTION_ARM = VkStructureType.TENSOR_DESCRIPTION_ARM;
enum VK_STRUCTURE_TYPE_TENSOR_MEMORY_REQUIREMENTS_INFO_ARM = VkStructureType.TENSOR_MEMORY_REQUIREMENTS_INFO_ARM;
enum VK_STRUCTURE_TYPE_TENSOR_MEMORY_BARRIER_ARM = VkStructureType.TENSOR_MEMORY_BARRIER_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TENSOR_FEATURES_ARM = VkStructureType.PHYSICAL_DEVICE_TENSOR_FEATURES_ARM;
enum VK_STRUCTURE_TYPE_DEVICE_TENSOR_MEMORY_REQUIREMENTS_ARM = VkStructureType.DEVICE_TENSOR_MEMORY_REQUIREMENTS_ARM;
enum VK_STRUCTURE_TYPE_COPY_TENSOR_INFO_ARM = VkStructureType.COPY_TENSOR_INFO_ARM;
enum VK_STRUCTURE_TYPE_TENSOR_COPY_ARM = VkStructureType.TENSOR_COPY_ARM;
enum VK_STRUCTURE_TYPE_TENSOR_DEPENDENCY_INFO_ARM = VkStructureType.TENSOR_DEPENDENCY_INFO_ARM;
enum VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_TENSOR_ARM = VkStructureType.MEMORY_DEDICATED_ALLOCATE_INFO_TENSOR_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_TENSOR_INFO_ARM = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_TENSOR_INFO_ARM;
enum VK_STRUCTURE_TYPE_EXTERNAL_TENSOR_PROPERTIES_ARM = VkStructureType.EXTERNAL_TENSOR_PROPERTIES_ARM;
enum VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_TENSOR_CREATE_INFO_ARM = VkStructureType.EXTERNAL_MEMORY_TENSOR_CREATE_INFO_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_TENSOR_FEATURES_ARM = VkStructureType.PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_TENSOR_FEATURES_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_TENSOR_PROPERTIES_ARM = VkStructureType.PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_TENSOR_PROPERTIES_ARM;
enum VK_STRUCTURE_TYPE_DESCRIPTOR_GET_TENSOR_INFO_ARM = VkStructureType.DESCRIPTOR_GET_TENSOR_INFO_ARM;
enum VK_STRUCTURE_TYPE_TENSOR_CAPTURE_DESCRIPTOR_DATA_INFO_ARM = VkStructureType.TENSOR_CAPTURE_DESCRIPTOR_DATA_INFO_ARM;
enum VK_STRUCTURE_TYPE_TENSOR_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_ARM = VkStructureType.TENSOR_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_ARM;
enum VK_STRUCTURE_TYPE_FRAME_BOUNDARY_TENSORS_ARM = VkStructureType.FRAME_BOUNDARY_TENSORS_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT = VkStructureType.PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_SHADER_MODULE_IDENTIFIER_EXT = VkStructureType.SHADER_MODULE_IDENTIFIER_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV = VkStructureType.OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV;
enum VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV = VkStructureType.OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_INFO_NV = VkStructureType.OPTICAL_FLOW_SESSION_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_OPTICAL_FLOW_EXECUTE_INFO_NV = VkStructureType.OPTICAL_FLOW_EXECUTE_INFO_NV;
enum VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV = VkStructureType.OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_FEATURES_ANDROID = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_FEATURES_ANDROID;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_PROPERTIES_ANDROID = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_PROPERTIES_ANDROID;
enum VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_RESOLVE_PROPERTIES_ANDROID = VkStructureType.ANDROID_HARDWARE_BUFFER_FORMAT_RESOLVE_PROPERTIES_ANDROID;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES;
enum VK_STRUCTURE_TYPE_RENDERING_AREA_INFO_KHR = VK_STRUCTURE_TYPE_RENDERING_AREA_INFO;
enum VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO_KHR = VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO;
enum VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR = VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2;
enum VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR = VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2;
enum VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO;
enum VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ANTI_LAG_FEATURES_AMD = VkStructureType.PHYSICAL_DEVICE_ANTI_LAG_FEATURES_AMD;
enum VK_STRUCTURE_TYPE_ANTI_LAG_DATA_AMD = VkStructureType.ANTI_LAG_DATA_AMD;
enum VK_STRUCTURE_TYPE_ANTI_LAG_PRESENTATION_INFO_AMD = VkStructureType.ANTI_LAG_PRESENTATION_INFO_AMD;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DENSE_GEOMETRY_FORMAT_FEATURES_AMDX = VkStructureType.PHYSICAL_DEVICE_DENSE_GEOMETRY_FORMAT_FEATURES_AMDX;
enum VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DENSE_GEOMETRY_FORMAT_TRIANGLES_DATA_AMDX = VkStructureType.ACCELERATION_STRUCTURE_DENSE_GEOMETRY_FORMAT_TRIANGLES_DATA_AMDX;
enum VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_ID_2_KHR = VkStructureType.SURFACE_CAPABILITIES_PRESENT_ID_2_KHR;
enum VK_STRUCTURE_TYPE_PRESENT_ID_2_KHR = VkStructureType.PRESENT_ID_2_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_2_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_PRESENT_ID_2_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_WAIT_2_KHR = VkStructureType.SURFACE_CAPABILITIES_PRESENT_WAIT_2_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_2_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_PRESENT_WAIT_2_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PRESENT_WAIT_2_INFO_KHR = VkStructureType.PRESENT_WAIT_2_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_SHADER_CREATE_INFO_EXT = VkStructureType.SHADER_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_SHADER_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_BINARY_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_PIPELINE_BINARY_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_BINARY_CREATE_INFO_KHR = VkStructureType.PIPELINE_BINARY_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_BINARY_INFO_KHR = VkStructureType.PIPELINE_BINARY_INFO_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_BINARY_KEY_KHR = VkStructureType.PIPELINE_BINARY_KEY_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_BINARY_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_PIPELINE_BINARY_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_RELEASE_CAPTURED_PIPELINE_DATA_INFO_KHR = VkStructureType.RELEASE_CAPTURED_PIPELINE_DATA_INFO_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_BINARY_DATA_INFO_KHR = VkStructureType.PIPELINE_BINARY_DATA_INFO_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_CREATE_INFO_KHR = VkStructureType.PIPELINE_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_DEVICE_PIPELINE_BINARY_INTERNAL_CACHE_CONTROL_KHR = VkStructureType.DEVICE_PIPELINE_BINARY_INTERNAL_CACHE_CONTROL_KHR;
enum VK_STRUCTURE_TYPE_PIPELINE_BINARY_HANDLES_INFO_KHR = VkStructureType.PIPELINE_BINARY_HANDLES_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM = VkStructureType.PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM;
enum VK_STRUCTURE_TYPE_TILE_PROPERTIES_QCOM = VkStructureType.TILE_PROPERTIES_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC = VkStructureType.PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC;
enum VK_STRUCTURE_TYPE_AMIGO_PROFILING_SUBMIT_INFO_SEC = VkStructureType.AMIGO_PROFILING_SUBMIT_INFO_SEC;
enum VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_KHR = VkStructureType.SURFACE_PRESENT_MODE_KHR;
enum VK_STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_KHR = VkStructureType.SURFACE_PRESENT_SCALING_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_KHR = VkStructureType.SURFACE_PRESENT_MODE_COMPATIBILITY_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_KHR = VkStructureType.SWAPCHAIN_PRESENT_FENCE_INFO_KHR;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_KHR = VkStructureType.SWAPCHAIN_PRESENT_MODES_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_KHR = VkStructureType.SWAPCHAIN_PRESENT_MODE_INFO_KHR;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_KHR = VkStructureType.SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_KHR = VkStructureType.RELEASE_SWAPCHAIN_IMAGES_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM = VkStructureType.PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM;
enum VK_STRUCTURE_TYPE_SEMAPHORE_SCI_SYNC_POOL_CREATE_INFO_NV = VkStructureType.SEMAPHORE_SCI_SYNC_POOL_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_SEMAPHORE_SCI_SYNC_CREATE_INFO_NV = VkStructureType.SEMAPHORE_SCI_SYNC_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SCI_SYNC_2_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_SCI_SYNC_2_FEATURES_NV;
enum VK_STRUCTURE_TYPE_DEVICE_SEMAPHORE_SCI_SYNC_POOL_RESERVATION_CREATE_INFO_NV = VkStructureType.DEVICE_SEMAPHORE_SCI_SYNC_POOL_RESERVATION_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_VECTOR_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_COOPERATIVE_VECTOR_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_VECTOR_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_COOPERATIVE_VECTOR_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_COOPERATIVE_VECTOR_PROPERTIES_NV = VkStructureType.COOPERATIVE_VECTOR_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_CONVERT_COOPERATIVE_VECTOR_MATRIX_INFO_NV = VkStructureType.CONVERT_COOPERATIVE_VECTOR_MATRIX_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT = VkStructureType.MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_VERTEX_ATTRIBUTES_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_LEGACY_VERTEX_ATTRIBUTES_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_VERTEX_ATTRIBUTES_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_LEGACY_VERTEX_ATTRIBUTES_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_LAYER_SETTINGS_CREATE_INFO_EXT = VkStructureType.LAYER_SETTINGS_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM = VkStructureType.PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM = VkStructureType.PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_LATENCY_SLEEP_MODE_INFO_NV = VkStructureType.LATENCY_SLEEP_MODE_INFO_NV;
enum VK_STRUCTURE_TYPE_LATENCY_SLEEP_INFO_NV = VkStructureType.LATENCY_SLEEP_INFO_NV;
enum VK_STRUCTURE_TYPE_SET_LATENCY_MARKER_INFO_NV = VkStructureType.SET_LATENCY_MARKER_INFO_NV;
enum VK_STRUCTURE_TYPE_GET_LATENCY_MARKER_INFO_NV = VkStructureType.GET_LATENCY_MARKER_INFO_NV;
enum VK_STRUCTURE_TYPE_LATENCY_TIMINGS_FRAME_REPORT_NV = VkStructureType.LATENCY_TIMINGS_FRAME_REPORT_NV;
enum VK_STRUCTURE_TYPE_LATENCY_SUBMISSION_PRESENT_ID_NV = VkStructureType.LATENCY_SUBMISSION_PRESENT_ID_NV;
enum VK_STRUCTURE_TYPE_OUT_OF_BAND_QUEUE_TYPE_INFO_NV = VkStructureType.OUT_OF_BAND_QUEUE_TYPE_INFO_NV;
enum VK_STRUCTURE_TYPE_SWAPCHAIN_LATENCY_CREATE_INFO_NV = VkStructureType.SWAPCHAIN_LATENCY_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_LATENCY_SURFACE_CAPABILITIES_NV = VkStructureType.LATENCY_SURFACE_CAPABILITIES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_KHR = VkStructureType.COOPERATIVE_MATRIX_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_CREATE_INFO_ARM = VkStructureType.DATA_GRAPH_PIPELINE_CREATE_INFO_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_SESSION_CREATE_INFO_ARM = VkStructureType.DATA_GRAPH_PIPELINE_SESSION_CREATE_INFO_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_RESOURCE_INFO_ARM = VkStructureType.DATA_GRAPH_PIPELINE_RESOURCE_INFO_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_CONSTANT_ARM = VkStructureType.DATA_GRAPH_PIPELINE_CONSTANT_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_SESSION_MEMORY_REQUIREMENTS_INFO_ARM = VkStructureType.DATA_GRAPH_PIPELINE_SESSION_MEMORY_REQUIREMENTS_INFO_ARM;
enum VK_STRUCTURE_TYPE_BIND_DATA_GRAPH_PIPELINE_SESSION_MEMORY_INFO_ARM = VkStructureType.BIND_DATA_GRAPH_PIPELINE_SESSION_MEMORY_INFO_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DATA_GRAPH_FEATURES_ARM = VkStructureType.PHYSICAL_DEVICE_DATA_GRAPH_FEATURES_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_SHADER_MODULE_CREATE_INFO_ARM = VkStructureType.DATA_GRAPH_PIPELINE_SHADER_MODULE_CREATE_INFO_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_PROPERTY_QUERY_RESULT_ARM = VkStructureType.DATA_GRAPH_PIPELINE_PROPERTY_QUERY_RESULT_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_INFO_ARM = VkStructureType.DATA_GRAPH_PIPELINE_INFO_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_COMPILER_CONTROL_CREATE_INFO_ARM = VkStructureType.DATA_GRAPH_PIPELINE_COMPILER_CONTROL_CREATE_INFO_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_SESSION_BIND_POINT_REQUIREMENTS_INFO_ARM = VkStructureType.DATA_GRAPH_PIPELINE_SESSION_BIND_POINT_REQUIREMENTS_INFO_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_SESSION_BIND_POINT_REQUIREMENT_ARM = VkStructureType.DATA_GRAPH_PIPELINE_SESSION_BIND_POINT_REQUIREMENT_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_IDENTIFIER_CREATE_INFO_ARM = VkStructureType.DATA_GRAPH_PIPELINE_IDENTIFIER_CREATE_INFO_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_DISPATCH_INFO_ARM = VkStructureType.DATA_GRAPH_PIPELINE_DISPATCH_INFO_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PROCESSING_ENGINE_CREATE_INFO_ARM = VkStructureType.DATA_GRAPH_PROCESSING_ENGINE_CREATE_INFO_ARM;
enum VK_STRUCTURE_TYPE_QUEUE_FAMILY_DATA_GRAPH_PROCESSING_ENGINE_PROPERTIES_ARM = VkStructureType.QUEUE_FAMILY_DATA_GRAPH_PROCESSING_ENGINE_PROPERTIES_ARM;
enum VK_STRUCTURE_TYPE_QUEUE_FAMILY_DATA_GRAPH_PROPERTIES_ARM = VkStructureType.QUEUE_FAMILY_DATA_GRAPH_PROPERTIES_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_QUEUE_FAMILY_DATA_GRAPH_PROCESSING_ENGINE_INFO_ARM = VkStructureType.PHYSICAL_DEVICE_QUEUE_FAMILY_DATA_GRAPH_PROCESSING_ENGINE_INFO_ARM;
enum VK_STRUCTURE_TYPE_DATA_GRAPH_PIPELINE_CONSTANT_TENSOR_SEMI_STRUCTURED_SPARSITY_INFO_ARM = VkStructureType.DATA_GRAPH_PIPELINE_CONSTANT_TENSOR_SEMI_STRUCTURED_SPARSITY_INFO_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM = VkStructureType.PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM;
enum VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM = VkStructureType.MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_CAPABILITIES_KHR = VkStructureType.VIDEO_DECODE_AV1_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_PICTURE_INFO_KHR = VkStructureType.VIDEO_DECODE_AV1_PICTURE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_PROFILE_INFO_KHR = VkStructureType.VIDEO_DECODE_AV1_PROFILE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_SESSION_PARAMETERS_CREATE_INFO_KHR = VkStructureType.VIDEO_DECODE_AV1_SESSION_PARAMETERS_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_DPB_SLOT_INFO_KHR = VkStructureType.VIDEO_DECODE_AV1_DPB_SLOT_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_AV1_CAPABILITIES_KHR = VkStructureType.VIDEO_ENCODE_AV1_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_AV1_SESSION_PARAMETERS_CREATE_INFO_KHR = VkStructureType.VIDEO_ENCODE_AV1_SESSION_PARAMETERS_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_AV1_PICTURE_INFO_KHR = VkStructureType.VIDEO_ENCODE_AV1_PICTURE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_AV1_DPB_SLOT_INFO_KHR = VkStructureType.VIDEO_ENCODE_AV1_DPB_SLOT_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_ENCODE_AV1_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_VIDEO_ENCODE_AV1_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_AV1_PROFILE_INFO_KHR = VkStructureType.VIDEO_ENCODE_AV1_PROFILE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_AV1_RATE_CONTROL_INFO_KHR = VkStructureType.VIDEO_ENCODE_AV1_RATE_CONTROL_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_AV1_RATE_CONTROL_LAYER_INFO_KHR = VkStructureType.VIDEO_ENCODE_AV1_RATE_CONTROL_LAYER_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_AV1_QUALITY_LEVEL_PROPERTIES_KHR = VkStructureType.VIDEO_ENCODE_AV1_QUALITY_LEVEL_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_AV1_SESSION_CREATE_INFO_KHR = VkStructureType.VIDEO_ENCODE_AV1_SESSION_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_AV1_GOP_REMAINING_FRAME_INFO_KHR = VkStructureType.VIDEO_ENCODE_AV1_GOP_REMAINING_FRAME_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_DECODE_VP9_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_VIDEO_DECODE_VP9_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_VP9_CAPABILITIES_KHR = VkStructureType.VIDEO_DECODE_VP9_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_VP9_PICTURE_INFO_KHR = VkStructureType.VIDEO_DECODE_VP9_PICTURE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_VP9_PROFILE_INFO_KHR = VkStructureType.VIDEO_DECODE_VP9_PROFILE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_MAINTENANCE_1_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_VIDEO_MAINTENANCE_1_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_INLINE_QUERY_INFO_KHR = VkStructureType.VIDEO_INLINE_QUERY_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PER_STAGE_DESCRIPTOR_SET_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_PER_STAGE_DESCRIPTOR_SET_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM = VkStructureType.PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM = VkStructureType.PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM;
enum VK_STRUCTURE_TYPE_SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM = VkStructureType.SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM;
enum VK_STRUCTURE_TYPE_SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM = VkStructureType.SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM = VkStructureType.PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM;
enum VK_STRUCTURE_TYPE_BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM = VkStructureType.BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM = VkStructureType.PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM;
enum VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM = VkStructureType.SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM = VkStructureType.PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES;
enum VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFIED_IMAGE_LAYOUTS_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_UNIFIED_IMAGE_LAYOUTS_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_ATTACHMENT_FEEDBACK_LOOP_INFO_EXT = VkStructureType.ATTACHMENT_FEEDBACK_LOOP_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES;
enum VK_STRUCTURE_TYPE_SCREEN_BUFFER_PROPERTIES_QNX = VkStructureType.SCREEN_BUFFER_PROPERTIES_QNX;
enum VK_STRUCTURE_TYPE_SCREEN_BUFFER_FORMAT_PROPERTIES_QNX = VkStructureType.SCREEN_BUFFER_FORMAT_PROPERTIES_QNX;
enum VK_STRUCTURE_TYPE_IMPORT_SCREEN_BUFFER_INFO_QNX = VkStructureType.IMPORT_SCREEN_BUFFER_INFO_QNX;
enum VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_QNX = VkStructureType.EXTERNAL_FORMAT_QNX;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCREEN_BUFFER_FEATURES_QNX = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCREEN_BUFFER_FEATURES_QNX;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT = VkStructureType.PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES;
enum VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_KHR = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES;
enum VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_KHR = VkStructureType.CALIBRATED_TIMESTAMP_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES_KHR = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES;
enum VK_STRUCTURE_TYPE_BIND_MEMORY_STATUS_KHR = VK_STRUCTURE_TYPE_BIND_MEMORY_STATUS;
enum VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO_KHR = VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO;
enum VK_STRUCTURE_TYPE_PUSH_CONSTANTS_INFO_KHR = VK_STRUCTURE_TYPE_PUSH_CONSTANTS_INFO;
enum VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO_KHR = VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO;
enum VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO_KHR = VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO;
enum VK_STRUCTURE_TYPE_SET_DESCRIPTOR_BUFFER_OFFSETS_INFO_EXT = VkStructureType.SET_DESCRIPTOR_BUFFER_OFFSETS_INFO_EXT;
enum VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_BUFFER_EMBEDDED_SAMPLERS_INFO_EXT = VkStructureType.BIND_DESCRIPTOR_BUFFER_EMBEDDED_SAMPLERS_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_MEMORY_HEAP_FEATURES_QCOM = VkStructureType.PHYSICAL_DEVICE_TILE_MEMORY_HEAP_FEATURES_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_MEMORY_HEAP_PROPERTIES_QCOM = VkStructureType.PHYSICAL_DEVICE_TILE_MEMORY_HEAP_PROPERTIES_QCOM;
enum VK_STRUCTURE_TYPE_TILE_MEMORY_REQUIREMENTS_QCOM = VkStructureType.TILE_MEMORY_REQUIREMENTS_QCOM;
enum VK_STRUCTURE_TYPE_TILE_MEMORY_BIND_INFO_QCOM = VkStructureType.TILE_MEMORY_BIND_INFO_QCOM;
enum VK_STRUCTURE_TYPE_TILE_MEMORY_SIZE_INFO_QCOM = VkStructureType.TILE_MEMORY_SIZE_INFO_QCOM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_COPY_MEMORY_INDIRECT_INFO_KHR = VkStructureType.COPY_MEMORY_INDIRECT_INFO_KHR;
enum VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INDIRECT_INFO_KHR = VkStructureType.COPY_MEMORY_TO_IMAGE_INDIRECT_INFO_KHR;
enum VK_STRUCTURE_TYPE_DISPLAY_SURFACE_STEREO_CREATE_INFO_NV = VkStructureType.DISPLAY_SURFACE_STEREO_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_DISPLAY_MODE_STEREO_PROPERTIES_NV = VkStructureType.DISPLAY_MODE_STEREO_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_INTRA_REFRESH_CAPABILITIES_KHR = VkStructureType.VIDEO_ENCODE_INTRA_REFRESH_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_INTRA_REFRESH_CREATE_INFO_KHR = VkStructureType.VIDEO_ENCODE_SESSION_INTRA_REFRESH_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_INTRA_REFRESH_INFO_KHR = VkStructureType.VIDEO_ENCODE_INTRA_REFRESH_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_REFERENCE_INTRA_REFRESH_INFO_KHR = VkStructureType.VIDEO_REFERENCE_INTRA_REFRESH_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_ENCODE_INTRA_REFRESH_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_VIDEO_ENCODE_INTRA_REFRESH_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUANTIZATION_MAP_CAPABILITIES_KHR = VkStructureType.VIDEO_ENCODE_QUANTIZATION_MAP_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_FORMAT_QUANTIZATION_MAP_PROPERTIES_KHR = VkStructureType.VIDEO_FORMAT_QUANTIZATION_MAP_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUANTIZATION_MAP_INFO_KHR = VkStructureType.VIDEO_ENCODE_QUANTIZATION_MAP_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_QUANTIZATION_MAP_SESSION_PARAMETERS_CREATE_INFO_KHR = VkStructureType.VIDEO_ENCODE_QUANTIZATION_MAP_SESSION_PARAMETERS_CREATE_INFO_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_ENCODE_QUANTIZATION_MAP_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_VIDEO_ENCODE_QUANTIZATION_MAP_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_QUANTIZATION_MAP_CAPABILITIES_KHR = VkStructureType.VIDEO_ENCODE_H264_QUANTIZATION_MAP_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_QUANTIZATION_MAP_CAPABILITIES_KHR = VkStructureType.VIDEO_ENCODE_H265_QUANTIZATION_MAP_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_FORMAT_H265_QUANTIZATION_MAP_PROPERTIES_KHR = VkStructureType.VIDEO_FORMAT_H265_QUANTIZATION_MAP_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_ENCODE_AV1_QUANTIZATION_MAP_CAPABILITIES_KHR = VkStructureType.VIDEO_ENCODE_AV1_QUANTIZATION_MAP_CAPABILITIES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_FORMAT_AV1_QUANTIZATION_MAP_PROPERTIES_KHR = VkStructureType.VIDEO_FORMAT_AV1_QUANTIZATION_MAP_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAW_ACCESS_CHAINS_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_RAW_ACCESS_CHAINS_FEATURES_NV;
enum VK_STRUCTURE_TYPE_EXTERNAL_COMPUTE_QUEUE_DEVICE_CREATE_INFO_NV = VkStructureType.EXTERNAL_COMPUTE_QUEUE_DEVICE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_EXTERNAL_COMPUTE_QUEUE_CREATE_INFO_NV = VkStructureType.EXTERNAL_COMPUTE_QUEUE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_EXTERNAL_COMPUTE_QUEUE_DATA_PARAMS_NV = VkStructureType.EXTERNAL_COMPUTE_QUEUE_DATA_PARAMS_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_COMPUTE_QUEUE_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_EXTERNAL_COMPUTE_QUEUE_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_RELAXED_EXTENDED_INSTRUCTION_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_SHADER_RELAXED_EXTENDED_INSTRUCTION_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMMAND_BUFFER_INHERITANCE_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_COMMAND_BUFFER_INHERITANCE_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_7_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_MAINTENANCE_7_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_7_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_MAINTENANCE_7_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_API_PROPERTIES_LIST_KHR = VkStructureType.PHYSICAL_DEVICE_LAYERED_API_PROPERTIES_LIST_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_API_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_LAYERED_API_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_API_VULKAN_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_LAYERED_API_VULKAN_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT16_VECTOR_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT16_VECTOR_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_REPLICATED_COMPOSITES_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_SHADER_REPLICATED_COMPOSITES_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT8_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_SHADER_FLOAT8_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_VALIDATION_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_RAY_TRACING_VALIDATION_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_ACCELERATION_STRUCTURE_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_CLUSTER_ACCELERATION_STRUCTURE_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_ACCELERATION_STRUCTURE_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_CLUSTER_ACCELERATION_STRUCTURE_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_CLUSTER_ACCELERATION_STRUCTURE_CLUSTERS_BOTTOM_LEVEL_INPUT_NV = VkStructureType.CLUSTER_ACCELERATION_STRUCTURE_CLUSTERS_BOTTOM_LEVEL_INPUT_NV;
enum VK_STRUCTURE_TYPE_CLUSTER_ACCELERATION_STRUCTURE_TRIANGLE_CLUSTER_INPUT_NV = VkStructureType.CLUSTER_ACCELERATION_STRUCTURE_TRIANGLE_CLUSTER_INPUT_NV;
enum VK_STRUCTURE_TYPE_CLUSTER_ACCELERATION_STRUCTURE_MOVE_OBJECTS_INPUT_NV = VkStructureType.CLUSTER_ACCELERATION_STRUCTURE_MOVE_OBJECTS_INPUT_NV;
enum VK_STRUCTURE_TYPE_CLUSTER_ACCELERATION_STRUCTURE_INPUT_INFO_NV = VkStructureType.CLUSTER_ACCELERATION_STRUCTURE_INPUT_INFO_NV;
enum VK_STRUCTURE_TYPE_CLUSTER_ACCELERATION_STRUCTURE_COMMANDS_INFO_NV = VkStructureType.CLUSTER_ACCELERATION_STRUCTURE_COMMANDS_INFO_NV;
enum VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CLUSTER_ACCELERATION_STRUCTURE_CREATE_INFO_NV = VkStructureType.RAY_TRACING_PIPELINE_CLUSTER_ACCELERATION_STRUCTURE_CREATE_INFO_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PARTITIONED_ACCELERATION_STRUCTURE_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_PARTITIONED_ACCELERATION_STRUCTURE_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PARTITIONED_ACCELERATION_STRUCTURE_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_PARTITIONED_ACCELERATION_STRUCTURE_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_PARTITIONED_ACCELERATION_STRUCTURE_NV = VkStructureType.WRITE_DESCRIPTOR_SET_PARTITIONED_ACCELERATION_STRUCTURE_NV;
enum VK_STRUCTURE_TYPE_PARTITIONED_ACCELERATION_STRUCTURE_INSTANCES_INPUT_NV = VkStructureType.PARTITIONED_ACCELERATION_STRUCTURE_INSTANCES_INPUT_NV;
enum VK_STRUCTURE_TYPE_BUILD_PARTITIONED_ACCELERATION_STRUCTURE_INFO_NV = VkStructureType.BUILD_PARTITIONED_ACCELERATION_STRUCTURE_INFO_NV;
enum VK_STRUCTURE_TYPE_PARTITIONED_ACCELERATION_STRUCTURE_FLAGS_NV = VkStructureType.PARTITIONED_ACCELERATION_STRUCTURE_FLAGS_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_EXT = VkStructureType.GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_EXT;
enum VK_STRUCTURE_TYPE_INDIRECT_EXECUTION_SET_CREATE_INFO_EXT = VkStructureType.INDIRECT_EXECUTION_SET_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_EXT = VkStructureType.GENERATED_COMMANDS_INFO_EXT;
enum VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_EXT = VkStructureType.INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_EXT = VkStructureType.INDIRECT_COMMANDS_LAYOUT_TOKEN_EXT;
enum VK_STRUCTURE_TYPE_WRITE_INDIRECT_EXECUTION_SET_PIPELINE_EXT = VkStructureType.WRITE_INDIRECT_EXECUTION_SET_PIPELINE_EXT;
enum VK_STRUCTURE_TYPE_WRITE_INDIRECT_EXECUTION_SET_SHADER_EXT = VkStructureType.WRITE_INDIRECT_EXECUTION_SET_SHADER_EXT;
enum VK_STRUCTURE_TYPE_INDIRECT_EXECUTION_SET_PIPELINE_INFO_EXT = VkStructureType.INDIRECT_EXECUTION_SET_PIPELINE_INFO_EXT;
enum VK_STRUCTURE_TYPE_INDIRECT_EXECUTION_SET_SHADER_INFO_EXT = VkStructureType.INDIRECT_EXECUTION_SET_SHADER_INFO_EXT;
enum VK_STRUCTURE_TYPE_INDIRECT_EXECUTION_SET_SHADER_LAYOUT_INFO_EXT = VkStructureType.INDIRECT_EXECUTION_SET_SHADER_LAYOUT_INFO_EXT;
enum VK_STRUCTURE_TYPE_GENERATED_COMMANDS_PIPELINE_INFO_EXT = VkStructureType.GENERATED_COMMANDS_PIPELINE_INFO_EXT;
enum VK_STRUCTURE_TYPE_GENERATED_COMMANDS_SHADER_INFO_EXT = VkStructureType.GENERATED_COMMANDS_SHADER_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_8_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_MAINTENANCE_8_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_MEMORY_BARRIER_ACCESS_FLAGS_3_KHR = VkStructureType.MEMORY_BARRIER_ACCESS_FLAGS_3_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ALIGNMENT_CONTROL_FEATURES_MESA = VkStructureType.PHYSICAL_DEVICE_IMAGE_ALIGNMENT_CONTROL_FEATURES_MESA;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ALIGNMENT_CONTROL_PROPERTIES_MESA = VkStructureType.PHYSICAL_DEVICE_IMAGE_ALIGNMENT_CONTROL_PROPERTIES_MESA;
enum VK_STRUCTURE_TYPE_IMAGE_ALIGNMENT_CONTROL_CREATE_INFO_MESA = VkStructureType.IMAGE_ALIGNMENT_CONTROL_CREATE_INFO_MESA;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FMA_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_SHADER_FMA_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_CONTROL_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_DEPTH_CLAMP_CONTROL_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLAMP_CONTROL_CREATE_INFO_EXT = VkStructureType.PIPELINE_VIEWPORT_DEPTH_CLAMP_CONTROL_CREATE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_9_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_MAINTENANCE_9_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_9_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_MAINTENANCE_9_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_QUEUE_FAMILY_OWNERSHIP_TRANSFER_PROPERTIES_KHR = VkStructureType.QUEUE_FAMILY_OWNERSHIP_TRANSFER_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_MAINTENANCE_2_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_VIDEO_MAINTENANCE_2_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_INLINE_SESSION_PARAMETERS_INFO_KHR = VkStructureType.VIDEO_DECODE_H264_INLINE_SESSION_PARAMETERS_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_INLINE_SESSION_PARAMETERS_INFO_KHR = VkStructureType.VIDEO_DECODE_H265_INLINE_SESSION_PARAMETERS_INFO_KHR;
enum VK_STRUCTURE_TYPE_VIDEO_DECODE_AV1_INLINE_SESSION_PARAMETERS_INFO_KHR = VkStructureType.VIDEO_DECODE_AV1_INLINE_SESSION_PARAMETERS_INFO_KHR;
enum VK_STRUCTURE_TYPE_SURFACE_CREATE_INFO_OHOS = VkStructureType.SURFACE_CREATE_INFO_OHOS;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HDR_VIVID_FEATURES_HUAWEI = VkStructureType.PHYSICAL_DEVICE_HDR_VIVID_FEATURES_HUAWEI;
enum VK_STRUCTURE_TYPE_HDR_VIVID_DYNAMIC_METADATA_HUAWEI = VkStructureType.HDR_VIVID_DYNAMIC_METADATA_HUAWEI;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_2_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_COOPERATIVE_MATRIX_2_FEATURES_NV;
enum VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_FLEXIBLE_DIMENSIONS_PROPERTIES_NV = VkStructureType.COOPERATIVE_MATRIX_FLEXIBLE_DIMENSIONS_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_2_PROPERTIES_NV = VkStructureType.PHYSICAL_DEVICE_COOPERATIVE_MATRIX_2_PROPERTIES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_OPACITY_MICROMAP_FEATURES_ARM = VkStructureType.PHYSICAL_DEVICE_PIPELINE_OPACITY_MICROMAP_FEATURES_ARM;
enum VK_STRUCTURE_TYPE_IMPORT_MEMORY_METAL_HANDLE_INFO_EXT = VkStructureType.IMPORT_MEMORY_METAL_HANDLE_INFO_EXT;
enum VK_STRUCTURE_TYPE_MEMORY_METAL_HANDLE_PROPERTIES_EXT = VkStructureType.MEMORY_METAL_HANDLE_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_MEMORY_GET_METAL_HANDLE_INFO_EXT = VkStructureType.MEMORY_GET_METAL_HANDLE_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_ROBUSTNESS_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_ROBUSTNESS_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FORMAT_PACK_FEATURES_ARM = VkStructureType.PHYSICAL_DEVICE_FORMAT_PACK_FEATURES_ARM;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_LAYERED_FEATURES_VALVE = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_LAYERED_FEATURES_VALVE;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_LAYERED_PROPERTIES_VALVE = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_LAYERED_PROPERTIES_VALVE;
enum VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_DENSITY_MAP_LAYERED_CREATE_INFO_VALVE = VkStructureType.PIPELINE_FRAGMENT_DENSITY_MAP_LAYERED_CREATE_INFO_VALVE;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_KHR = VkStructureType.PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_KHR;
enum VK_STRUCTURE_TYPE_SET_PRESENT_CONFIG_NV = VkStructureType.SET_PRESENT_CONFIG_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_METERING_FEATURES_NV = VkStructureType.PHYSICAL_DEVICE_PRESENT_METERING_FEATURES_NV;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_EXT = VkStructureType.PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_EXT;
enum VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_EXT = VkStructureType.RENDER_PASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_EXT;
enum VK_STRUCTURE_TYPE_RENDERING_END_INFO_EXT = VkStructureType.RENDERING_END_INFO_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_DEVICE_MEMORY_FEATURES_EXT = VkStructureType.PHYSICAL_DEVICE_ZERO_INITIALIZE_DEVICE_MEMORY_FEATURES_EXT;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_MODE_FIFO_LATEST_READY_FEATURES_KHR = VkStructureType.PHYSICAL_DEVICE_PRESENT_MODE_FIFO_LATEST_READY_FEATURES_KHR;
enum VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CACHE_INCREMENTAL_MODE_FEATURES_SEC = VkStructureType.PHYSICAL_DEVICE_PIPELINE_CACHE_INCREMENTAL_MODE_FEATURES_SEC;

// API constants

enum uint VK_ATTACHMENT_UNUSED = ~0U;
enum uint VK_FALSE = 0;
enum float VK_LOD_CLAMP_NONE = 1000.0f;
enum uint VK_QUEUE_FAMILY_IGNORED = ~0U;
enum uint VK_REMAINING_ARRAY_LAYERS = ~0U;
enum uint VK_REMAINING_MIP_LEVELS = ~0U;
enum uint VK_SUBPASS_EXTERNAL = ~0U;
enum uint VK_TRUE = 1;
enum ulong VK_WHOLE_SIZE = ~0UL;
enum uint VK_MAX_MEMORY_TYPES = 32;
enum uint VK_MAX_PHYSICAL_DEVICE_NAME_SIZE = 256;
enum uint VK_UUID_SIZE = 16;
enum uint VK_MAX_EXTENSION_NAME_SIZE = 256;
enum uint VK_MAX_DESCRIPTION_SIZE = 256;
enum uint VK_MAX_MEMORY_HEAPS = 16;

enum VkPipelineCacheHeaderVersion {
    ONE = 1,
    SAFETY_CRITICAL_ONE = 1000298001,
}

enum VK_PIPELINE_CACHE_HEADER_VERSION_ONE = VkPipelineCacheHeaderVersion.ONE;
enum VK_PIPELINE_CACHE_HEADER_VERSION_SAFETY_CRITICAL_ONE = VkPipelineCacheHeaderVersion.SAFETY_CRITICAL_ONE;

// These types are part of the API, though not directly used in API commands or data structures

struct VkBaseInStructure {
    VkStructureType sType;
    VkBaseInStructure* pNext;
}

struct VkBaseOutStructure {
    VkStructureType sType;
    VkBaseOutStructure* pNext;
}

struct VkBufferMemoryBarrier {
    VkStructureType sType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER;
    const(void)* pNext;
    VkFlags srcAccessMask;
    VkFlags dstAccessMask;
    uint srcQueueFamilyIndex;
    uint dstQueueFamilyIndex;
    VkBuffer buffer;
    VkDeviceSize offset;
    VkDeviceSize size;
}

struct VkDispatchIndirectCommand {
    uint x;
    uint y;
    uint z;
}

struct VkDrawIndexedIndirectCommand {
    uint indexCount;
    uint instanceCount;
    uint firstIndex;
    int vertexOffset;
    uint firstInstance;
}

struct VkDrawIndirectCommand {
    uint vertexCount;
    uint instanceCount;
    uint firstVertex;
    uint firstInstance;
}

struct VkImageMemoryBarrier {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER;
    const(void)* pNext;
    VkFlags srcAccessMask;
    VkFlags dstAccessMask;
    VkImageLayout oldLayout;
    VkImageLayout newLayout;
    uint srcQueueFamilyIndex;
    uint dstQueueFamilyIndex;
    VkImage image;
    VkImageSubresourceRange subresourceRange;
}

struct VkMemoryBarrier {
    VkStructureType sType = VK_STRUCTURE_TYPE_MEMORY_BARRIER;
    const(void)* pNext;
    VkFlags srcAccessMask;
    VkFlags dstAccessMask;
}

enum VkObjectType {
    UNKNOWN = 0,
    INSTANCE = 1,
    PHYSICAL_DEVICE = 2,
    DEVICE = 3,
    QUEUE = 4,
    SEMAPHORE = 5,
    COMMAND_BUFFER = 6,
    FENCE = 7,
    DEVICE_MEMORY = 8,
    BUFFER = 9,
    IMAGE = 10,
    EVENT = 11,
    QUERY_POOL = 12,
    BUFFER_VIEW = 13,
    IMAGE_VIEW = 14,
    SHADER_MODULE = 15,
    PIPELINE_CACHE = 16,
    PIPELINE_LAYOUT = 17,
    RENDER_PASS = 18,
    PIPELINE = 19,
    DESCRIPTOR_SET_LAYOUT = 20,
    SAMPLER = 21,
    DESCRIPTOR_POOL = 22,
    DESCRIPTOR_SET = 23,
    FRAMEBUFFER = 24,
    COMMAND_POOL = 25,
    SAMPLER_YCBCR_CONVERSION = 1000156000,
    DESCRIPTOR_UPDATE_TEMPLATE = 1000085000,
    PRIVATE_DATA_SLOT = 1000295000,
    SURFACE_KHR = 1000000000,
    SWAPCHAIN_KHR = 1000001000,
    DISPLAY_KHR = 1000002000,
    DISPLAY_MODE_KHR = 1000002001,
    DEBUG_REPORT_CALLBACK_EXT = 1000011000,
    VIDEO_SESSION_KHR = 1000023000,
    VIDEO_SESSION_PARAMETERS_KHR = 1000023001,
    CU_MODULE_NVX = 1000029000,
    CU_FUNCTION_NVX = 1000029001,
    DESCRIPTOR_UPDATE_TEMPLATE_KHR = DESCRIPTOR_UPDATE_TEMPLATE,
    DEBUG_UTILS_MESSENGER_EXT = 1000128000,
    ACCELERATION_STRUCTURE_KHR = 1000150000,
    SAMPLER_YCBCR_CONVERSION_KHR = SAMPLER_YCBCR_CONVERSION,
    VALIDATION_CACHE_EXT = 1000160000,
    ACCELERATION_STRUCTURE_NV = 1000165000,
    PERFORMANCE_CONFIGURATION_INTEL = 1000210000,
    DEFERRED_OPERATION_KHR = 1000268000,
    INDIRECT_COMMANDS_LAYOUT_NV = 1000277000,
    PRIVATE_DATA_SLOT_EXT = PRIVATE_DATA_SLOT,
    CUDA_MODULE_NV = 1000307000,
    CUDA_FUNCTION_NV = 1000307001,
    BUFFER_COLLECTION_FUCHSIA = 1000366000,
    MICROMAP_EXT = 1000396000,
    TENSOR_ARM = 1000460000,
    TENSOR_VIEW_ARM = 1000460001,
    OPTICAL_FLOW_SESSION_NV = 1000464000,
    SHADER_EXT = 1000482000,
    PIPELINE_BINARY_KHR = 1000483000,
    SEMAPHORE_SCI_SYNC_POOL_NV = 1000489000,
    DATA_GRAPH_PIPELINE_SESSION_ARM = 1000507000,
    EXTERNAL_COMPUTE_QUEUE_NV = 1000556000,
    INDIRECT_COMMANDS_LAYOUT_EXT = 1000572000,
    INDIRECT_EXECUTION_SET_EXT = 1000572001,
}

enum VK_OBJECT_TYPE_UNKNOWN = VkObjectType.UNKNOWN;
enum VK_OBJECT_TYPE_INSTANCE = VkObjectType.INSTANCE;
enum VK_OBJECT_TYPE_PHYSICAL_DEVICE = VkObjectType.PHYSICAL_DEVICE;
enum VK_OBJECT_TYPE_DEVICE = VkObjectType.DEVICE;
enum VK_OBJECT_TYPE_QUEUE = VkObjectType.QUEUE;
enum VK_OBJECT_TYPE_SEMAPHORE = VkObjectType.SEMAPHORE;
enum VK_OBJECT_TYPE_COMMAND_BUFFER = VkObjectType.COMMAND_BUFFER;
enum VK_OBJECT_TYPE_FENCE = VkObjectType.FENCE;
enum VK_OBJECT_TYPE_DEVICE_MEMORY = VkObjectType.DEVICE_MEMORY;
enum VK_OBJECT_TYPE_BUFFER = VkObjectType.BUFFER;
enum VK_OBJECT_TYPE_IMAGE = VkObjectType.IMAGE;
enum VK_OBJECT_TYPE_EVENT = VkObjectType.EVENT;
enum VK_OBJECT_TYPE_QUERY_POOL = VkObjectType.QUERY_POOL;
enum VK_OBJECT_TYPE_BUFFER_VIEW = VkObjectType.BUFFER_VIEW;
enum VK_OBJECT_TYPE_IMAGE_VIEW = VkObjectType.IMAGE_VIEW;
enum VK_OBJECT_TYPE_SHADER_MODULE = VkObjectType.SHADER_MODULE;
enum VK_OBJECT_TYPE_PIPELINE_CACHE = VkObjectType.PIPELINE_CACHE;
enum VK_OBJECT_TYPE_PIPELINE_LAYOUT = VkObjectType.PIPELINE_LAYOUT;
enum VK_OBJECT_TYPE_RENDER_PASS = VkObjectType.RENDER_PASS;
enum VK_OBJECT_TYPE_PIPELINE = VkObjectType.PIPELINE;
enum VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT = VkObjectType.DESCRIPTOR_SET_LAYOUT;
enum VK_OBJECT_TYPE_SAMPLER = VkObjectType.SAMPLER;
enum VK_OBJECT_TYPE_DESCRIPTOR_POOL = VkObjectType.DESCRIPTOR_POOL;
enum VK_OBJECT_TYPE_DESCRIPTOR_SET = VkObjectType.DESCRIPTOR_SET;
enum VK_OBJECT_TYPE_FRAMEBUFFER = VkObjectType.FRAMEBUFFER;
enum VK_OBJECT_TYPE_COMMAND_POOL = VkObjectType.COMMAND_POOL;
enum VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION = VkObjectType.SAMPLER_YCBCR_CONVERSION;
enum VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE = VkObjectType.DESCRIPTOR_UPDATE_TEMPLATE;
enum VK_OBJECT_TYPE_PRIVATE_DATA_SLOT = VkObjectType.PRIVATE_DATA_SLOT;
enum VK_OBJECT_TYPE_SURFACE_KHR = VkObjectType.SURFACE_KHR;
enum VK_OBJECT_TYPE_SWAPCHAIN_KHR = VkObjectType.SWAPCHAIN_KHR;
enum VK_OBJECT_TYPE_DISPLAY_KHR = VkObjectType.DISPLAY_KHR;
enum VK_OBJECT_TYPE_DISPLAY_MODE_KHR = VkObjectType.DISPLAY_MODE_KHR;
enum VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT = VkObjectType.DEBUG_REPORT_CALLBACK_EXT;
enum VK_OBJECT_TYPE_VIDEO_SESSION_KHR = VkObjectType.VIDEO_SESSION_KHR;
enum VK_OBJECT_TYPE_VIDEO_SESSION_PARAMETERS_KHR = VkObjectType.VIDEO_SESSION_PARAMETERS_KHR;
enum VK_OBJECT_TYPE_CU_MODULE_NVX = VkObjectType.CU_MODULE_NVX;
enum VK_OBJECT_TYPE_CU_FUNCTION_NVX = VkObjectType.CU_FUNCTION_NVX;
enum VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR = VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE;
enum VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT = VkObjectType.DEBUG_UTILS_MESSENGER_EXT;
enum VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR = VkObjectType.ACCELERATION_STRUCTURE_KHR;
enum VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR = VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION;
enum VK_OBJECT_TYPE_VALIDATION_CACHE_EXT = VkObjectType.VALIDATION_CACHE_EXT;
enum VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV = VkObjectType.ACCELERATION_STRUCTURE_NV;
enum VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL = VkObjectType.PERFORMANCE_CONFIGURATION_INTEL;
enum VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR = VkObjectType.DEFERRED_OPERATION_KHR;
enum VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV = VkObjectType.INDIRECT_COMMANDS_LAYOUT_NV;
enum VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT = VK_OBJECT_TYPE_PRIVATE_DATA_SLOT;
enum VK_OBJECT_TYPE_CUDA_MODULE_NV = VkObjectType.CUDA_MODULE_NV;
enum VK_OBJECT_TYPE_CUDA_FUNCTION_NV = VkObjectType.CUDA_FUNCTION_NV;
enum VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA = VkObjectType.BUFFER_COLLECTION_FUCHSIA;
enum VK_OBJECT_TYPE_MICROMAP_EXT = VkObjectType.MICROMAP_EXT;
enum VK_OBJECT_TYPE_TENSOR_ARM = VkObjectType.TENSOR_ARM;
enum VK_OBJECT_TYPE_TENSOR_VIEW_ARM = VkObjectType.TENSOR_VIEW_ARM;
enum VK_OBJECT_TYPE_OPTICAL_FLOW_SESSION_NV = VkObjectType.OPTICAL_FLOW_SESSION_NV;
enum VK_OBJECT_TYPE_SHADER_EXT = VkObjectType.SHADER_EXT;
enum VK_OBJECT_TYPE_PIPELINE_BINARY_KHR = VkObjectType.PIPELINE_BINARY_KHR;
enum VK_OBJECT_TYPE_SEMAPHORE_SCI_SYNC_POOL_NV = VkObjectType.SEMAPHORE_SCI_SYNC_POOL_NV;
enum VK_OBJECT_TYPE_DATA_GRAPH_PIPELINE_SESSION_ARM = VkObjectType.DATA_GRAPH_PIPELINE_SESSION_ARM;
enum VK_OBJECT_TYPE_EXTERNAL_COMPUTE_QUEUE_NV = VkObjectType.EXTERNAL_COMPUTE_QUEUE_NV;
enum VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_EXT = VkObjectType.INDIRECT_COMMANDS_LAYOUT_EXT;
enum VK_OBJECT_TYPE_INDIRECT_EXECUTION_SET_EXT = VkObjectType.INDIRECT_EXECUTION_SET_EXT;

struct VkPipelineCacheHeaderVersionOne {
    uint headerSize;
    VkPipelineCacheHeaderVersion headerVersion;
    uint vendorID;
    uint deviceID;
    ubyte[VK_UUID_SIZE] pipelineCacheUUID;
}

enum VkVendorId {
    KHRONOS = 0x10000,
    VIV = 0x10001,
    VSI = 0x10002,
    KAZAN = 0x10003,
    CODEPLAY = 0x10004,
    MESA = 0x10005,
    POCL = 0x10006,
    MOBILEYE = 0x10007,
}

enum VK_VENDOR_ID_KHRONOS = VkVendorId.KHRONOS;
enum VK_VENDOR_ID_VIV = VkVendorId.VIV;
enum VK_VENDOR_ID_VSI = VkVendorId.VSI;
enum VK_VENDOR_ID_KAZAN = VkVendorId.KAZAN;
enum VK_VENDOR_ID_CODEPLAY = VkVendorId.CODEPLAY;
enum VK_VENDOR_ID_MESA = VkVendorId.MESA;
enum VK_VENDOR_ID_POCL = VkVendorId.POCL;
enum VK_VENDOR_ID_MOBILEYE = VkVendorId.MOBILEYE;

// API version macros

enum VK_API_VERSION_1_0 = VK_MAKE_API_VERSION(0, 1, 0, 0);
enum VK_HEADER_VERSION = 19;
enum VK_HEADER_VERSION_COMPLETE = VK_MAKE_API_VERSION(VKSC_API_VARIANT, 1, 0, VK_HEADER_VERSION);

// Device initialization

alias PFN_vkAllocationFunction = void* function(
    void* pUserData,
    size_t size,
    size_t alignment,
    VkSystemAllocationScope allocationScope,
);

alias PFN_vkFreeFunction = void function(
    void* pUserData,
    void* pMemory,
);

alias PFN_vkInternalAllocationNotification = void function(
    void* pUserData,
    size_t size,
    VkInternalAllocationType allocationType,
    VkSystemAllocationScope allocationScope,
);

alias PFN_vkInternalFreeNotification = void function(
    void* pUserData,
    size_t size,
    VkInternalAllocationType allocationType,
    VkSystemAllocationScope allocationScope,
);

alias PFN_vkReallocationFunction = void* function(
    void* pUserData,
    void* pOriginal,
    size_t size,
    size_t alignment,
    VkSystemAllocationScope allocationScope,
);

alias PFN_vkVoidFunction = void function();

struct VkAllocationCallbacks {
    void* pUserData;
    PFN_vkAllocationFunction pfnAllocation;
    PFN_vkReallocationFunction pfnReallocation;
    PFN_vkFreeFunction pfnFree;
    PFN_vkInternalAllocationNotification pfnInternalAllocation;
    PFN_vkInternalFreeNotification pfnInternalFree;
}

struct VkApplicationInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    const(void)* pNext;
    const(char)* pApplicationName;
    uint applicationVersion;
    const(char)* pEngineName;
    uint engineVersion;
    uint apiVersion;
}

enum VkFormat {
    UNDEFINED = 0,
    R4G4_UNORM_PACK8 = 1,
    R4G4B4A4_UNORM_PACK16 = 2,
    B4G4R4A4_UNORM_PACK16 = 3,
    R5G6B5_UNORM_PACK16 = 4,
    B5G6R5_UNORM_PACK16 = 5,
    R5G5B5A1_UNORM_PACK16 = 6,
    B5G5R5A1_UNORM_PACK16 = 7,
    A1R5G5B5_UNORM_PACK16 = 8,
    R8_UNORM = 9,
    R8_SNORM = 10,
    R8_USCALED = 11,
    R8_SSCALED = 12,
    R8_UINT = 13,
    R8_SINT = 14,
    R8_SRGB = 15,
    R8G8_UNORM = 16,
    R8G8_SNORM = 17,
    R8G8_USCALED = 18,
    R8G8_SSCALED = 19,
    R8G8_UINT = 20,
    R8G8_SINT = 21,
    R8G8_SRGB = 22,
    R8G8B8_UNORM = 23,
    R8G8B8_SNORM = 24,
    R8G8B8_USCALED = 25,
    R8G8B8_SSCALED = 26,
    R8G8B8_UINT = 27,
    R8G8B8_SINT = 28,
    R8G8B8_SRGB = 29,
    B8G8R8_UNORM = 30,
    B8G8R8_SNORM = 31,
    B8G8R8_USCALED = 32,
    B8G8R8_SSCALED = 33,
    B8G8R8_UINT = 34,
    B8G8R8_SINT = 35,
    B8G8R8_SRGB = 36,
    R8G8B8A8_UNORM = 37,
    R8G8B8A8_SNORM = 38,
    R8G8B8A8_USCALED = 39,
    R8G8B8A8_SSCALED = 40,
    R8G8B8A8_UINT = 41,
    R8G8B8A8_SINT = 42,
    R8G8B8A8_SRGB = 43,
    B8G8R8A8_UNORM = 44,
    B8G8R8A8_SNORM = 45,
    B8G8R8A8_USCALED = 46,
    B8G8R8A8_SSCALED = 47,
    B8G8R8A8_UINT = 48,
    B8G8R8A8_SINT = 49,
    B8G8R8A8_SRGB = 50,
    A8B8G8R8_UNORM_PACK32 = 51,
    A8B8G8R8_SNORM_PACK32 = 52,
    A8B8G8R8_USCALED_PACK32 = 53,
    A8B8G8R8_SSCALED_PACK32 = 54,
    A8B8G8R8_UINT_PACK32 = 55,
    A8B8G8R8_SINT_PACK32 = 56,
    A8B8G8R8_SRGB_PACK32 = 57,
    A2R10G10B10_UNORM_PACK32 = 58,
    A2R10G10B10_SNORM_PACK32 = 59,
    A2R10G10B10_USCALED_PACK32 = 60,
    A2R10G10B10_SSCALED_PACK32 = 61,
    A2R10G10B10_UINT_PACK32 = 62,
    A2R10G10B10_SINT_PACK32 = 63,
    A2B10G10R10_UNORM_PACK32 = 64,
    A2B10G10R10_SNORM_PACK32 = 65,
    A2B10G10R10_USCALED_PACK32 = 66,
    A2B10G10R10_SSCALED_PACK32 = 67,
    A2B10G10R10_UINT_PACK32 = 68,
    A2B10G10R10_SINT_PACK32 = 69,
    R16_UNORM = 70,
    R16_SNORM = 71,
    R16_USCALED = 72,
    R16_SSCALED = 73,
    R16_UINT = 74,
    R16_SINT = 75,
    R16_SFLOAT = 76,
    R16G16_UNORM = 77,
    R16G16_SNORM = 78,
    R16G16_USCALED = 79,
    R16G16_SSCALED = 80,
    R16G16_UINT = 81,
    R16G16_SINT = 82,
    R16G16_SFLOAT = 83,
    R16G16B16_UNORM = 84,
    R16G16B16_SNORM = 85,
    R16G16B16_USCALED = 86,
    R16G16B16_SSCALED = 87,
    R16G16B16_UINT = 88,
    R16G16B16_SINT = 89,
    R16G16B16_SFLOAT = 90,
    R16G16B16A16_UNORM = 91,
    R16G16B16A16_SNORM = 92,
    R16G16B16A16_USCALED = 93,
    R16G16B16A16_SSCALED = 94,
    R16G16B16A16_UINT = 95,
    R16G16B16A16_SINT = 96,
    R16G16B16A16_SFLOAT = 97,
    R32_UINT = 98,
    R32_SINT = 99,
    R32_SFLOAT = 100,
    R32G32_UINT = 101,
    R32G32_SINT = 102,
    R32G32_SFLOAT = 103,
    R32G32B32_UINT = 104,
    R32G32B32_SINT = 105,
    R32G32B32_SFLOAT = 106,
    R32G32B32A32_UINT = 107,
    R32G32B32A32_SINT = 108,
    R32G32B32A32_SFLOAT = 109,
    R64_UINT = 110,
    R64_SINT = 111,
    R64_SFLOAT = 112,
    R64G64_UINT = 113,
    R64G64_SINT = 114,
    R64G64_SFLOAT = 115,
    R64G64B64_UINT = 116,
    R64G64B64_SINT = 117,
    R64G64B64_SFLOAT = 118,
    R64G64B64A64_UINT = 119,
    R64G64B64A64_SINT = 120,
    R64G64B64A64_SFLOAT = 121,
    B10G11R11_UFLOAT_PACK32 = 122,
    E5B9G9R9_UFLOAT_PACK32 = 123,
    D16_UNORM = 124,
    X8_D24_UNORM_PACK32 = 125,
    D32_SFLOAT = 126,
    S8_UINT = 127,
    D16_UNORM_S8_UINT = 128,
    D24_UNORM_S8_UINT = 129,
    D32_SFLOAT_S8_UINT = 130,
    BC1_RGB_UNORM_BLOCK = 131,
    BC1_RGB_SRGB_BLOCK = 132,
    BC1_RGBA_UNORM_BLOCK = 133,
    BC1_RGBA_SRGB_BLOCK = 134,
    BC2_UNORM_BLOCK = 135,
    BC2_SRGB_BLOCK = 136,
    BC3_UNORM_BLOCK = 137,
    BC3_SRGB_BLOCK = 138,
    BC4_UNORM_BLOCK = 139,
    BC4_SNORM_BLOCK = 140,
    BC5_UNORM_BLOCK = 141,
    BC5_SNORM_BLOCK = 142,
    BC6H_UFLOAT_BLOCK = 143,
    BC6H_SFLOAT_BLOCK = 144,
    BC7_UNORM_BLOCK = 145,
    BC7_SRGB_BLOCK = 146,
    ETC2_R8G8B8_UNORM_BLOCK = 147,
    ETC2_R8G8B8_SRGB_BLOCK = 148,
    ETC2_R8G8B8A1_UNORM_BLOCK = 149,
    ETC2_R8G8B8A1_SRGB_BLOCK = 150,
    ETC2_R8G8B8A8_UNORM_BLOCK = 151,
    ETC2_R8G8B8A8_SRGB_BLOCK = 152,
    EAC_R11_UNORM_BLOCK = 153,
    EAC_R11_SNORM_BLOCK = 154,
    EAC_R11G11_UNORM_BLOCK = 155,
    EAC_R11G11_SNORM_BLOCK = 156,
    ASTC_4x4_UNORM_BLOCK = 157,
    ASTC_4x4_SRGB_BLOCK = 158,
    ASTC_5x4_UNORM_BLOCK = 159,
    ASTC_5x4_SRGB_BLOCK = 160,
    ASTC_5x5_UNORM_BLOCK = 161,
    ASTC_5x5_SRGB_BLOCK = 162,
    ASTC_6x5_UNORM_BLOCK = 163,
    ASTC_6x5_SRGB_BLOCK = 164,
    ASTC_6x6_UNORM_BLOCK = 165,
    ASTC_6x6_SRGB_BLOCK = 166,
    ASTC_8x5_UNORM_BLOCK = 167,
    ASTC_8x5_SRGB_BLOCK = 168,
    ASTC_8x6_UNORM_BLOCK = 169,
    ASTC_8x6_SRGB_BLOCK = 170,
    ASTC_8x8_UNORM_BLOCK = 171,
    ASTC_8x8_SRGB_BLOCK = 172,
    ASTC_10x5_UNORM_BLOCK = 173,
    ASTC_10x5_SRGB_BLOCK = 174,
    ASTC_10x6_UNORM_BLOCK = 175,
    ASTC_10x6_SRGB_BLOCK = 176,
    ASTC_10x8_UNORM_BLOCK = 177,
    ASTC_10x8_SRGB_BLOCK = 178,
    ASTC_10x10_UNORM_BLOCK = 179,
    ASTC_10x10_SRGB_BLOCK = 180,
    ASTC_12x10_UNORM_BLOCK = 181,
    ASTC_12x10_SRGB_BLOCK = 182,
    ASTC_12x12_UNORM_BLOCK = 183,
    ASTC_12x12_SRGB_BLOCK = 184,
    G8B8G8R8_422_UNORM = 1000156000,
    B8G8R8G8_422_UNORM = 1000156001,
    G8_B8_R8_3PLANE_420_UNORM = 1000156002,
    G8_B8R8_2PLANE_420_UNORM = 1000156003,
    G8_B8_R8_3PLANE_422_UNORM = 1000156004,
    G8_B8R8_2PLANE_422_UNORM = 1000156005,
    G8_B8_R8_3PLANE_444_UNORM = 1000156006,
    R10X6_UNORM_PACK16 = 1000156007,
    R10X6G10X6_UNORM_2PACK16 = 1000156008,
    R10X6G10X6B10X6A10X6_UNORM_4PACK16 = 1000156009,
    G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = 1000156010,
    B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = 1000156011,
    G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 = 1000156012,
    G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 = 1000156013,
    G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 = 1000156014,
    G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 = 1000156015,
    G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 = 1000156016,
    R12X4_UNORM_PACK16 = 1000156017,
    R12X4G12X4_UNORM_2PACK16 = 1000156018,
    R12X4G12X4B12X4A12X4_UNORM_4PACK16 = 1000156019,
    G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = 1000156020,
    B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = 1000156021,
    G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 = 1000156022,
    G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 = 1000156023,
    G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 = 1000156024,
    G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 = 1000156025,
    G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 = 1000156026,
    G16B16G16R16_422_UNORM = 1000156027,
    B16G16R16G16_422_UNORM = 1000156028,
    G16_B16_R16_3PLANE_420_UNORM = 1000156029,
    G16_B16R16_2PLANE_420_UNORM = 1000156030,
    G16_B16_R16_3PLANE_422_UNORM = 1000156031,
    G16_B16R16_2PLANE_422_UNORM = 1000156032,
    G16_B16_R16_3PLANE_444_UNORM = 1000156033,
    G8_B8R8_2PLANE_444_UNORM = 1000330000,
    G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16 = 1000330001,
    G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16 = 1000330002,
    G16_B16R16_2PLANE_444_UNORM = 1000330003,
    A4R4G4B4_UNORM_PACK16 = 1000340000,
    A4B4G4R4_UNORM_PACK16 = 1000340001,
    ASTC_4x4_SFLOAT_BLOCK = 1000066000,
    ASTC_5x4_SFLOAT_BLOCK = 1000066001,
    ASTC_5x5_SFLOAT_BLOCK = 1000066002,
    ASTC_6x5_SFLOAT_BLOCK = 1000066003,
    ASTC_6x6_SFLOAT_BLOCK = 1000066004,
    ASTC_8x5_SFLOAT_BLOCK = 1000066005,
    ASTC_8x6_SFLOAT_BLOCK = 1000066006,
    ASTC_8x8_SFLOAT_BLOCK = 1000066007,
    ASTC_10x5_SFLOAT_BLOCK = 1000066008,
    ASTC_10x6_SFLOAT_BLOCK = 1000066009,
    ASTC_10x8_SFLOAT_BLOCK = 1000066010,
    ASTC_10x10_SFLOAT_BLOCK = 1000066011,
    ASTC_12x10_SFLOAT_BLOCK = 1000066012,
    ASTC_12x12_SFLOAT_BLOCK = 1000066013,
    A1B5G5R5_UNORM_PACK16 = 1000470000,
    A8_UNORM = 1000470001,
    PVRTC1_2BPP_UNORM_BLOCK_IMG = 1000054000,
    PVRTC1_4BPP_UNORM_BLOCK_IMG = 1000054001,
    PVRTC2_2BPP_UNORM_BLOCK_IMG = 1000054002,
    PVRTC2_4BPP_UNORM_BLOCK_IMG = 1000054003,
    PVRTC1_2BPP_SRGB_BLOCK_IMG = 1000054004,
    PVRTC1_4BPP_SRGB_BLOCK_IMG = 1000054005,
    PVRTC2_2BPP_SRGB_BLOCK_IMG = 1000054006,
    PVRTC2_4BPP_SRGB_BLOCK_IMG = 1000054007,
    ASTC_4x4_SFLOAT_BLOCK_EXT = ASTC_4x4_SFLOAT_BLOCK,
    ASTC_5x4_SFLOAT_BLOCK_EXT = ASTC_5x4_SFLOAT_BLOCK,
    ASTC_5x5_SFLOAT_BLOCK_EXT = ASTC_5x5_SFLOAT_BLOCK,
    ASTC_6x5_SFLOAT_BLOCK_EXT = ASTC_6x5_SFLOAT_BLOCK,
    ASTC_6x6_SFLOAT_BLOCK_EXT = ASTC_6x6_SFLOAT_BLOCK,
    ASTC_8x5_SFLOAT_BLOCK_EXT = ASTC_8x5_SFLOAT_BLOCK,
    ASTC_8x6_SFLOAT_BLOCK_EXT = ASTC_8x6_SFLOAT_BLOCK,
    ASTC_8x8_SFLOAT_BLOCK_EXT = ASTC_8x8_SFLOAT_BLOCK,
    ASTC_10x5_SFLOAT_BLOCK_EXT = ASTC_10x5_SFLOAT_BLOCK,
    ASTC_10x6_SFLOAT_BLOCK_EXT = ASTC_10x6_SFLOAT_BLOCK,
    ASTC_10x8_SFLOAT_BLOCK_EXT = ASTC_10x8_SFLOAT_BLOCK,
    ASTC_10x10_SFLOAT_BLOCK_EXT = ASTC_10x10_SFLOAT_BLOCK,
    ASTC_12x10_SFLOAT_BLOCK_EXT = ASTC_12x10_SFLOAT_BLOCK,
    ASTC_12x12_SFLOAT_BLOCK_EXT = ASTC_12x12_SFLOAT_BLOCK,
    G8B8G8R8_422_UNORM_KHR = G8B8G8R8_422_UNORM,
    B8G8R8G8_422_UNORM_KHR = B8G8R8G8_422_UNORM,
    G8_B8_R8_3PLANE_420_UNORM_KHR = G8_B8_R8_3PLANE_420_UNORM,
    G8_B8R8_2PLANE_420_UNORM_KHR = G8_B8R8_2PLANE_420_UNORM,
    G8_B8_R8_3PLANE_422_UNORM_KHR = G8_B8_R8_3PLANE_422_UNORM,
    G8_B8R8_2PLANE_422_UNORM_KHR = G8_B8R8_2PLANE_422_UNORM,
    G8_B8_R8_3PLANE_444_UNORM_KHR = G8_B8_R8_3PLANE_444_UNORM,
    R10X6_UNORM_PACK16_KHR = R10X6_UNORM_PACK16,
    R10X6G10X6_UNORM_2PACK16_KHR = R10X6G10X6_UNORM_2PACK16,
    R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR = R10X6G10X6B10X6A10X6_UNORM_4PACK16,
    G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR = G10X6B10X6G10X6R10X6_422_UNORM_4PACK16,
    B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR = B10X6G10X6R10X6G10X6_422_UNORM_4PACK16,
    G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR = G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16,
    G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR = G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16,
    G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR = G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16,
    G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR = G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16,
    G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR = G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16,
    R12X4_UNORM_PACK16_KHR = R12X4_UNORM_PACK16,
    R12X4G12X4_UNORM_2PACK16_KHR = R12X4G12X4_UNORM_2PACK16,
    R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR = R12X4G12X4B12X4A12X4_UNORM_4PACK16,
    G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR = G12X4B12X4G12X4R12X4_422_UNORM_4PACK16,
    B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR = B12X4G12X4R12X4G12X4_422_UNORM_4PACK16,
    G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR = G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16,
    G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR = G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16,
    G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR = G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16,
    G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR = G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16,
    G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR = G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16,
    G16B16G16R16_422_UNORM_KHR = G16B16G16R16_422_UNORM,
    B16G16R16G16_422_UNORM_KHR = B16G16R16G16_422_UNORM,
    G16_B16_R16_3PLANE_420_UNORM_KHR = G16_B16_R16_3PLANE_420_UNORM,
    G16_B16R16_2PLANE_420_UNORM_KHR = G16_B16R16_2PLANE_420_UNORM,
    G16_B16_R16_3PLANE_422_UNORM_KHR = G16_B16_R16_3PLANE_422_UNORM,
    G16_B16R16_2PLANE_422_UNORM_KHR = G16_B16R16_2PLANE_422_UNORM,
    G16_B16_R16_3PLANE_444_UNORM_KHR = G16_B16_R16_3PLANE_444_UNORM,
    ASTC_3x3x3_UNORM_BLOCK_EXT = 1000288000,
    ASTC_3x3x3_SRGB_BLOCK_EXT = 1000288001,
    ASTC_3x3x3_SFLOAT_BLOCK_EXT = 1000288002,
    ASTC_4x3x3_UNORM_BLOCK_EXT = 1000288003,
    ASTC_4x3x3_SRGB_BLOCK_EXT = 1000288004,
    ASTC_4x3x3_SFLOAT_BLOCK_EXT = 1000288005,
    ASTC_4x4x3_UNORM_BLOCK_EXT = 1000288006,
    ASTC_4x4x3_SRGB_BLOCK_EXT = 1000288007,
    ASTC_4x4x3_SFLOAT_BLOCK_EXT = 1000288008,
    ASTC_4x4x4_UNORM_BLOCK_EXT = 1000288009,
    ASTC_4x4x4_SRGB_BLOCK_EXT = 1000288010,
    ASTC_4x4x4_SFLOAT_BLOCK_EXT = 1000288011,
    ASTC_5x4x4_UNORM_BLOCK_EXT = 1000288012,
    ASTC_5x4x4_SRGB_BLOCK_EXT = 1000288013,
    ASTC_5x4x4_SFLOAT_BLOCK_EXT = 1000288014,
    ASTC_5x5x4_UNORM_BLOCK_EXT = 1000288015,
    ASTC_5x5x4_SRGB_BLOCK_EXT = 1000288016,
    ASTC_5x5x4_SFLOAT_BLOCK_EXT = 1000288017,
    ASTC_5x5x5_UNORM_BLOCK_EXT = 1000288018,
    ASTC_5x5x5_SRGB_BLOCK_EXT = 1000288019,
    ASTC_5x5x5_SFLOAT_BLOCK_EXT = 1000288020,
    ASTC_6x5x5_UNORM_BLOCK_EXT = 1000288021,
    ASTC_6x5x5_SRGB_BLOCK_EXT = 1000288022,
    ASTC_6x5x5_SFLOAT_BLOCK_EXT = 1000288023,
    ASTC_6x6x5_UNORM_BLOCK_EXT = 1000288024,
    ASTC_6x6x5_SRGB_BLOCK_EXT = 1000288025,
    ASTC_6x6x5_SFLOAT_BLOCK_EXT = 1000288026,
    ASTC_6x6x6_UNORM_BLOCK_EXT = 1000288027,
    ASTC_6x6x6_SRGB_BLOCK_EXT = 1000288028,
    ASTC_6x6x6_SFLOAT_BLOCK_EXT = 1000288029,
    G8_B8R8_2PLANE_444_UNORM_EXT = G8_B8R8_2PLANE_444_UNORM,
    G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT = G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16,
    G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT = G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16,
    G16_B16R16_2PLANE_444_UNORM_EXT = G16_B16R16_2PLANE_444_UNORM,
    A4R4G4B4_UNORM_PACK16_EXT = A4R4G4B4_UNORM_PACK16,
    A4B4G4R4_UNORM_PACK16_EXT = A4B4G4R4_UNORM_PACK16,
    R8_BOOL_ARM = 1000460000,
    R16G16_SFIXED5_NV = 1000464000,
    R16G16_S10_5_NV = R16G16_SFIXED5_NV,
    A1B5G5R5_UNORM_PACK16_KHR = A1B5G5R5_UNORM_PACK16,
    A8_UNORM_KHR = A8_UNORM,
    R10X6_UINT_PACK16_ARM = 1000609000,
    R10X6G10X6_UINT_2PACK16_ARM = 1000609001,
    R10X6G10X6B10X6A10X6_UINT_4PACK16_ARM = 1000609002,
    R12X4_UINT_PACK16_ARM = 1000609003,
    R12X4G12X4_UINT_2PACK16_ARM = 1000609004,
    R12X4G12X4B12X4A12X4_UINT_4PACK16_ARM = 1000609005,
    R14X2_UINT_PACK16_ARM = 1000609006,
    R14X2G14X2_UINT_2PACK16_ARM = 1000609007,
    R14X2G14X2B14X2A14X2_UINT_4PACK16_ARM = 1000609008,
    R14X2_UNORM_PACK16_ARM = 1000609009,
    R14X2G14X2_UNORM_2PACK16_ARM = 1000609010,
    R14X2G14X2B14X2A14X2_UNORM_4PACK16_ARM = 1000609011,
    G14X2_B14X2R14X2_2PLANE_420_UNORM_3PACK16_ARM = 1000609012,
    G14X2_B14X2R14X2_2PLANE_422_UNORM_3PACK16_ARM = 1000609013,
}

enum VK_FORMAT_UNDEFINED = VkFormat.UNDEFINED;
enum VK_FORMAT_R4G4_UNORM_PACK8 = VkFormat.R4G4_UNORM_PACK8;
enum VK_FORMAT_R4G4B4A4_UNORM_PACK16 = VkFormat.R4G4B4A4_UNORM_PACK16;
enum VK_FORMAT_B4G4R4A4_UNORM_PACK16 = VkFormat.B4G4R4A4_UNORM_PACK16;
enum VK_FORMAT_R5G6B5_UNORM_PACK16 = VkFormat.R5G6B5_UNORM_PACK16;
enum VK_FORMAT_B5G6R5_UNORM_PACK16 = VkFormat.B5G6R5_UNORM_PACK16;
enum VK_FORMAT_R5G5B5A1_UNORM_PACK16 = VkFormat.R5G5B5A1_UNORM_PACK16;
enum VK_FORMAT_B5G5R5A1_UNORM_PACK16 = VkFormat.B5G5R5A1_UNORM_PACK16;
enum VK_FORMAT_A1R5G5B5_UNORM_PACK16 = VkFormat.A1R5G5B5_UNORM_PACK16;
enum VK_FORMAT_R8_UNORM = VkFormat.R8_UNORM;
enum VK_FORMAT_R8_SNORM = VkFormat.R8_SNORM;
enum VK_FORMAT_R8_USCALED = VkFormat.R8_USCALED;
enum VK_FORMAT_R8_SSCALED = VkFormat.R8_SSCALED;
enum VK_FORMAT_R8_UINT = VkFormat.R8_UINT;
enum VK_FORMAT_R8_SINT = VkFormat.R8_SINT;
enum VK_FORMAT_R8_SRGB = VkFormat.R8_SRGB;
enum VK_FORMAT_R8G8_UNORM = VkFormat.R8G8_UNORM;
enum VK_FORMAT_R8G8_SNORM = VkFormat.R8G8_SNORM;
enum VK_FORMAT_R8G8_USCALED = VkFormat.R8G8_USCALED;
enum VK_FORMAT_R8G8_SSCALED = VkFormat.R8G8_SSCALED;
enum VK_FORMAT_R8G8_UINT = VkFormat.R8G8_UINT;
enum VK_FORMAT_R8G8_SINT = VkFormat.R8G8_SINT;
enum VK_FORMAT_R8G8_SRGB = VkFormat.R8G8_SRGB;
enum VK_FORMAT_R8G8B8_UNORM = VkFormat.R8G8B8_UNORM;
enum VK_FORMAT_R8G8B8_SNORM = VkFormat.R8G8B8_SNORM;
enum VK_FORMAT_R8G8B8_USCALED = VkFormat.R8G8B8_USCALED;
enum VK_FORMAT_R8G8B8_SSCALED = VkFormat.R8G8B8_SSCALED;
enum VK_FORMAT_R8G8B8_UINT = VkFormat.R8G8B8_UINT;
enum VK_FORMAT_R8G8B8_SINT = VkFormat.R8G8B8_SINT;
enum VK_FORMAT_R8G8B8_SRGB = VkFormat.R8G8B8_SRGB;
enum VK_FORMAT_B8G8R8_UNORM = VkFormat.B8G8R8_UNORM;
enum VK_FORMAT_B8G8R8_SNORM = VkFormat.B8G8R8_SNORM;
enum VK_FORMAT_B8G8R8_USCALED = VkFormat.B8G8R8_USCALED;
enum VK_FORMAT_B8G8R8_SSCALED = VkFormat.B8G8R8_SSCALED;
enum VK_FORMAT_B8G8R8_UINT = VkFormat.B8G8R8_UINT;
enum VK_FORMAT_B8G8R8_SINT = VkFormat.B8G8R8_SINT;
enum VK_FORMAT_B8G8R8_SRGB = VkFormat.B8G8R8_SRGB;
enum VK_FORMAT_R8G8B8A8_UNORM = VkFormat.R8G8B8A8_UNORM;
enum VK_FORMAT_R8G8B8A8_SNORM = VkFormat.R8G8B8A8_SNORM;
enum VK_FORMAT_R8G8B8A8_USCALED = VkFormat.R8G8B8A8_USCALED;
enum VK_FORMAT_R8G8B8A8_SSCALED = VkFormat.R8G8B8A8_SSCALED;
enum VK_FORMAT_R8G8B8A8_UINT = VkFormat.R8G8B8A8_UINT;
enum VK_FORMAT_R8G8B8A8_SINT = VkFormat.R8G8B8A8_SINT;
enum VK_FORMAT_R8G8B8A8_SRGB = VkFormat.R8G8B8A8_SRGB;
enum VK_FORMAT_B8G8R8A8_UNORM = VkFormat.B8G8R8A8_UNORM;
enum VK_FORMAT_B8G8R8A8_SNORM = VkFormat.B8G8R8A8_SNORM;
enum VK_FORMAT_B8G8R8A8_USCALED = VkFormat.B8G8R8A8_USCALED;
enum VK_FORMAT_B8G8R8A8_SSCALED = VkFormat.B8G8R8A8_SSCALED;
enum VK_FORMAT_B8G8R8A8_UINT = VkFormat.B8G8R8A8_UINT;
enum VK_FORMAT_B8G8R8A8_SINT = VkFormat.B8G8R8A8_SINT;
enum VK_FORMAT_B8G8R8A8_SRGB = VkFormat.B8G8R8A8_SRGB;
enum VK_FORMAT_A8B8G8R8_UNORM_PACK32 = VkFormat.A8B8G8R8_UNORM_PACK32;
enum VK_FORMAT_A8B8G8R8_SNORM_PACK32 = VkFormat.A8B8G8R8_SNORM_PACK32;
enum VK_FORMAT_A8B8G8R8_USCALED_PACK32 = VkFormat.A8B8G8R8_USCALED_PACK32;
enum VK_FORMAT_A8B8G8R8_SSCALED_PACK32 = VkFormat.A8B8G8R8_SSCALED_PACK32;
enum VK_FORMAT_A8B8G8R8_UINT_PACK32 = VkFormat.A8B8G8R8_UINT_PACK32;
enum VK_FORMAT_A8B8G8R8_SINT_PACK32 = VkFormat.A8B8G8R8_SINT_PACK32;
enum VK_FORMAT_A8B8G8R8_SRGB_PACK32 = VkFormat.A8B8G8R8_SRGB_PACK32;
enum VK_FORMAT_A2R10G10B10_UNORM_PACK32 = VkFormat.A2R10G10B10_UNORM_PACK32;
enum VK_FORMAT_A2R10G10B10_SNORM_PACK32 = VkFormat.A2R10G10B10_SNORM_PACK32;
enum VK_FORMAT_A2R10G10B10_USCALED_PACK32 = VkFormat.A2R10G10B10_USCALED_PACK32;
enum VK_FORMAT_A2R10G10B10_SSCALED_PACK32 = VkFormat.A2R10G10B10_SSCALED_PACK32;
enum VK_FORMAT_A2R10G10B10_UINT_PACK32 = VkFormat.A2R10G10B10_UINT_PACK32;
enum VK_FORMAT_A2R10G10B10_SINT_PACK32 = VkFormat.A2R10G10B10_SINT_PACK32;
enum VK_FORMAT_A2B10G10R10_UNORM_PACK32 = VkFormat.A2B10G10R10_UNORM_PACK32;
enum VK_FORMAT_A2B10G10R10_SNORM_PACK32 = VkFormat.A2B10G10R10_SNORM_PACK32;
enum VK_FORMAT_A2B10G10R10_USCALED_PACK32 = VkFormat.A2B10G10R10_USCALED_PACK32;
enum VK_FORMAT_A2B10G10R10_SSCALED_PACK32 = VkFormat.A2B10G10R10_SSCALED_PACK32;
enum VK_FORMAT_A2B10G10R10_UINT_PACK32 = VkFormat.A2B10G10R10_UINT_PACK32;
enum VK_FORMAT_A2B10G10R10_SINT_PACK32 = VkFormat.A2B10G10R10_SINT_PACK32;
enum VK_FORMAT_R16_UNORM = VkFormat.R16_UNORM;
enum VK_FORMAT_R16_SNORM = VkFormat.R16_SNORM;
enum VK_FORMAT_R16_USCALED = VkFormat.R16_USCALED;
enum VK_FORMAT_R16_SSCALED = VkFormat.R16_SSCALED;
enum VK_FORMAT_R16_UINT = VkFormat.R16_UINT;
enum VK_FORMAT_R16_SINT = VkFormat.R16_SINT;
enum VK_FORMAT_R16_SFLOAT = VkFormat.R16_SFLOAT;
enum VK_FORMAT_R16G16_UNORM = VkFormat.R16G16_UNORM;
enum VK_FORMAT_R16G16_SNORM = VkFormat.R16G16_SNORM;
enum VK_FORMAT_R16G16_USCALED = VkFormat.R16G16_USCALED;
enum VK_FORMAT_R16G16_SSCALED = VkFormat.R16G16_SSCALED;
enum VK_FORMAT_R16G16_UINT = VkFormat.R16G16_UINT;
enum VK_FORMAT_R16G16_SINT = VkFormat.R16G16_SINT;
enum VK_FORMAT_R16G16_SFLOAT = VkFormat.R16G16_SFLOAT;
enum VK_FORMAT_R16G16B16_UNORM = VkFormat.R16G16B16_UNORM;
enum VK_FORMAT_R16G16B16_SNORM = VkFormat.R16G16B16_SNORM;
enum VK_FORMAT_R16G16B16_USCALED = VkFormat.R16G16B16_USCALED;
enum VK_FORMAT_R16G16B16_SSCALED = VkFormat.R16G16B16_SSCALED;
enum VK_FORMAT_R16G16B16_UINT = VkFormat.R16G16B16_UINT;
enum VK_FORMAT_R16G16B16_SINT = VkFormat.R16G16B16_SINT;
enum VK_FORMAT_R16G16B16_SFLOAT = VkFormat.R16G16B16_SFLOAT;
enum VK_FORMAT_R16G16B16A16_UNORM = VkFormat.R16G16B16A16_UNORM;
enum VK_FORMAT_R16G16B16A16_SNORM = VkFormat.R16G16B16A16_SNORM;
enum VK_FORMAT_R16G16B16A16_USCALED = VkFormat.R16G16B16A16_USCALED;
enum VK_FORMAT_R16G16B16A16_SSCALED = VkFormat.R16G16B16A16_SSCALED;
enum VK_FORMAT_R16G16B16A16_UINT = VkFormat.R16G16B16A16_UINT;
enum VK_FORMAT_R16G16B16A16_SINT = VkFormat.R16G16B16A16_SINT;
enum VK_FORMAT_R16G16B16A16_SFLOAT = VkFormat.R16G16B16A16_SFLOAT;
enum VK_FORMAT_R32_UINT = VkFormat.R32_UINT;
enum VK_FORMAT_R32_SINT = VkFormat.R32_SINT;
enum VK_FORMAT_R32_SFLOAT = VkFormat.R32_SFLOAT;
enum VK_FORMAT_R32G32_UINT = VkFormat.R32G32_UINT;
enum VK_FORMAT_R32G32_SINT = VkFormat.R32G32_SINT;
enum VK_FORMAT_R32G32_SFLOAT = VkFormat.R32G32_SFLOAT;
enum VK_FORMAT_R32G32B32_UINT = VkFormat.R32G32B32_UINT;
enum VK_FORMAT_R32G32B32_SINT = VkFormat.R32G32B32_SINT;
enum VK_FORMAT_R32G32B32_SFLOAT = VkFormat.R32G32B32_SFLOAT;
enum VK_FORMAT_R32G32B32A32_UINT = VkFormat.R32G32B32A32_UINT;
enum VK_FORMAT_R32G32B32A32_SINT = VkFormat.R32G32B32A32_SINT;
enum VK_FORMAT_R32G32B32A32_SFLOAT = VkFormat.R32G32B32A32_SFLOAT;
enum VK_FORMAT_R64_UINT = VkFormat.R64_UINT;
enum VK_FORMAT_R64_SINT = VkFormat.R64_SINT;
enum VK_FORMAT_R64_SFLOAT = VkFormat.R64_SFLOAT;
enum VK_FORMAT_R64G64_UINT = VkFormat.R64G64_UINT;
enum VK_FORMAT_R64G64_SINT = VkFormat.R64G64_SINT;
enum VK_FORMAT_R64G64_SFLOAT = VkFormat.R64G64_SFLOAT;
enum VK_FORMAT_R64G64B64_UINT = VkFormat.R64G64B64_UINT;
enum VK_FORMAT_R64G64B64_SINT = VkFormat.R64G64B64_SINT;
enum VK_FORMAT_R64G64B64_SFLOAT = VkFormat.R64G64B64_SFLOAT;
enum VK_FORMAT_R64G64B64A64_UINT = VkFormat.R64G64B64A64_UINT;
enum VK_FORMAT_R64G64B64A64_SINT = VkFormat.R64G64B64A64_SINT;
enum VK_FORMAT_R64G64B64A64_SFLOAT = VkFormat.R64G64B64A64_SFLOAT;
enum VK_FORMAT_B10G11R11_UFLOAT_PACK32 = VkFormat.B10G11R11_UFLOAT_PACK32;
enum VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 = VkFormat.E5B9G9R9_UFLOAT_PACK32;
enum VK_FORMAT_D16_UNORM = VkFormat.D16_UNORM;
enum VK_FORMAT_X8_D24_UNORM_PACK32 = VkFormat.X8_D24_UNORM_PACK32;
enum VK_FORMAT_D32_SFLOAT = VkFormat.D32_SFLOAT;
enum VK_FORMAT_S8_UINT = VkFormat.S8_UINT;
enum VK_FORMAT_D16_UNORM_S8_UINT = VkFormat.D16_UNORM_S8_UINT;
enum VK_FORMAT_D24_UNORM_S8_UINT = VkFormat.D24_UNORM_S8_UINT;
enum VK_FORMAT_D32_SFLOAT_S8_UINT = VkFormat.D32_SFLOAT_S8_UINT;
enum VK_FORMAT_BC1_RGB_UNORM_BLOCK = VkFormat.BC1_RGB_UNORM_BLOCK;
enum VK_FORMAT_BC1_RGB_SRGB_BLOCK = VkFormat.BC1_RGB_SRGB_BLOCK;
enum VK_FORMAT_BC1_RGBA_UNORM_BLOCK = VkFormat.BC1_RGBA_UNORM_BLOCK;
enum VK_FORMAT_BC1_RGBA_SRGB_BLOCK = VkFormat.BC1_RGBA_SRGB_BLOCK;
enum VK_FORMAT_BC2_UNORM_BLOCK = VkFormat.BC2_UNORM_BLOCK;
enum VK_FORMAT_BC2_SRGB_BLOCK = VkFormat.BC2_SRGB_BLOCK;
enum VK_FORMAT_BC3_UNORM_BLOCK = VkFormat.BC3_UNORM_BLOCK;
enum VK_FORMAT_BC3_SRGB_BLOCK = VkFormat.BC3_SRGB_BLOCK;
enum VK_FORMAT_BC4_UNORM_BLOCK = VkFormat.BC4_UNORM_BLOCK;
enum VK_FORMAT_BC4_SNORM_BLOCK = VkFormat.BC4_SNORM_BLOCK;
enum VK_FORMAT_BC5_UNORM_BLOCK = VkFormat.BC5_UNORM_BLOCK;
enum VK_FORMAT_BC5_SNORM_BLOCK = VkFormat.BC5_SNORM_BLOCK;
enum VK_FORMAT_BC6H_UFLOAT_BLOCK = VkFormat.BC6H_UFLOAT_BLOCK;
enum VK_FORMAT_BC6H_SFLOAT_BLOCK = VkFormat.BC6H_SFLOAT_BLOCK;
enum VK_FORMAT_BC7_UNORM_BLOCK = VkFormat.BC7_UNORM_BLOCK;
enum VK_FORMAT_BC7_SRGB_BLOCK = VkFormat.BC7_SRGB_BLOCK;
enum VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = VkFormat.ETC2_R8G8B8_UNORM_BLOCK;
enum VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = VkFormat.ETC2_R8G8B8_SRGB_BLOCK;
enum VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = VkFormat.ETC2_R8G8B8A1_UNORM_BLOCK;
enum VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = VkFormat.ETC2_R8G8B8A1_SRGB_BLOCK;
enum VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = VkFormat.ETC2_R8G8B8A8_UNORM_BLOCK;
enum VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = VkFormat.ETC2_R8G8B8A8_SRGB_BLOCK;
enum VK_FORMAT_EAC_R11_UNORM_BLOCK = VkFormat.EAC_R11_UNORM_BLOCK;
enum VK_FORMAT_EAC_R11_SNORM_BLOCK = VkFormat.EAC_R11_SNORM_BLOCK;
enum VK_FORMAT_EAC_R11G11_UNORM_BLOCK = VkFormat.EAC_R11G11_UNORM_BLOCK;
enum VK_FORMAT_EAC_R11G11_SNORM_BLOCK = VkFormat.EAC_R11G11_SNORM_BLOCK;
enum VK_FORMAT_ASTC_4x4_UNORM_BLOCK = VkFormat.ASTC_4x4_UNORM_BLOCK;
enum VK_FORMAT_ASTC_4x4_SRGB_BLOCK = VkFormat.ASTC_4x4_SRGB_BLOCK;
enum VK_FORMAT_ASTC_5x4_UNORM_BLOCK = VkFormat.ASTC_5x4_UNORM_BLOCK;
enum VK_FORMAT_ASTC_5x4_SRGB_BLOCK = VkFormat.ASTC_5x4_SRGB_BLOCK;
enum VK_FORMAT_ASTC_5x5_UNORM_BLOCK = VkFormat.ASTC_5x5_UNORM_BLOCK;
enum VK_FORMAT_ASTC_5x5_SRGB_BLOCK = VkFormat.ASTC_5x5_SRGB_BLOCK;
enum VK_FORMAT_ASTC_6x5_UNORM_BLOCK = VkFormat.ASTC_6x5_UNORM_BLOCK;
enum VK_FORMAT_ASTC_6x5_SRGB_BLOCK = VkFormat.ASTC_6x5_SRGB_BLOCK;
enum VK_FORMAT_ASTC_6x6_UNORM_BLOCK = VkFormat.ASTC_6x6_UNORM_BLOCK;
enum VK_FORMAT_ASTC_6x6_SRGB_BLOCK = VkFormat.ASTC_6x6_SRGB_BLOCK;
enum VK_FORMAT_ASTC_8x5_UNORM_BLOCK = VkFormat.ASTC_8x5_UNORM_BLOCK;
enum VK_FORMAT_ASTC_8x5_SRGB_BLOCK = VkFormat.ASTC_8x5_SRGB_BLOCK;
enum VK_FORMAT_ASTC_8x6_UNORM_BLOCK = VkFormat.ASTC_8x6_UNORM_BLOCK;
enum VK_FORMAT_ASTC_8x6_SRGB_BLOCK = VkFormat.ASTC_8x6_SRGB_BLOCK;
enum VK_FORMAT_ASTC_8x8_UNORM_BLOCK = VkFormat.ASTC_8x8_UNORM_BLOCK;
enum VK_FORMAT_ASTC_8x8_SRGB_BLOCK = VkFormat.ASTC_8x8_SRGB_BLOCK;
enum VK_FORMAT_ASTC_10x5_UNORM_BLOCK = VkFormat.ASTC_10x5_UNORM_BLOCK;
enum VK_FORMAT_ASTC_10x5_SRGB_BLOCK = VkFormat.ASTC_10x5_SRGB_BLOCK;
enum VK_FORMAT_ASTC_10x6_UNORM_BLOCK = VkFormat.ASTC_10x6_UNORM_BLOCK;
enum VK_FORMAT_ASTC_10x6_SRGB_BLOCK = VkFormat.ASTC_10x6_SRGB_BLOCK;
enum VK_FORMAT_ASTC_10x8_UNORM_BLOCK = VkFormat.ASTC_10x8_UNORM_BLOCK;
enum VK_FORMAT_ASTC_10x8_SRGB_BLOCK = VkFormat.ASTC_10x8_SRGB_BLOCK;
enum VK_FORMAT_ASTC_10x10_UNORM_BLOCK = VkFormat.ASTC_10x10_UNORM_BLOCK;
enum VK_FORMAT_ASTC_10x10_SRGB_BLOCK = VkFormat.ASTC_10x10_SRGB_BLOCK;
enum VK_FORMAT_ASTC_12x10_UNORM_BLOCK = VkFormat.ASTC_12x10_UNORM_BLOCK;
enum VK_FORMAT_ASTC_12x10_SRGB_BLOCK = VkFormat.ASTC_12x10_SRGB_BLOCK;
enum VK_FORMAT_ASTC_12x12_UNORM_BLOCK = VkFormat.ASTC_12x12_UNORM_BLOCK;
enum VK_FORMAT_ASTC_12x12_SRGB_BLOCK = VkFormat.ASTC_12x12_SRGB_BLOCK;
enum VK_FORMAT_G8B8G8R8_422_UNORM = VkFormat.G8B8G8R8_422_UNORM;
enum VK_FORMAT_B8G8R8G8_422_UNORM = VkFormat.B8G8R8G8_422_UNORM;
enum VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM = VkFormat.G8_B8_R8_3PLANE_420_UNORM;
enum VK_FORMAT_G8_B8R8_2PLANE_420_UNORM = VkFormat.G8_B8R8_2PLANE_420_UNORM;
enum VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM = VkFormat.G8_B8_R8_3PLANE_422_UNORM;
enum VK_FORMAT_G8_B8R8_2PLANE_422_UNORM = VkFormat.G8_B8R8_2PLANE_422_UNORM;
enum VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM = VkFormat.G8_B8_R8_3PLANE_444_UNORM;
enum VK_FORMAT_R10X6_UNORM_PACK16 = VkFormat.R10X6_UNORM_PACK16;
enum VK_FORMAT_R10X6G10X6_UNORM_2PACK16 = VkFormat.R10X6G10X6_UNORM_2PACK16;
enum VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 = VkFormat.R10X6G10X6B10X6A10X6_UNORM_4PACK16;
enum VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = VkFormat.G10X6B10X6G10X6R10X6_422_UNORM_4PACK16;
enum VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = VkFormat.B10X6G10X6R10X6G10X6_422_UNORM_4PACK16;
enum VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 = VkFormat.G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16;
enum VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 = VkFormat.G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16;
enum VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 = VkFormat.G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16;
enum VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 = VkFormat.G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16;
enum VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 = VkFormat.G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16;
enum VK_FORMAT_R12X4_UNORM_PACK16 = VkFormat.R12X4_UNORM_PACK16;
enum VK_FORMAT_R12X4G12X4_UNORM_2PACK16 = VkFormat.R12X4G12X4_UNORM_2PACK16;
enum VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 = VkFormat.R12X4G12X4B12X4A12X4_UNORM_4PACK16;
enum VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = VkFormat.G12X4B12X4G12X4R12X4_422_UNORM_4PACK16;
enum VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = VkFormat.B12X4G12X4R12X4G12X4_422_UNORM_4PACK16;
enum VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 = VkFormat.G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16;
enum VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 = VkFormat.G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16;
enum VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 = VkFormat.G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16;
enum VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 = VkFormat.G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16;
enum VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 = VkFormat.G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16;
enum VK_FORMAT_G16B16G16R16_422_UNORM = VkFormat.G16B16G16R16_422_UNORM;
enum VK_FORMAT_B16G16R16G16_422_UNORM = VkFormat.B16G16R16G16_422_UNORM;
enum VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM = VkFormat.G16_B16_R16_3PLANE_420_UNORM;
enum VK_FORMAT_G16_B16R16_2PLANE_420_UNORM = VkFormat.G16_B16R16_2PLANE_420_UNORM;
enum VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM = VkFormat.G16_B16_R16_3PLANE_422_UNORM;
enum VK_FORMAT_G16_B16R16_2PLANE_422_UNORM = VkFormat.G16_B16R16_2PLANE_422_UNORM;
enum VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM = VkFormat.G16_B16_R16_3PLANE_444_UNORM;
enum VK_FORMAT_G8_B8R8_2PLANE_444_UNORM = VkFormat.G8_B8R8_2PLANE_444_UNORM;
enum VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16 = VkFormat.G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16;
enum VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16 = VkFormat.G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16;
enum VK_FORMAT_G16_B16R16_2PLANE_444_UNORM = VkFormat.G16_B16R16_2PLANE_444_UNORM;
enum VK_FORMAT_A4R4G4B4_UNORM_PACK16 = VkFormat.A4R4G4B4_UNORM_PACK16;
enum VK_FORMAT_A4B4G4R4_UNORM_PACK16 = VkFormat.A4B4G4R4_UNORM_PACK16;
enum VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK = VkFormat.ASTC_4x4_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK = VkFormat.ASTC_5x4_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK = VkFormat.ASTC_5x5_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK = VkFormat.ASTC_6x5_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK = VkFormat.ASTC_6x6_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK = VkFormat.ASTC_8x5_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK = VkFormat.ASTC_8x6_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK = VkFormat.ASTC_8x8_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK = VkFormat.ASTC_10x5_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK = VkFormat.ASTC_10x6_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK = VkFormat.ASTC_10x8_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK = VkFormat.ASTC_10x10_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK = VkFormat.ASTC_12x10_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK = VkFormat.ASTC_12x12_SFLOAT_BLOCK;
enum VK_FORMAT_A1B5G5R5_UNORM_PACK16 = VkFormat.A1B5G5R5_UNORM_PACK16;
enum VK_FORMAT_A8_UNORM = VkFormat.A8_UNORM;
enum VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG = VkFormat.PVRTC1_2BPP_UNORM_BLOCK_IMG;
enum VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG = VkFormat.PVRTC1_4BPP_UNORM_BLOCK_IMG;
enum VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG = VkFormat.PVRTC2_2BPP_UNORM_BLOCK_IMG;
enum VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG = VkFormat.PVRTC2_4BPP_UNORM_BLOCK_IMG;
enum VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG = VkFormat.PVRTC1_2BPP_SRGB_BLOCK_IMG;
enum VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG = VkFormat.PVRTC1_4BPP_SRGB_BLOCK_IMG;
enum VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG = VkFormat.PVRTC2_2BPP_SRGB_BLOCK_IMG;
enum VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG = VkFormat.PVRTC2_4BPP_SRGB_BLOCK_IMG;
enum VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK;
enum VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK;
enum VK_FORMAT_G8B8G8R8_422_UNORM_KHR = VK_FORMAT_G8B8G8R8_422_UNORM;
enum VK_FORMAT_B8G8R8G8_422_UNORM_KHR = VK_FORMAT_B8G8R8G8_422_UNORM;
enum VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR = VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM;
enum VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR = VK_FORMAT_G8_B8R8_2PLANE_420_UNORM;
enum VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR = VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM;
enum VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR = VK_FORMAT_G8_B8R8_2PLANE_422_UNORM;
enum VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR = VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM;
enum VK_FORMAT_R10X6_UNORM_PACK16_KHR = VK_FORMAT_R10X6_UNORM_PACK16;
enum VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR = VK_FORMAT_R10X6G10X6_UNORM_2PACK16;
enum VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR = VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16;
enum VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR = VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16;
enum VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR = VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16;
enum VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16;
enum VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16;
enum VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16;
enum VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16;
enum VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16;
enum VK_FORMAT_R12X4_UNORM_PACK16_KHR = VK_FORMAT_R12X4_UNORM_PACK16;
enum VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR = VK_FORMAT_R12X4G12X4_UNORM_2PACK16;
enum VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR = VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16;
enum VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR = VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16;
enum VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR = VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16;
enum VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16;
enum VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16;
enum VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16;
enum VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16;
enum VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16;
enum VK_FORMAT_G16B16G16R16_422_UNORM_KHR = VK_FORMAT_G16B16G16R16_422_UNORM;
enum VK_FORMAT_B16G16R16G16_422_UNORM_KHR = VK_FORMAT_B16G16R16G16_422_UNORM;
enum VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR = VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM;
enum VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR = VK_FORMAT_G16_B16R16_2PLANE_420_UNORM;
enum VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR = VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM;
enum VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR = VK_FORMAT_G16_B16R16_2PLANE_422_UNORM;
enum VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR = VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM;
enum VK_FORMAT_ASTC_3x3x3_UNORM_BLOCK_EXT = VkFormat.ASTC_3x3x3_UNORM_BLOCK_EXT;
enum VK_FORMAT_ASTC_3x3x3_SRGB_BLOCK_EXT = VkFormat.ASTC_3x3x3_SRGB_BLOCK_EXT;
enum VK_FORMAT_ASTC_3x3x3_SFLOAT_BLOCK_EXT = VkFormat.ASTC_3x3x3_SFLOAT_BLOCK_EXT;
enum VK_FORMAT_ASTC_4x3x3_UNORM_BLOCK_EXT = VkFormat.ASTC_4x3x3_UNORM_BLOCK_EXT;
enum VK_FORMAT_ASTC_4x3x3_SRGB_BLOCK_EXT = VkFormat.ASTC_4x3x3_SRGB_BLOCK_EXT;
enum VK_FORMAT_ASTC_4x3x3_SFLOAT_BLOCK_EXT = VkFormat.ASTC_4x3x3_SFLOAT_BLOCK_EXT;
enum VK_FORMAT_ASTC_4x4x3_UNORM_BLOCK_EXT = VkFormat.ASTC_4x4x3_UNORM_BLOCK_EXT;
enum VK_FORMAT_ASTC_4x4x3_SRGB_BLOCK_EXT = VkFormat.ASTC_4x4x3_SRGB_BLOCK_EXT;
enum VK_FORMAT_ASTC_4x4x3_SFLOAT_BLOCK_EXT = VkFormat.ASTC_4x4x3_SFLOAT_BLOCK_EXT;
enum VK_FORMAT_ASTC_4x4x4_UNORM_BLOCK_EXT = VkFormat.ASTC_4x4x4_UNORM_BLOCK_EXT;
enum VK_FORMAT_ASTC_4x4x4_SRGB_BLOCK_EXT = VkFormat.ASTC_4x4x4_SRGB_BLOCK_EXT;
enum VK_FORMAT_ASTC_4x4x4_SFLOAT_BLOCK_EXT = VkFormat.ASTC_4x4x4_SFLOAT_BLOCK_EXT;
enum VK_FORMAT_ASTC_5x4x4_UNORM_BLOCK_EXT = VkFormat.ASTC_5x4x4_UNORM_BLOCK_EXT;
enum VK_FORMAT_ASTC_5x4x4_SRGB_BLOCK_EXT = VkFormat.ASTC_5x4x4_SRGB_BLOCK_EXT;
enum VK_FORMAT_ASTC_5x4x4_SFLOAT_BLOCK_EXT = VkFormat.ASTC_5x4x4_SFLOAT_BLOCK_EXT;
enum VK_FORMAT_ASTC_5x5x4_UNORM_BLOCK_EXT = VkFormat.ASTC_5x5x4_UNORM_BLOCK_EXT;
enum VK_FORMAT_ASTC_5x5x4_SRGB_BLOCK_EXT = VkFormat.ASTC_5x5x4_SRGB_BLOCK_EXT;
enum VK_FORMAT_ASTC_5x5x4_SFLOAT_BLOCK_EXT = VkFormat.ASTC_5x5x4_SFLOAT_BLOCK_EXT;
enum VK_FORMAT_ASTC_5x5x5_UNORM_BLOCK_EXT = VkFormat.ASTC_5x5x5_UNORM_BLOCK_EXT;
enum VK_FORMAT_ASTC_5x5x5_SRGB_BLOCK_EXT = VkFormat.ASTC_5x5x5_SRGB_BLOCK_EXT;
enum VK_FORMAT_ASTC_5x5x5_SFLOAT_BLOCK_EXT = VkFormat.ASTC_5x5x5_SFLOAT_BLOCK_EXT;
enum VK_FORMAT_ASTC_6x5x5_UNORM_BLOCK_EXT = VkFormat.ASTC_6x5x5_UNORM_BLOCK_EXT;
enum VK_FORMAT_ASTC_6x5x5_SRGB_BLOCK_EXT = VkFormat.ASTC_6x5x5_SRGB_BLOCK_EXT;
enum VK_FORMAT_ASTC_6x5x5_SFLOAT_BLOCK_EXT = VkFormat.ASTC_6x5x5_SFLOAT_BLOCK_EXT;
enum VK_FORMAT_ASTC_6x6x5_UNORM_BLOCK_EXT = VkFormat.ASTC_6x6x5_UNORM_BLOCK_EXT;
enum VK_FORMAT_ASTC_6x6x5_SRGB_BLOCK_EXT = VkFormat.ASTC_6x6x5_SRGB_BLOCK_EXT;
enum VK_FORMAT_ASTC_6x6x5_SFLOAT_BLOCK_EXT = VkFormat.ASTC_6x6x5_SFLOAT_BLOCK_EXT;
enum VK_FORMAT_ASTC_6x6x6_UNORM_BLOCK_EXT = VkFormat.ASTC_6x6x6_UNORM_BLOCK_EXT;
enum VK_FORMAT_ASTC_6x6x6_SRGB_BLOCK_EXT = VkFormat.ASTC_6x6x6_SRGB_BLOCK_EXT;
enum VK_FORMAT_ASTC_6x6x6_SFLOAT_BLOCK_EXT = VkFormat.ASTC_6x6x6_SFLOAT_BLOCK_EXT;
enum VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT = VK_FORMAT_G8_B8R8_2PLANE_444_UNORM;
enum VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16;
enum VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16;
enum VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT = VK_FORMAT_G16_B16R16_2PLANE_444_UNORM;
enum VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT = VK_FORMAT_A4R4G4B4_UNORM_PACK16;
enum VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT = VK_FORMAT_A4B4G4R4_UNORM_PACK16;
enum VK_FORMAT_R8_BOOL_ARM = VkFormat.R8_BOOL_ARM;
enum VK_FORMAT_R16G16_SFIXED5_NV = VkFormat.R16G16_SFIXED5_NV;
deprecated("aliased")
enum VK_FORMAT_R16G16_S10_5_NV = VK_FORMAT_R16G16_SFIXED5_NV;
enum VK_FORMAT_A1B5G5R5_UNORM_PACK16_KHR = VK_FORMAT_A1B5G5R5_UNORM_PACK16;
enum VK_FORMAT_A8_UNORM_KHR = VK_FORMAT_A8_UNORM;
enum VK_FORMAT_R10X6_UINT_PACK16_ARM = VkFormat.R10X6_UINT_PACK16_ARM;
enum VK_FORMAT_R10X6G10X6_UINT_2PACK16_ARM = VkFormat.R10X6G10X6_UINT_2PACK16_ARM;
enum VK_FORMAT_R10X6G10X6B10X6A10X6_UINT_4PACK16_ARM = VkFormat.R10X6G10X6B10X6A10X6_UINT_4PACK16_ARM;
enum VK_FORMAT_R12X4_UINT_PACK16_ARM = VkFormat.R12X4_UINT_PACK16_ARM;
enum VK_FORMAT_R12X4G12X4_UINT_2PACK16_ARM = VkFormat.R12X4G12X4_UINT_2PACK16_ARM;
enum VK_FORMAT_R12X4G12X4B12X4A12X4_UINT_4PACK16_ARM = VkFormat.R12X4G12X4B12X4A12X4_UINT_4PACK16_ARM;
enum VK_FORMAT_R14X2_UINT_PACK16_ARM = VkFormat.R14X2_UINT_PACK16_ARM;
enum VK_FORMAT_R14X2G14X2_UINT_2PACK16_ARM = VkFormat.R14X2G14X2_UINT_2PACK16_ARM;
enum VK_FORMAT_R14X2G14X2B14X2A14X2_UINT_4PACK16_ARM = VkFormat.R14X2G14X2B14X2A14X2_UINT_4PACK16_ARM;
enum VK_FORMAT_R14X2_UNORM_PACK16_ARM = VkFormat.R14X2_UNORM_PACK16_ARM;
enum VK_FORMAT_R14X2G14X2_UNORM_2PACK16_ARM = VkFormat.R14X2G14X2_UNORM_2PACK16_ARM;
enum VK_FORMAT_R14X2G14X2B14X2A14X2_UNORM_4PACK16_ARM = VkFormat.R14X2G14X2B14X2A14X2_UNORM_4PACK16_ARM;
enum VK_FORMAT_G14X2_B14X2R14X2_2PLANE_420_UNORM_3PACK16_ARM = VkFormat.G14X2_B14X2R14X2_2PLANE_420_UNORM_3PACK16_ARM;
enum VK_FORMAT_G14X2_B14X2R14X2_2PLANE_422_UNORM_3PACK16_ARM = VkFormat.G14X2_B14X2R14X2_2PLANE_422_UNORM_3PACK16_ARM;

enum VkFormatFeatureFlagBits : uint {
    SAMPLED_IMAGE_BIT = 1,
    STORAGE_IMAGE_BIT = 2,
    STORAGE_IMAGE_ATOMIC_BIT = 4,
    UNIFORM_TEXEL_BUFFER_BIT = 8,
    STORAGE_TEXEL_BUFFER_BIT = 16,
    STORAGE_TEXEL_BUFFER_ATOMIC_BIT = 32,
    VERTEX_BUFFER_BIT = 64,
    COLOR_ATTACHMENT_BIT = 128,
    COLOR_ATTACHMENT_BLEND_BIT = 256,
    DEPTH_STENCIL_ATTACHMENT_BIT = 512,
    BLIT_SRC_BIT = 1024,
    BLIT_DST_BIT = 2048,
    SAMPLED_IMAGE_FILTER_LINEAR_BIT = 4096,
    TRANSFER_SRC_BIT = 16384,
    TRANSFER_DST_BIT = 32768,
    MIDPOINT_CHROMA_SAMPLES_BIT = 131072,
    SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT = 262144,
    SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT = 524288,
    SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT = 1048576,
    SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT = 2097152,
    DISJOINT_BIT = 4194304,
    COSITED_CHROMA_SAMPLES_BIT = 8388608,
    SAMPLED_IMAGE_FILTER_MINMAX_BIT = 65536,
    SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG = SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT,
    VIDEO_DECODE_OUTPUT_BIT_KHR = 33554432,
    VIDEO_DECODE_DPB_BIT_KHR = 67108864,
    TRANSFER_SRC_BIT_KHR = TRANSFER_SRC_BIT,
    TRANSFER_DST_BIT_KHR = TRANSFER_DST_BIT,
    SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT = SAMPLED_IMAGE_FILTER_MINMAX_BIT,
    ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR = 536870912,
    MIDPOINT_CHROMA_SAMPLES_BIT_KHR = MIDPOINT_CHROMA_SAMPLES_BIT,
    SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR = SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT,
    SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR = SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT,
    SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR = SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT,
    SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR = SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT,
    DISJOINT_BIT_KHR = DISJOINT_BIT,
    COSITED_CHROMA_SAMPLES_BIT_KHR = COSITED_CHROMA_SAMPLES_BIT,
    SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT = 8192,
    FRAGMENT_DENSITY_MAP_BIT_EXT = 16777216,
    FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 1073741824,
    VIDEO_ENCODE_INPUT_BIT_KHR = 134217728,
    VIDEO_ENCODE_DPB_BIT_KHR = 268435456,
}

enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT = VkFormatFeatureFlagBits.SAMPLED_IMAGE_BIT;
enum VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT = VkFormatFeatureFlagBits.STORAGE_IMAGE_BIT;
enum VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT = VkFormatFeatureFlagBits.STORAGE_IMAGE_ATOMIC_BIT;
enum VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT = VkFormatFeatureFlagBits.UNIFORM_TEXEL_BUFFER_BIT;
enum VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT = VkFormatFeatureFlagBits.STORAGE_TEXEL_BUFFER_BIT;
enum VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT = VkFormatFeatureFlagBits.STORAGE_TEXEL_BUFFER_ATOMIC_BIT;
enum VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT = VkFormatFeatureFlagBits.VERTEX_BUFFER_BIT;
enum VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT = VkFormatFeatureFlagBits.COLOR_ATTACHMENT_BIT;
enum VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT = VkFormatFeatureFlagBits.COLOR_ATTACHMENT_BLEND_BIT;
enum VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT = VkFormatFeatureFlagBits.DEPTH_STENCIL_ATTACHMENT_BIT;
enum VK_FORMAT_FEATURE_BLIT_SRC_BIT = VkFormatFeatureFlagBits.BLIT_SRC_BIT;
enum VK_FORMAT_FEATURE_BLIT_DST_BIT = VkFormatFeatureFlagBits.BLIT_DST_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT = VkFormatFeatureFlagBits.SAMPLED_IMAGE_FILTER_LINEAR_BIT;
enum VK_FORMAT_FEATURE_TRANSFER_SRC_BIT = VkFormatFeatureFlagBits.TRANSFER_SRC_BIT;
enum VK_FORMAT_FEATURE_TRANSFER_DST_BIT = VkFormatFeatureFlagBits.TRANSFER_DST_BIT;
enum VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT = VkFormatFeatureFlagBits.MIDPOINT_CHROMA_SAMPLES_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT = VkFormatFeatureFlagBits.SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT = VkFormatFeatureFlagBits.SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT = VkFormatFeatureFlagBits.SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT = VkFormatFeatureFlagBits.SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT;
enum VK_FORMAT_FEATURE_DISJOINT_BIT = VkFormatFeatureFlagBits.DISJOINT_BIT;
enum VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT = VkFormatFeatureFlagBits.COSITED_CHROMA_SAMPLES_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT = VkFormatFeatureFlagBits.SAMPLED_IMAGE_FILTER_MINMAX_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT;
enum VK_FORMAT_FEATURE_VIDEO_DECODE_OUTPUT_BIT_KHR = VkFormatFeatureFlagBits.VIDEO_DECODE_OUTPUT_BIT_KHR;
enum VK_FORMAT_FEATURE_VIDEO_DECODE_DPB_BIT_KHR = VkFormatFeatureFlagBits.VIDEO_DECODE_DPB_BIT_KHR;
enum VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR = VK_FORMAT_FEATURE_TRANSFER_SRC_BIT;
enum VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR = VK_FORMAT_FEATURE_TRANSFER_DST_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT;
enum VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR = VkFormatFeatureFlagBits.ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR;
enum VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR = VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT;
enum VK_FORMAT_FEATURE_DISJOINT_BIT_KHR = VK_FORMAT_FEATURE_DISJOINT_BIT;
enum VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR = VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT;
enum VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT = VkFormatFeatureFlagBits.SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT;
enum VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT = VkFormatFeatureFlagBits.FRAGMENT_DENSITY_MAP_BIT_EXT;
enum VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = VkFormatFeatureFlagBits.FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR;
enum VK_FORMAT_FEATURE_VIDEO_ENCODE_INPUT_BIT_KHR = VkFormatFeatureFlagBits.VIDEO_ENCODE_INPUT_BIT_KHR;
enum VK_FORMAT_FEATURE_VIDEO_ENCODE_DPB_BIT_KHR = VkFormatFeatureFlagBits.VIDEO_ENCODE_DPB_BIT_KHR;

alias VkFormatFeatureFlags = VkFlags;

struct VkFormatProperties {
    VkFlags linearTilingFeatures;
    VkFlags optimalTilingFeatures;
    VkFlags bufferFeatures;
}

enum VkImageCreateFlagBits : uint {
    SPARSE_BINDING_BIT = 1,
    SPARSE_RESIDENCY_BIT = 2,
    SPARSE_ALIASED_BIT = 4,
    MUTABLE_FORMAT_BIT = 8,
    CUBE_COMPATIBLE_BIT = 16,
    ALIAS_BIT = 1024,
    SPLIT_INSTANCE_BIND_REGIONS_BIT = 64,
    VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT = 32,
    BLOCK_TEXEL_VIEW_COMPATIBLE_BIT = 128,
    EXTENDED_USAGE_BIT = 256,
    PROTECTED_BIT = 2048,
    DISJOINT_BIT = 512,
    CORNER_SAMPLED_BIT_NV = 8192,
    SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR = SPLIT_INSTANCE_BIND_REGIONS_BIT,
    VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR = VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT,
    RESERVED_21_BIT_IMG = 2097152,
    BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR = BLOCK_TEXEL_VIEW_COMPATIBLE_BIT,
    EXTENDED_USAGE_BIT_KHR = EXTENDED_USAGE_BIT,
    SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT = 4096,
    DISJOINT_BIT_KHR = DISJOINT_BIT,
    ALIAS_BIT_KHR = ALIAS_BIT,
    SUBSAMPLED_BIT_EXT = 16384,
    DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = 65536,
    MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_BIT_EXT = 262144,
    VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT = 131072,
    FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM = FRAGMENT_DENSITY_MAP_OFFSET_BIT_EXT,
    VIDEO_PROFILE_INDEPENDENT_BIT_KHR = 1048576,
    FRAGMENT_DENSITY_MAP_OFFSET_BIT_EXT = 32768,
    RESERVED_22_BIT_KHR = 4194304,
}

enum VK_IMAGE_CREATE_SPARSE_BINDING_BIT = VkImageCreateFlagBits.SPARSE_BINDING_BIT;
enum VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT = VkImageCreateFlagBits.SPARSE_RESIDENCY_BIT;
enum VK_IMAGE_CREATE_SPARSE_ALIASED_BIT = VkImageCreateFlagBits.SPARSE_ALIASED_BIT;
enum VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT = VkImageCreateFlagBits.MUTABLE_FORMAT_BIT;
enum VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT = VkImageCreateFlagBits.CUBE_COMPATIBLE_BIT;
enum VK_IMAGE_CREATE_ALIAS_BIT = VkImageCreateFlagBits.ALIAS_BIT;
enum VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT = VkImageCreateFlagBits.SPLIT_INSTANCE_BIND_REGIONS_BIT;
enum VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT = VkImageCreateFlagBits.VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT;
enum VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT = VkImageCreateFlagBits.BLOCK_TEXEL_VIEW_COMPATIBLE_BIT;
enum VK_IMAGE_CREATE_EXTENDED_USAGE_BIT = VkImageCreateFlagBits.EXTENDED_USAGE_BIT;
enum VK_IMAGE_CREATE_PROTECTED_BIT = VkImageCreateFlagBits.PROTECTED_BIT;
enum VK_IMAGE_CREATE_DISJOINT_BIT = VkImageCreateFlagBits.DISJOINT_BIT;
enum VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV = VkImageCreateFlagBits.CORNER_SAMPLED_BIT_NV;
enum VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR = VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT;
enum VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR = VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT;
enum VK_IMAGE_CREATE_RESERVED_21_BIT_IMG = VkImageCreateFlagBits.RESERVED_21_BIT_IMG;
enum VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR = VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT;
enum VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR = VK_IMAGE_CREATE_EXTENDED_USAGE_BIT;
enum VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT = VkImageCreateFlagBits.SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT;
enum VK_IMAGE_CREATE_DISJOINT_BIT_KHR = VK_IMAGE_CREATE_DISJOINT_BIT;
enum VK_IMAGE_CREATE_ALIAS_BIT_KHR = VK_IMAGE_CREATE_ALIAS_BIT;
enum VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT = VkImageCreateFlagBits.SUBSAMPLED_BIT_EXT;
enum VK_IMAGE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = VkImageCreateFlagBits.DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT;
enum VK_IMAGE_CREATE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_BIT_EXT = VkImageCreateFlagBits.MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_BIT_EXT;
enum VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT = VkImageCreateFlagBits.VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT;
enum VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM = VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_EXT;
enum VK_IMAGE_CREATE_VIDEO_PROFILE_INDEPENDENT_BIT_KHR = VkImageCreateFlagBits.VIDEO_PROFILE_INDEPENDENT_BIT_KHR;
enum VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_EXT = VkImageCreateFlagBits.FRAGMENT_DENSITY_MAP_OFFSET_BIT_EXT;
enum VK_IMAGE_CREATE_RESERVED_22_BIT_KHR = VkImageCreateFlagBits.RESERVED_22_BIT_KHR;

alias VkImageCreateFlags = VkFlags;

struct VkImageFormatProperties {
    VkExtent3D maxExtent;
    uint maxMipLevels;
    uint maxArrayLayers;
    VkFlags sampleCounts;
    VkDeviceSize maxResourceSize;
}

enum VkImageTiling {
    OPTIMAL = 0,
    LINEAR = 1,
    DRM_FORMAT_MODIFIER_EXT = 1000158000,
}

enum VK_IMAGE_TILING_OPTIMAL = VkImageTiling.OPTIMAL;
enum VK_IMAGE_TILING_LINEAR = VkImageTiling.LINEAR;
enum VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT = VkImageTiling.DRM_FORMAT_MODIFIER_EXT;

enum VkImageType {
    VK_IMAGE_TYPE_1D = 0,
    VK_IMAGE_TYPE_2D = 1,
    VK_IMAGE_TYPE_3D = 2,
}

enum VK_IMAGE_TYPE_1D = VkImageType.VK_IMAGE_TYPE_1D;
enum VK_IMAGE_TYPE_2D = VkImageType.VK_IMAGE_TYPE_2D;
enum VK_IMAGE_TYPE_3D = VkImageType.VK_IMAGE_TYPE_3D;

enum VkImageUsageFlagBits : uint {
    TRANSFER_SRC_BIT = 1,
    TRANSFER_DST_BIT = 2,
    SAMPLED_BIT = 4,
    STORAGE_BIT = 8,
    COLOR_ATTACHMENT_BIT = 16,
    DEPTH_STENCIL_ATTACHMENT_BIT = 32,
    TRANSIENT_ATTACHMENT_BIT = 64,
    INPUT_ATTACHMENT_BIT = 128,
    HOST_TRANSFER_BIT = 4194304,
    VIDEO_DECODE_DST_BIT_KHR = 1024,
    VIDEO_DECODE_SRC_BIT_KHR = 2048,
    VIDEO_DECODE_DPB_BIT_KHR = 4096,
    SHADING_RATE_IMAGE_BIT_NV = FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,
    FRAGMENT_DENSITY_MAP_BIT_EXT = 512,
    FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 256,
    HOST_TRANSFER_BIT_EXT = HOST_TRANSFER_BIT,
    VIDEO_ENCODE_DST_BIT_KHR = 8192,
    VIDEO_ENCODE_SRC_BIT_KHR = 16384,
    VIDEO_ENCODE_DPB_BIT_KHR = 32768,
    ATTACHMENT_FEEDBACK_LOOP_BIT_EXT = 524288,
    INVOCATION_MASK_BIT_HUAWEI = 262144,
    SAMPLE_WEIGHT_BIT_QCOM = 1048576,
    SAMPLE_BLOCK_MATCH_BIT_QCOM = 2097152,
    RESERVED_24_BIT_COREAVI = 16777216,
    TENSOR_ALIASING_BIT_ARM = 8388608,
    RESERVED_28_BIT_EXT = 268435456,
    TILE_MEMORY_BIT_QCOM = 134217728,
    VIDEO_ENCODE_QUANTIZATION_DELTA_MAP_BIT_KHR = 33554432,
    VIDEO_ENCODE_EMPHASIS_MAP_BIT_KHR = 67108864,
    RESERVED_29_BIT_KHR = 536870912,
    RESERVED_30_BIT_KHR = 1073741824,
}

enum VK_IMAGE_USAGE_TRANSFER_SRC_BIT = VkImageUsageFlagBits.TRANSFER_SRC_BIT;
enum VK_IMAGE_USAGE_TRANSFER_DST_BIT = VkImageUsageFlagBits.TRANSFER_DST_BIT;
enum VK_IMAGE_USAGE_SAMPLED_BIT = VkImageUsageFlagBits.SAMPLED_BIT;
enum VK_IMAGE_USAGE_STORAGE_BIT = VkImageUsageFlagBits.STORAGE_BIT;
enum VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT = VkImageUsageFlagBits.COLOR_ATTACHMENT_BIT;
enum VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT = VkImageUsageFlagBits.DEPTH_STENCIL_ATTACHMENT_BIT;
enum VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT = VkImageUsageFlagBits.TRANSIENT_ATTACHMENT_BIT;
enum VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT = VkImageUsageFlagBits.INPUT_ATTACHMENT_BIT;
enum VK_IMAGE_USAGE_HOST_TRANSFER_BIT = VkImageUsageFlagBits.HOST_TRANSFER_BIT;
enum VK_IMAGE_USAGE_VIDEO_DECODE_DST_BIT_KHR = VkImageUsageFlagBits.VIDEO_DECODE_DST_BIT_KHR;
enum VK_IMAGE_USAGE_VIDEO_DECODE_SRC_BIT_KHR = VkImageUsageFlagBits.VIDEO_DECODE_SRC_BIT_KHR;
enum VK_IMAGE_USAGE_VIDEO_DECODE_DPB_BIT_KHR = VkImageUsageFlagBits.VIDEO_DECODE_DPB_BIT_KHR;
enum VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV = VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR;
enum VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT = VkImageUsageFlagBits.FRAGMENT_DENSITY_MAP_BIT_EXT;
enum VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = VkImageUsageFlagBits.FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR;
enum VK_IMAGE_USAGE_HOST_TRANSFER_BIT_EXT = VK_IMAGE_USAGE_HOST_TRANSFER_BIT;
enum VK_IMAGE_USAGE_VIDEO_ENCODE_DST_BIT_KHR = VkImageUsageFlagBits.VIDEO_ENCODE_DST_BIT_KHR;
enum VK_IMAGE_USAGE_VIDEO_ENCODE_SRC_BIT_KHR = VkImageUsageFlagBits.VIDEO_ENCODE_SRC_BIT_KHR;
enum VK_IMAGE_USAGE_VIDEO_ENCODE_DPB_BIT_KHR = VkImageUsageFlagBits.VIDEO_ENCODE_DPB_BIT_KHR;
enum VK_IMAGE_USAGE_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT = VkImageUsageFlagBits.ATTACHMENT_FEEDBACK_LOOP_BIT_EXT;
enum VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI = VkImageUsageFlagBits.INVOCATION_MASK_BIT_HUAWEI;
enum VK_IMAGE_USAGE_SAMPLE_WEIGHT_BIT_QCOM = VkImageUsageFlagBits.SAMPLE_WEIGHT_BIT_QCOM;
enum VK_IMAGE_USAGE_SAMPLE_BLOCK_MATCH_BIT_QCOM = VkImageUsageFlagBits.SAMPLE_BLOCK_MATCH_BIT_QCOM;
enum VK_IMAGE_USAGE_RESERVED_24_BIT_COREAVI = VkImageUsageFlagBits.RESERVED_24_BIT_COREAVI;
enum VK_IMAGE_USAGE_TENSOR_ALIASING_BIT_ARM = VkImageUsageFlagBits.TENSOR_ALIASING_BIT_ARM;
enum VK_IMAGE_USAGE_RESERVED_28_BIT_EXT = VkImageUsageFlagBits.RESERVED_28_BIT_EXT;
enum VK_IMAGE_USAGE_TILE_MEMORY_BIT_QCOM = VkImageUsageFlagBits.TILE_MEMORY_BIT_QCOM;
enum VK_IMAGE_USAGE_VIDEO_ENCODE_QUANTIZATION_DELTA_MAP_BIT_KHR = VkImageUsageFlagBits.VIDEO_ENCODE_QUANTIZATION_DELTA_MAP_BIT_KHR;
enum VK_IMAGE_USAGE_VIDEO_ENCODE_EMPHASIS_MAP_BIT_KHR = VkImageUsageFlagBits.VIDEO_ENCODE_EMPHASIS_MAP_BIT_KHR;
enum VK_IMAGE_USAGE_RESERVED_29_BIT_KHR = VkImageUsageFlagBits.RESERVED_29_BIT_KHR;
enum VK_IMAGE_USAGE_RESERVED_30_BIT_KHR = VkImageUsageFlagBits.RESERVED_30_BIT_KHR;

alias VkImageUsageFlags = VkFlags;

alias VkInstance = OpaqueHandle!("VkInstance");

alias VkInstanceCreateFlags = VkFlags;

enum VkInstanceCreateFlagBits : uint {
    ENUMERATE_PORTABILITY_BIT_KHR = 1,
    RESERVED_616_BIT_EXT = 2,
}

enum VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR = VkInstanceCreateFlagBits.ENUMERATE_PORTABILITY_BIT_KHR;
enum VK_INSTANCE_CREATE_RESERVED_616_BIT_EXT = VkInstanceCreateFlagBits.RESERVED_616_BIT_EXT;

struct VkInstanceCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    const(VkApplicationInfo)* pApplicationInfo;
    uint enabledLayerCount;
    const(const(char)*)* ppEnabledLayerNames;
    uint enabledExtensionCount;
    const(const(char)*)* ppEnabledExtensionNames;
}

enum VkInternalAllocationType {
    EXECUTABLE = 0,
}

enum VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE = VkInternalAllocationType.EXECUTABLE;

struct VkMemoryHeap {
    VkDeviceSize size;
    VkFlags flags;
}

enum VkMemoryHeapFlagBits : uint {
    DEVICE_LOCAL_BIT = 1,
    MULTI_INSTANCE_BIT = 2,
    SEU_SAFE_BIT = 4,
    MULTI_INSTANCE_BIT_KHR = MULTI_INSTANCE_BIT,
    TILE_MEMORY_BIT_QCOM = 8,
}

enum VK_MEMORY_HEAP_DEVICE_LOCAL_BIT = VkMemoryHeapFlagBits.DEVICE_LOCAL_BIT;
enum VK_MEMORY_HEAP_MULTI_INSTANCE_BIT = VkMemoryHeapFlagBits.MULTI_INSTANCE_BIT;
enum VK_MEMORY_HEAP_SEU_SAFE_BIT = VkMemoryHeapFlagBits.SEU_SAFE_BIT;
enum VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR = VK_MEMORY_HEAP_MULTI_INSTANCE_BIT;
enum VK_MEMORY_HEAP_TILE_MEMORY_BIT_QCOM = VkMemoryHeapFlagBits.TILE_MEMORY_BIT_QCOM;

alias VkMemoryHeapFlags = VkFlags;

enum VkMemoryPropertyFlagBits : uint {
    DEVICE_LOCAL_BIT = 1,
    HOST_VISIBLE_BIT = 2,
    HOST_COHERENT_BIT = 4,
    HOST_CACHED_BIT = 8,
    LAZILY_ALLOCATED_BIT = 16,
    PROTECTED_BIT = 32,
    DEVICE_COHERENT_BIT_AMD = 64,
    DEVICE_UNCACHED_BIT_AMD = 128,
    RDMA_CAPABLE_BIT_NV = 256,
}

enum VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT = VkMemoryPropertyFlagBits.DEVICE_LOCAL_BIT;
enum VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT = VkMemoryPropertyFlagBits.HOST_VISIBLE_BIT;
enum VK_MEMORY_PROPERTY_HOST_COHERENT_BIT = VkMemoryPropertyFlagBits.HOST_COHERENT_BIT;
enum VK_MEMORY_PROPERTY_HOST_CACHED_BIT = VkMemoryPropertyFlagBits.HOST_CACHED_BIT;
enum VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT = VkMemoryPropertyFlagBits.LAZILY_ALLOCATED_BIT;
enum VK_MEMORY_PROPERTY_PROTECTED_BIT = VkMemoryPropertyFlagBits.PROTECTED_BIT;
enum VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD = VkMemoryPropertyFlagBits.DEVICE_COHERENT_BIT_AMD;
enum VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD = VkMemoryPropertyFlagBits.DEVICE_UNCACHED_BIT_AMD;
enum VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV = VkMemoryPropertyFlagBits.RDMA_CAPABLE_BIT_NV;

alias VkMemoryPropertyFlags = VkFlags;

struct VkMemoryType {
    VkFlags propertyFlags;
    uint heapIndex;
}

alias VkPhysicalDevice = OpaqueHandle!("VkPhysicalDevice");

struct VkPhysicalDeviceFeatures {
    VkBool32 robustBufferAccess;
    VkBool32 fullDrawIndexUint32;
    VkBool32 imageCubeArray;
    VkBool32 independentBlend;
    VkBool32 geometryShader;
    VkBool32 tessellationShader;
    VkBool32 sampleRateShading;
    VkBool32 dualSrcBlend;
    VkBool32 logicOp;
    VkBool32 multiDrawIndirect;
    VkBool32 drawIndirectFirstInstance;
    VkBool32 depthClamp;
    VkBool32 depthBiasClamp;
    VkBool32 fillModeNonSolid;
    VkBool32 depthBounds;
    VkBool32 wideLines;
    VkBool32 largePoints;
    VkBool32 alphaToOne;
    VkBool32 multiViewport;
    VkBool32 samplerAnisotropy;
    VkBool32 textureCompressionETC2;
    VkBool32 textureCompressionASTC_LDR;
    VkBool32 textureCompressionBC;
    VkBool32 occlusionQueryPrecise;
    VkBool32 pipelineStatisticsQuery;
    VkBool32 vertexPipelineStoresAndAtomics;
    VkBool32 fragmentStoresAndAtomics;
    VkBool32 shaderTessellationAndGeometryPointSize;
    VkBool32 shaderImageGatherExtended;
    VkBool32 shaderStorageImageExtendedFormats;
    VkBool32 shaderStorageImageMultisample;
    VkBool32 shaderStorageImageReadWithoutFormat;
    VkBool32 shaderStorageImageWriteWithoutFormat;
    VkBool32 shaderUniformBufferArrayDynamicIndexing;
    VkBool32 shaderSampledImageArrayDynamicIndexing;
    VkBool32 shaderStorageBufferArrayDynamicIndexing;
    VkBool32 shaderStorageImageArrayDynamicIndexing;
    VkBool32 shaderClipDistance;
    VkBool32 shaderCullDistance;
    VkBool32 shaderFloat64;
    VkBool32 shaderInt64;
    VkBool32 shaderInt16;
    VkBool32 shaderResourceResidency;
    VkBool32 shaderResourceMinLod;
    VkBool32 sparseBinding;
    VkBool32 sparseResidencyBuffer;
    VkBool32 sparseResidencyImage2D;
    VkBool32 sparseResidencyImage3D;
    VkBool32 sparseResidency2Samples;
    VkBool32 sparseResidency4Samples;
    VkBool32 sparseResidency8Samples;
    VkBool32 sparseResidency16Samples;
    VkBool32 sparseResidencyAliased;
    VkBool32 variableMultisampleRate;
    VkBool32 inheritedQueries;
}

struct VkPhysicalDeviceLimits {
    uint maxImageDimension1D;
    uint maxImageDimension2D;
    uint maxImageDimension3D;
    uint maxImageDimensionCube;
    uint maxImageArrayLayers;
    uint maxTexelBufferElements;
    uint maxUniformBufferRange;
    uint maxStorageBufferRange;
    uint maxPushConstantsSize;
    uint maxMemoryAllocationCount;
    uint maxSamplerAllocationCount;
    VkDeviceSize bufferImageGranularity;
    VkDeviceSize sparseAddressSpaceSize;
    uint maxBoundDescriptorSets;
    uint maxPerStageDescriptorSamplers;
    uint maxPerStageDescriptorUniformBuffers;
    uint maxPerStageDescriptorStorageBuffers;
    uint maxPerStageDescriptorSampledImages;
    uint maxPerStageDescriptorStorageImages;
    uint maxPerStageDescriptorInputAttachments;
    uint maxPerStageResources;
    uint maxDescriptorSetSamplers;
    uint maxDescriptorSetUniformBuffers;
    uint maxDescriptorSetUniformBuffersDynamic;
    uint maxDescriptorSetStorageBuffers;
    uint maxDescriptorSetStorageBuffersDynamic;
    uint maxDescriptorSetSampledImages;
    uint maxDescriptorSetStorageImages;
    uint maxDescriptorSetInputAttachments;
    uint maxVertexInputAttributes;
    uint maxVertexInputBindings;
    uint maxVertexInputAttributeOffset;
    uint maxVertexInputBindingStride;
    uint maxVertexOutputComponents;
    uint maxTessellationGenerationLevel;
    uint maxTessellationPatchSize;
    uint maxTessellationControlPerVertexInputComponents;
    uint maxTessellationControlPerVertexOutputComponents;
    uint maxTessellationControlPerPatchOutputComponents;
    uint maxTessellationControlTotalOutputComponents;
    uint maxTessellationEvaluationInputComponents;
    uint maxTessellationEvaluationOutputComponents;
    uint maxGeometryShaderInvocations;
    uint maxGeometryInputComponents;
    uint maxGeometryOutputComponents;
    uint maxGeometryOutputVertices;
    uint maxGeometryTotalOutputComponents;
    uint maxFragmentInputComponents;
    uint maxFragmentOutputAttachments;
    uint maxFragmentDualSrcAttachments;
    uint maxFragmentCombinedOutputResources;
    uint maxComputeSharedMemorySize;
    uint maxComputeWorkGroupCount;
    uint maxComputeWorkGroupInvocations;
    uint maxComputeWorkGroupSize;
    uint subPixelPrecisionBits;
    uint subTexelPrecisionBits;
    uint mipmapPrecisionBits;
    uint maxDrawIndexedIndexValue;
    uint maxDrawIndirectCount;
    float maxSamplerLodBias;
    float maxSamplerAnisotropy;
    uint maxViewports;
    uint maxViewportDimensions;
    float viewportBoundsRange;
    uint viewportSubPixelBits;
    size_t minMemoryMapAlignment;
    VkDeviceSize minTexelBufferOffsetAlignment;
    VkDeviceSize minUniformBufferOffsetAlignment;
    VkDeviceSize minStorageBufferOffsetAlignment;
    int minTexelOffset;
    uint maxTexelOffset;
    int minTexelGatherOffset;
    uint maxTexelGatherOffset;
    float minInterpolationOffset;
    float maxInterpolationOffset;
    uint subPixelInterpolationOffsetBits;
    uint maxFramebufferWidth;
    uint maxFramebufferHeight;
    uint maxFramebufferLayers;
    VkFlags framebufferColorSampleCounts;
    VkFlags framebufferDepthSampleCounts;
    VkFlags framebufferStencilSampleCounts;
    VkFlags framebufferNoAttachmentsSampleCounts;
    uint maxColorAttachments;
    VkFlags sampledImageColorSampleCounts;
    VkFlags sampledImageIntegerSampleCounts;
    VkFlags sampledImageDepthSampleCounts;
    VkFlags sampledImageStencilSampleCounts;
    VkFlags storageImageSampleCounts;
    uint maxSampleMaskWords;
    VkBool32 timestampComputeAndGraphics;
    float timestampPeriod;
    uint maxClipDistances;
    uint maxCullDistances;
    uint maxCombinedClipAndCullDistances;
    uint discreteQueuePriorities;
    float pointSizeRange;
    float lineWidthRange;
    float pointSizeGranularity;
    float lineWidthGranularity;
    VkBool32 strictLines;
    VkBool32 standardSampleLocations;
    VkDeviceSize optimalBufferCopyOffsetAlignment;
    VkDeviceSize optimalBufferCopyRowPitchAlignment;
    VkDeviceSize nonCoherentAtomSize;
}

struct VkPhysicalDeviceMemoryProperties {
    uint memoryTypeCount;
    VkMemoryType[VK_MAX_MEMORY_TYPES] memoryTypes;
    uint memoryHeapCount;
    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] memoryHeaps;
}

struct VkPhysicalDeviceProperties {
    uint apiVersion;
    uint driverVersion;
    uint vendorID;
    uint deviceID;
    VkPhysicalDeviceType deviceType;
    char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] deviceName;
    ubyte[VK_UUID_SIZE] pipelineCacheUUID;
    VkPhysicalDeviceLimits limits;
    VkPhysicalDeviceSparseProperties sparseProperties;
}

struct VkPhysicalDeviceSparseProperties {
    VkBool32 residencyStandard2DBlockShape;
    VkBool32 residencyStandard2DMultisampleBlockShape;
    VkBool32 residencyStandard3DBlockShape;
    VkBool32 residencyAlignedMipSize;
    VkBool32 residencyNonResidentStrict;
}

enum VkPhysicalDeviceType {
    OTHER = 0,
    INTEGRATED_GPU = 1,
    DISCRETE_GPU = 2,
    VIRTUAL_GPU = 3,
    CPU = 4,
}

enum VK_PHYSICAL_DEVICE_TYPE_OTHER = VkPhysicalDeviceType.OTHER;
enum VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU = VkPhysicalDeviceType.INTEGRATED_GPU;
enum VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU = VkPhysicalDeviceType.DISCRETE_GPU;
enum VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU = VkPhysicalDeviceType.VIRTUAL_GPU;
enum VK_PHYSICAL_DEVICE_TYPE_CPU = VkPhysicalDeviceType.CPU;

struct VkQueueFamilyProperties {
    VkFlags queueFlags;
    uint queueCount;
    uint timestampValidBits;
    VkExtent3D minImageTransferGranularity;
}

enum VkQueueFlagBits : uint {
    GRAPHICS_BIT = 1,
    COMPUTE_BIT = 2,
    TRANSFER_BIT = 4,
    SPARSE_BINDING_BIT = 8,
    PROTECTED_BIT = 16,
    VIDEO_DECODE_BIT_KHR = 32,
    VIDEO_ENCODE_BIT_KHR = 64,
    RESERVED_7_BIT_QCOM = 128,
    OPTICAL_FLOW_BIT_NV = 256,
    DATA_GRAPH_BIT_ARM = 1024,
    RESERVED_12_BIT_EXT = 4096,
    RESERVED_13_BIT_EXT = 8192,
    RESERVED_11_BIT_ARM = 2048,
}

enum VK_QUEUE_GRAPHICS_BIT = VkQueueFlagBits.GRAPHICS_BIT;
enum VK_QUEUE_COMPUTE_BIT = VkQueueFlagBits.COMPUTE_BIT;
enum VK_QUEUE_TRANSFER_BIT = VkQueueFlagBits.TRANSFER_BIT;
enum VK_QUEUE_SPARSE_BINDING_BIT = VkQueueFlagBits.SPARSE_BINDING_BIT;
enum VK_QUEUE_PROTECTED_BIT = VkQueueFlagBits.PROTECTED_BIT;
enum VK_QUEUE_VIDEO_DECODE_BIT_KHR = VkQueueFlagBits.VIDEO_DECODE_BIT_KHR;
enum VK_QUEUE_VIDEO_ENCODE_BIT_KHR = VkQueueFlagBits.VIDEO_ENCODE_BIT_KHR;
enum VK_QUEUE_RESERVED_7_BIT_QCOM = VkQueueFlagBits.RESERVED_7_BIT_QCOM;
enum VK_QUEUE_OPTICAL_FLOW_BIT_NV = VkQueueFlagBits.OPTICAL_FLOW_BIT_NV;
enum VK_QUEUE_DATA_GRAPH_BIT_ARM = VkQueueFlagBits.DATA_GRAPH_BIT_ARM;
enum VK_QUEUE_RESERVED_12_BIT_EXT = VkQueueFlagBits.RESERVED_12_BIT_EXT;
enum VK_QUEUE_RESERVED_13_BIT_EXT = VkQueueFlagBits.RESERVED_13_BIT_EXT;
enum VK_QUEUE_RESERVED_11_BIT_ARM = VkQueueFlagBits.RESERVED_11_BIT_ARM;

alias VkQueueFlags = VkFlags;

enum VkSampleCountFlagBits : uint {
    VK_SAMPLE_COUNT_1_BIT = 1,
    VK_SAMPLE_COUNT_2_BIT = 2,
    VK_SAMPLE_COUNT_4_BIT = 4,
    VK_SAMPLE_COUNT_8_BIT = 8,
    VK_SAMPLE_COUNT_16_BIT = 16,
    VK_SAMPLE_COUNT_32_BIT = 32,
    VK_SAMPLE_COUNT_64_BIT = 64,
}

enum VK_SAMPLE_COUNT_1_BIT = VkSampleCountFlagBits.VK_SAMPLE_COUNT_1_BIT;
enum VK_SAMPLE_COUNT_2_BIT = VkSampleCountFlagBits.VK_SAMPLE_COUNT_2_BIT;
enum VK_SAMPLE_COUNT_4_BIT = VkSampleCountFlagBits.VK_SAMPLE_COUNT_4_BIT;
enum VK_SAMPLE_COUNT_8_BIT = VkSampleCountFlagBits.VK_SAMPLE_COUNT_8_BIT;
enum VK_SAMPLE_COUNT_16_BIT = VkSampleCountFlagBits.VK_SAMPLE_COUNT_16_BIT;
enum VK_SAMPLE_COUNT_32_BIT = VkSampleCountFlagBits.VK_SAMPLE_COUNT_32_BIT;
enum VK_SAMPLE_COUNT_64_BIT = VkSampleCountFlagBits.VK_SAMPLE_COUNT_64_BIT;

alias VkSampleCountFlags = VkFlags;

enum VkSystemAllocationScope {
    COMMAND = 0,
    OBJECT = 1,
    CACHE = 2,
    DEVICE = 3,
    INSTANCE = 4,
}

enum VK_SYSTEM_ALLOCATION_SCOPE_COMMAND = VkSystemAllocationScope.COMMAND;
enum VK_SYSTEM_ALLOCATION_SCOPE_OBJECT = VkSystemAllocationScope.OBJECT;
enum VK_SYSTEM_ALLOCATION_SCOPE_CACHE = VkSystemAllocationScope.CACHE;
enum VK_SYSTEM_ALLOCATION_SCOPE_DEVICE = VkSystemAllocationScope.DEVICE;
enum VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE = VkSystemAllocationScope.INSTANCE;

version (VK_VERSION_1_0) {
    extern VkResult vkCreateInstance(
        const(VkInstanceCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkInstance* pInstance,
    );
    
    extern void vkDestroyInstance(
        VkInstance instance,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern VkResult vkEnumeratePhysicalDevices(
        VkInstance instance,
        uint* pPhysicalDeviceCount,
        VkPhysicalDevice* pPhysicalDevices,
    );
    
    extern void vkGetPhysicalDeviceFeatures(
        VkPhysicalDevice physicalDevice,
        VkPhysicalDeviceFeatures* pFeatures,
    );
    
    extern void vkGetPhysicalDeviceFormatProperties(
        VkPhysicalDevice physicalDevice,
        VkFormat format,
        VkFormatProperties* pFormatProperties,
    );
    
    extern VkResult vkGetPhysicalDeviceImageFormatProperties(
        VkPhysicalDevice physicalDevice,
        VkFormat format,
        VkImageType type,
        VkImageTiling tiling,
        VkImageUsageFlags usage,
        VkImageCreateFlags flags,
        VkImageFormatProperties* pImageFormatProperties,
    );
    
    extern void vkGetPhysicalDeviceProperties(
        VkPhysicalDevice physicalDevice,
        VkPhysicalDeviceProperties* pProperties,
    );
    
    extern void vkGetPhysicalDeviceQueueFamilyProperties(
        VkPhysicalDevice physicalDevice,
        uint* pQueueFamilyPropertyCount,
        VkQueueFamilyProperties* pQueueFamilyProperties,
    );
    
    extern void vkGetPhysicalDeviceMemoryProperties(
        VkPhysicalDevice physicalDevice,
        VkPhysicalDeviceMemoryProperties* pMemoryProperties,
    );
    
    extern PFN_vkVoidFunction vkGetInstanceProcAddr(
        VkInstance instance,
        const(char)* pName,
    );
    
    extern PFN_vkVoidFunction vkGetDeviceProcAddr(
        VkDevice device,
        const(char)* pName,
    );
}

// Device commands

alias VkDevice = OpaqueHandle!("VkDevice");

alias VkDeviceCreateFlags = VkFlags;

struct VkDeviceCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint queueCreateInfoCount;
    const(VkDeviceQueueCreateInfo)* pQueueCreateInfos;
    deprecated("ignored")
    uint enabledLayerCount;
    deprecated("ignored")
    const(const(char)*)* ppEnabledLayerNames;
    uint enabledExtensionCount;
    const(const(char)*)* ppEnabledExtensionNames;
    const(VkPhysicalDeviceFeatures)* pEnabledFeatures;
}

alias VkDeviceQueueCreateFlags = VkFlags;

struct VkDeviceQueueCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint queueFamilyIndex;
    uint queueCount;
    const(float)* pQueuePriorities;
}

version (VK_VERSION_1_0) {
    extern VkResult vkCreateDevice(
        VkPhysicalDevice physicalDevice,
        const(VkDeviceCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkDevice* pDevice,
    );
    
    extern void vkDestroyDevice(
        VkDevice device,
        const(VkAllocationCallbacks)* pAllocator,
    );
}

// Extension discovery commands

struct VkExtensionProperties {
    char[VK_MAX_EXTENSION_NAME_SIZE] extensionName;
    uint specVersion;
}

version (VK_VERSION_1_0) {
    extern VkResult vkEnumerateInstanceExtensionProperties(
        const(char)* pLayerName,
        uint* pPropertyCount,
        VkExtensionProperties* pProperties,
    );
    
    extern VkResult vkEnumerateDeviceExtensionProperties(
        VkPhysicalDevice physicalDevice,
        const(char)* pLayerName,
        uint* pPropertyCount,
        VkExtensionProperties* pProperties,
    );
}

// Layer discovery commands

struct VkLayerProperties {
    char[VK_MAX_EXTENSION_NAME_SIZE] layerName;
    uint specVersion;
    uint implementationVersion;
    char[VK_MAX_DESCRIPTION_SIZE] description;
}

version (VK_VERSION_1_0) {
    extern VkResult vkEnumerateInstanceLayerProperties(
        uint* pPropertyCount,
        VkLayerProperties* pProperties,
    );
    
    extern VkResult vkEnumerateDeviceLayerProperties(
        VkPhysicalDevice physicalDevice,
        uint* pPropertyCount,
        VkLayerProperties* pProperties,
    );
}

// Queue commands

enum VkPipelineStageFlagBits : uint {
    TOP_OF_PIPE_BIT = 1,
    DRAW_INDIRECT_BIT = 2,
    VERTEX_INPUT_BIT = 4,
    VERTEX_SHADER_BIT = 8,
    TESSELLATION_CONTROL_SHADER_BIT = 16,
    TESSELLATION_EVALUATION_SHADER_BIT = 32,
    GEOMETRY_SHADER_BIT = 64,
    FRAGMENT_SHADER_BIT = 128,
    EARLY_FRAGMENT_TESTS_BIT = 256,
    LATE_FRAGMENT_TESTS_BIT = 512,
    COLOR_ATTACHMENT_OUTPUT_BIT = 1024,
    COMPUTE_SHADER_BIT = 2048,
    TRANSFER_BIT = 4096,
    BOTTOM_OF_PIPE_BIT = 8192,
    HOST_BIT = 16384,
    ALL_GRAPHICS_BIT = 32768,
    ALL_COMMANDS_BIT = 65536,
    NONE = 0,
    TRANSFORM_FEEDBACK_BIT_EXT = 16777216,
    CONDITIONAL_RENDERING_BIT_EXT = 262144,
    ACCELERATION_STRUCTURE_BUILD_BIT_KHR = 33554432,
    RAY_TRACING_SHADER_BIT_KHR = 2097152,
    SHADING_RATE_IMAGE_BIT_NV = FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,
    RAY_TRACING_SHADER_BIT_NV = RAY_TRACING_SHADER_BIT_KHR,
    ACCELERATION_STRUCTURE_BUILD_BIT_NV = ACCELERATION_STRUCTURE_BUILD_BIT_KHR,
    TASK_SHADER_BIT_NV = TASK_SHADER_BIT_EXT,
    MESH_SHADER_BIT_NV = MESH_SHADER_BIT_EXT,
    FRAGMENT_DENSITY_PROCESS_BIT_EXT = 8388608,
    FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 4194304,
    COMMAND_PREPROCESS_BIT_NV = COMMAND_PREPROCESS_BIT_EXT,
    NONE_KHR = NONE,
    TASK_SHADER_BIT_EXT = 524288,
    MESH_SHADER_BIT_EXT = 1048576,
    COMMAND_PREPROCESS_BIT_EXT = 131072,
}

enum VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT = VkPipelineStageFlagBits.TOP_OF_PIPE_BIT;
enum VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT = VkPipelineStageFlagBits.DRAW_INDIRECT_BIT;
enum VK_PIPELINE_STAGE_VERTEX_INPUT_BIT = VkPipelineStageFlagBits.VERTEX_INPUT_BIT;
enum VK_PIPELINE_STAGE_VERTEX_SHADER_BIT = VkPipelineStageFlagBits.VERTEX_SHADER_BIT;
enum VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT = VkPipelineStageFlagBits.TESSELLATION_CONTROL_SHADER_BIT;
enum VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = VkPipelineStageFlagBits.TESSELLATION_EVALUATION_SHADER_BIT;
enum VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT = VkPipelineStageFlagBits.GEOMETRY_SHADER_BIT;
enum VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT = VkPipelineStageFlagBits.FRAGMENT_SHADER_BIT;
enum VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT = VkPipelineStageFlagBits.EARLY_FRAGMENT_TESTS_BIT;
enum VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT = VkPipelineStageFlagBits.LATE_FRAGMENT_TESTS_BIT;
enum VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT = VkPipelineStageFlagBits.COLOR_ATTACHMENT_OUTPUT_BIT;
enum VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT = VkPipelineStageFlagBits.COMPUTE_SHADER_BIT;
enum VK_PIPELINE_STAGE_TRANSFER_BIT = VkPipelineStageFlagBits.TRANSFER_BIT;
enum VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT = VkPipelineStageFlagBits.BOTTOM_OF_PIPE_BIT;
enum VK_PIPELINE_STAGE_HOST_BIT = VkPipelineStageFlagBits.HOST_BIT;
enum VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT = VkPipelineStageFlagBits.ALL_GRAPHICS_BIT;
enum VK_PIPELINE_STAGE_ALL_COMMANDS_BIT = VkPipelineStageFlagBits.ALL_COMMANDS_BIT;
enum VK_PIPELINE_STAGE_NONE = VkPipelineStageFlagBits.NONE;
enum VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT = VkPipelineStageFlagBits.TRANSFORM_FEEDBACK_BIT_EXT;
enum VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT = VkPipelineStageFlagBits.CONDITIONAL_RENDERING_BIT_EXT;
enum VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR = VkPipelineStageFlagBits.ACCELERATION_STRUCTURE_BUILD_BIT_KHR;
enum VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR = VkPipelineStageFlagBits.RAY_TRACING_SHADER_BIT_KHR;
enum VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV = VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR;
enum VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV = VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR;
enum VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV = VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR;
enum VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV = VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT;
enum VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV = VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT;
enum VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT = VkPipelineStageFlagBits.FRAGMENT_DENSITY_PROCESS_BIT_EXT;
enum VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = VkPipelineStageFlagBits.FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR;
enum VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV = VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_EXT;
enum VK_PIPELINE_STAGE_NONE_KHR = VK_PIPELINE_STAGE_NONE;
enum VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT = VkPipelineStageFlagBits.TASK_SHADER_BIT_EXT;
enum VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT = VkPipelineStageFlagBits.MESH_SHADER_BIT_EXT;
enum VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_EXT = VkPipelineStageFlagBits.COMMAND_PREPROCESS_BIT_EXT;

alias VkPipelineStageFlags = VkFlags;

alias VkQueue = OpaqueHandle!("VkQueue");

struct VkSubmitInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
    const(void)* pNext;
    uint waitSemaphoreCount;
    const(VkSemaphore)* pWaitSemaphores;
    const(VkPipelineStageFlags)* pWaitDstStageMask;
    uint commandBufferCount;
    const(VkCommandBuffer)* pCommandBuffers;
    uint signalSemaphoreCount;
    const(VkSemaphore)* pSignalSemaphores;
}

version (VK_VERSION_1_0) {
    extern void vkGetDeviceQueue(
        VkDevice device,
        uint queueFamilyIndex,
        uint queueIndex,
        VkQueue* pQueue,
    );
    
    extern VkResult vkQueueSubmit(
        VkQueue queue,
        uint submitCount,
        const(VkSubmitInfo)* pSubmits,
        VkFence fence,
    );
    
    extern VkResult vkQueueWaitIdle(
        VkQueue queue,
    );
    
    extern VkResult vkDeviceWaitIdle(
        VkDevice device,
    );
}

// Memory commands

struct VkMappedMemoryRange {
    VkStructureType sType = VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE;
    const(void)* pNext;
    VkDeviceMemory memory;
    VkDeviceSize offset;
    VkDeviceSize size;
}

struct VkMemoryAllocateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;
    const(void)* pNext;
    VkDeviceSize allocationSize;
    uint memoryTypeIndex;
}

enum VkMemoryMapFlagBits : uint {
    PLACED_BIT_EXT = 1,
}

enum VK_MEMORY_MAP_PLACED_BIT_EXT = VkMemoryMapFlagBits.PLACED_BIT_EXT;

alias VkMemoryMapFlags = VkFlags;

version (VK_VERSION_1_0) {
    extern VkResult vkAllocateMemory(
        VkDevice device,
        const(VkMemoryAllocateInfo)* pAllocateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkDeviceMemory* pMemory,
    );
    
    extern void vkFreeMemory(
        VkDevice device,
        VkDeviceMemory memory,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern VkResult vkMapMemory(
        VkDevice device,
        VkDeviceMemory memory,
        VkDeviceSize offset,
        VkDeviceSize size,
        VkMemoryMapFlags flags,
        void** ppData,
    );
    
    extern void vkUnmapMemory(
        VkDevice device,
        VkDeviceMemory memory,
    );
    
    extern VkResult vkFlushMappedMemoryRanges(
        VkDevice device,
        uint memoryRangeCount,
        const(VkMappedMemoryRange)* pMemoryRanges,
    );
    
    extern VkResult vkInvalidateMappedMemoryRanges(
        VkDevice device,
        uint memoryRangeCount,
        const(VkMappedMemoryRange)* pMemoryRanges,
    );
    
    extern void vkGetDeviceMemoryCommitment(
        VkDevice device,
        VkDeviceMemory memory,
        VkDeviceSize* pCommittedMemoryInBytes,
    );
}

// Memory management API commands

alias VkDeviceMemory = OpaqueHandle!("VkDeviceMemory");

struct VkMemoryRequirements {
    VkDeviceSize size;
    VkDeviceSize alignment;
    uint memoryTypeBits;
}

version (VK_VERSION_1_0) {
    extern VkResult vkBindBufferMemory(
        VkDevice device,
        VkBuffer buffer,
        VkDeviceMemory memory,
        VkDeviceSize memoryOffset,
    );
    
    extern VkResult vkBindImageMemory(
        VkDevice device,
        VkImage image,
        VkDeviceMemory memory,
        VkDeviceSize memoryOffset,
    );
    
    extern void vkGetBufferMemoryRequirements(
        VkDevice device,
        VkBuffer buffer,
        VkMemoryRequirements* pMemoryRequirements,
    );
    
    extern void vkGetImageMemoryRequirements(
        VkDevice device,
        VkImage image,
        VkMemoryRequirements* pMemoryRequirements,
    );
}

// Sparse resource memory management API commands

struct VkBindSparseInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_BIND_SPARSE_INFO;
    const(void)* pNext;
    uint waitSemaphoreCount;
    const(VkSemaphore)* pWaitSemaphores;
    uint bufferBindCount;
    const(VkSparseBufferMemoryBindInfo)* pBufferBinds;
    uint imageOpaqueBindCount;
    const(VkSparseImageOpaqueMemoryBindInfo)* pImageOpaqueBinds;
    uint imageBindCount;
    const(VkSparseImageMemoryBindInfo)* pImageBinds;
    uint signalSemaphoreCount;
    const(VkSemaphore)* pSignalSemaphores;
}

enum VkImageAspectFlagBits : uint {
    COLOR_BIT = 1,
    DEPTH_BIT = 2,
    STENCIL_BIT = 4,
    METADATA_BIT = 8,
    PLANE_0_BIT = 16,
    PLANE_1_BIT = 32,
    PLANE_2_BIT = 64,
    NONE = 0,
    PLANE_0_BIT_KHR = PLANE_0_BIT,
    PLANE_1_BIT_KHR = PLANE_1_BIT,
    PLANE_2_BIT_KHR = PLANE_2_BIT,
    MEMORY_PLANE_0_BIT_EXT = 128,
    MEMORY_PLANE_1_BIT_EXT = 256,
    MEMORY_PLANE_2_BIT_EXT = 512,
    MEMORY_PLANE_3_BIT_EXT = 1024,
    NONE_KHR = NONE,
}

enum VK_IMAGE_ASPECT_COLOR_BIT = VkImageAspectFlagBits.COLOR_BIT;
enum VK_IMAGE_ASPECT_DEPTH_BIT = VkImageAspectFlagBits.DEPTH_BIT;
enum VK_IMAGE_ASPECT_STENCIL_BIT = VkImageAspectFlagBits.STENCIL_BIT;
enum VK_IMAGE_ASPECT_METADATA_BIT = VkImageAspectFlagBits.METADATA_BIT;
enum VK_IMAGE_ASPECT_PLANE_0_BIT = VkImageAspectFlagBits.PLANE_0_BIT;
enum VK_IMAGE_ASPECT_PLANE_1_BIT = VkImageAspectFlagBits.PLANE_1_BIT;
enum VK_IMAGE_ASPECT_PLANE_2_BIT = VkImageAspectFlagBits.PLANE_2_BIT;
enum VK_IMAGE_ASPECT_NONE = VkImageAspectFlagBits.NONE;
enum VK_IMAGE_ASPECT_PLANE_0_BIT_KHR = VK_IMAGE_ASPECT_PLANE_0_BIT;
enum VK_IMAGE_ASPECT_PLANE_1_BIT_KHR = VK_IMAGE_ASPECT_PLANE_1_BIT;
enum VK_IMAGE_ASPECT_PLANE_2_BIT_KHR = VK_IMAGE_ASPECT_PLANE_2_BIT;
enum VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT = VkImageAspectFlagBits.MEMORY_PLANE_0_BIT_EXT;
enum VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT = VkImageAspectFlagBits.MEMORY_PLANE_1_BIT_EXT;
enum VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT = VkImageAspectFlagBits.MEMORY_PLANE_2_BIT_EXT;
enum VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT = VkImageAspectFlagBits.MEMORY_PLANE_3_BIT_EXT;
enum VK_IMAGE_ASPECT_NONE_KHR = VK_IMAGE_ASPECT_NONE;

alias VkImageAspectFlags = VkFlags;

struct VkImageSubresource {
    VkFlags aspectMask;
    uint mipLevel;
    uint arrayLayer;
}

struct VkSparseBufferMemoryBindInfo {
    VkBuffer buffer;
    uint bindCount;
    const(VkSparseMemoryBind)* pBinds;
}

enum VkSparseImageFormatFlagBits : uint {
    SINGLE_MIPTAIL_BIT = 1,
    ALIGNED_MIP_SIZE_BIT = 2,
    NONSTANDARD_BLOCK_SIZE_BIT = 4,
}

enum VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT = VkSparseImageFormatFlagBits.SINGLE_MIPTAIL_BIT;
enum VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT = VkSparseImageFormatFlagBits.ALIGNED_MIP_SIZE_BIT;
enum VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT = VkSparseImageFormatFlagBits.NONSTANDARD_BLOCK_SIZE_BIT;

alias VkSparseImageFormatFlags = VkFlags;

struct VkSparseImageFormatProperties {
    VkFlags aspectMask;
    VkExtent3D imageGranularity;
    VkFlags flags;
}

struct VkSparseImageMemoryBind {
    VkImageSubresource subresource;
    VkOffset3D offset;
    VkExtent3D extent;
    VkDeviceMemory memory;
    VkDeviceSize memoryOffset;
    VkFlags flags;
}

struct VkSparseImageMemoryBindInfo {
    VkImage image;
    uint bindCount;
    const(VkSparseImageMemoryBind)* pBinds;
}

struct VkSparseImageMemoryRequirements {
    VkSparseImageFormatProperties formatProperties;
    uint imageMipTailFirstLod;
    VkDeviceSize imageMipTailSize;
    VkDeviceSize imageMipTailOffset;
    VkDeviceSize imageMipTailStride;
}

struct VkSparseImageOpaqueMemoryBindInfo {
    VkImage image;
    uint bindCount;
    const(VkSparseMemoryBind)* pBinds;
}

struct VkSparseMemoryBind {
    VkDeviceSize resourceOffset;
    VkDeviceSize size;
    VkDeviceMemory memory;
    VkDeviceSize memoryOffset;
    VkFlags flags;
}

enum VkSparseMemoryBindFlagBits : uint {
    METADATA_BIT = 1,
}

enum VK_SPARSE_MEMORY_BIND_METADATA_BIT = VkSparseMemoryBindFlagBits.METADATA_BIT;

alias VkSparseMemoryBindFlags = VkFlags;

version (VK_VERSION_1_0) {
    extern void vkGetImageSparseMemoryRequirements(
        VkDevice device,
        VkImage image,
        uint* pSparseMemoryRequirementCount,
        VkSparseImageMemoryRequirements* pSparseMemoryRequirements,
    );
    
    extern void vkGetPhysicalDeviceSparseImageFormatProperties(
        VkPhysicalDevice physicalDevice,
        VkFormat format,
        VkImageType type,
        VkSampleCountFlagBits samples,
        VkImageUsageFlags usage,
        VkImageTiling tiling,
        uint* pPropertyCount,
        VkSparseImageFormatProperties* pProperties,
    );
    
    extern VkResult vkQueueBindSparse(
        VkQueue queue,
        uint bindInfoCount,
        const(VkBindSparseInfo)* pBindInfo,
        VkFence fence,
    );
}

// Fence commands

alias VkFence = OpaqueHandle!("VkFence");

enum VkFenceCreateFlagBits : uint {
    SIGNALED_BIT = 1,
}

enum VK_FENCE_CREATE_SIGNALED_BIT = VkFenceCreateFlagBits.SIGNALED_BIT;

alias VkFenceCreateFlags = VkFlags;

struct VkFenceCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
}

version (VK_VERSION_1_0) {
    extern VkResult vkCreateFence(
        VkDevice device,
        const(VkFenceCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkFence* pFence,
    );
    
    extern void vkDestroyFence(
        VkDevice device,
        VkFence fence,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern VkResult vkResetFences(
        VkDevice device,
        uint fenceCount,
        const(VkFence)* pFences,
    );
    
    extern VkResult vkGetFenceStatus(
        VkDevice device,
        VkFence fence,
    );
    
    extern VkResult vkWaitForFences(
        VkDevice device,
        uint fenceCount,
        const(VkFence)* pFences,
        VkBool32 waitAll,
        ulong timeout,
    );
}

// Queue semaphore commands

alias VkSemaphore = OpaqueHandle!("VkSemaphore");

alias VkSemaphoreCreateFlags = VkFlags;

struct VkSemaphoreCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
}

version (VK_VERSION_1_0) {
    extern VkResult vkCreateSemaphore(
        VkDevice device,
        const(VkSemaphoreCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkSemaphore* pSemaphore,
    );
    
    extern void vkDestroySemaphore(
        VkDevice device,
        VkSemaphore semaphore,
        const(VkAllocationCallbacks)* pAllocator,
    );
}

// Event commands

alias VkEvent = OpaqueHandle!("VkEvent");

alias VkEventCreateFlags = VkFlags;

enum VkEventCreateFlagBits : uint {
    DEVICE_ONLY_BIT = 1,
    DEVICE_ONLY_BIT_KHR = DEVICE_ONLY_BIT,
}

enum VK_EVENT_CREATE_DEVICE_ONLY_BIT = VkEventCreateFlagBits.DEVICE_ONLY_BIT;
enum VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR = VK_EVENT_CREATE_DEVICE_ONLY_BIT;

struct VkEventCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_EVENT_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
}

version (VK_VERSION_1_0) {
    extern VkResult vkCreateEvent(
        VkDevice device,
        const(VkEventCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkEvent* pEvent,
    );
    
    extern void vkDestroyEvent(
        VkDevice device,
        VkEvent event,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern VkResult vkGetEventStatus(
        VkDevice device,
        VkEvent event,
    );
    
    extern VkResult vkSetEvent(
        VkDevice device,
        VkEvent event,
    );
    
    extern VkResult vkResetEvent(
        VkDevice device,
        VkEvent event,
    );
}

// Query commands

enum VkQueryPipelineStatisticFlagBits : uint {
    INPUT_ASSEMBLY_VERTICES_BIT = 1,
    INPUT_ASSEMBLY_PRIMITIVES_BIT = 2,
    VERTEX_SHADER_INVOCATIONS_BIT = 4,
    GEOMETRY_SHADER_INVOCATIONS_BIT = 8,
    GEOMETRY_SHADER_PRIMITIVES_BIT = 16,
    CLIPPING_INVOCATIONS_BIT = 32,
    CLIPPING_PRIMITIVES_BIT = 64,
    FRAGMENT_SHADER_INVOCATIONS_BIT = 128,
    TESSELLATION_CONTROL_SHADER_PATCHES_BIT = 256,
    TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT = 512,
    COMPUTE_SHADER_INVOCATIONS_BIT = 1024,
    TASK_SHADER_INVOCATIONS_BIT_EXT = 2048,
    MESH_SHADER_INVOCATIONS_BIT_EXT = 4096,
    CLUSTER_CULLING_SHADER_INVOCATIONS_BIT_HUAWEI = 8192,
}

enum VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT = VkQueryPipelineStatisticFlagBits.INPUT_ASSEMBLY_VERTICES_BIT;
enum VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT = VkQueryPipelineStatisticFlagBits.INPUT_ASSEMBLY_PRIMITIVES_BIT;
enum VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT = VkQueryPipelineStatisticFlagBits.VERTEX_SHADER_INVOCATIONS_BIT;
enum VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT = VkQueryPipelineStatisticFlagBits.GEOMETRY_SHADER_INVOCATIONS_BIT;
enum VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT = VkQueryPipelineStatisticFlagBits.GEOMETRY_SHADER_PRIMITIVES_BIT;
enum VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT = VkQueryPipelineStatisticFlagBits.CLIPPING_INVOCATIONS_BIT;
enum VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT = VkQueryPipelineStatisticFlagBits.CLIPPING_PRIMITIVES_BIT;
enum VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT = VkQueryPipelineStatisticFlagBits.FRAGMENT_SHADER_INVOCATIONS_BIT;
enum VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT = VkQueryPipelineStatisticFlagBits.TESSELLATION_CONTROL_SHADER_PATCHES_BIT;
enum VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT = VkQueryPipelineStatisticFlagBits.TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT;
enum VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT = VkQueryPipelineStatisticFlagBits.COMPUTE_SHADER_INVOCATIONS_BIT;
enum VK_QUERY_PIPELINE_STATISTIC_TASK_SHADER_INVOCATIONS_BIT_EXT = VkQueryPipelineStatisticFlagBits.TASK_SHADER_INVOCATIONS_BIT_EXT;
enum VK_QUERY_PIPELINE_STATISTIC_MESH_SHADER_INVOCATIONS_BIT_EXT = VkQueryPipelineStatisticFlagBits.MESH_SHADER_INVOCATIONS_BIT_EXT;
enum VK_QUERY_PIPELINE_STATISTIC_CLUSTER_CULLING_SHADER_INVOCATIONS_BIT_HUAWEI = VkQueryPipelineStatisticFlagBits.CLUSTER_CULLING_SHADER_INVOCATIONS_BIT_HUAWEI;

alias VkQueryPipelineStatisticFlags = VkFlags;

alias VkQueryPool = OpaqueHandle!("VkQueryPool");

enum VkQueryPoolCreateFlagBits : uint {
    RESET_BIT_KHR = 1,
}

enum VK_QUERY_POOL_CREATE_RESET_BIT_KHR = VkQueryPoolCreateFlagBits.RESET_BIT_KHR;

alias VkQueryPoolCreateFlags = VkFlags;

struct VkQueryPoolCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkQueryType queryType;
    uint queryCount;
    VkFlags pipelineStatistics;
}

enum VkQueryResultFlagBits : uint {
    VK_QUERY_RESULT_64_BIT = 1,
    WAIT_BIT = 2,
    WITH_AVAILABILITY_BIT = 4,
    PARTIAL_BIT = 8,
    WITH_STATUS_BIT_KHR = 16,
}

enum VK_QUERY_RESULT_64_BIT = VkQueryResultFlagBits.VK_QUERY_RESULT_64_BIT;
enum VK_QUERY_RESULT_WAIT_BIT = VkQueryResultFlagBits.WAIT_BIT;
enum VK_QUERY_RESULT_WITH_AVAILABILITY_BIT = VkQueryResultFlagBits.WITH_AVAILABILITY_BIT;
enum VK_QUERY_RESULT_PARTIAL_BIT = VkQueryResultFlagBits.PARTIAL_BIT;
enum VK_QUERY_RESULT_WITH_STATUS_BIT_KHR = VkQueryResultFlagBits.WITH_STATUS_BIT_KHR;

alias VkQueryResultFlags = VkFlags;

enum VkQueryType {
    OCCLUSION = 0,
    PIPELINE_STATISTICS = 1,
    TIMESTAMP = 2,
    RESULT_STATUS_ONLY_KHR = 1000023000,
    TRANSFORM_FEEDBACK_STREAM_EXT = 1000028004,
    PERFORMANCE_QUERY_KHR = 1000116000,
    ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR = 1000150000,
    ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR = 1000150001,
    ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV = 1000165000,
    PERFORMANCE_QUERY_INTEL = 1000210000,
    VIDEO_ENCODE_FEEDBACK_KHR = 1000299000,
    MESH_PRIMITIVES_GENERATED_EXT = 1000328000,
    PRIMITIVES_GENERATED_EXT = 1000382000,
    ACCELERATION_STRUCTURE_SERIALIZATION_BOTTOM_LEVEL_POINTERS_KHR = 1000386000,
    ACCELERATION_STRUCTURE_SIZE_KHR = 1000386001,
    MICROMAP_SERIALIZATION_SIZE_EXT = 1000396000,
    MICROMAP_COMPACTED_SIZE_EXT = 1000396001,
}

enum VK_QUERY_TYPE_OCCLUSION = VkQueryType.OCCLUSION;
enum VK_QUERY_TYPE_PIPELINE_STATISTICS = VkQueryType.PIPELINE_STATISTICS;
enum VK_QUERY_TYPE_TIMESTAMP = VkQueryType.TIMESTAMP;
enum VK_QUERY_TYPE_RESULT_STATUS_ONLY_KHR = VkQueryType.RESULT_STATUS_ONLY_KHR;
enum VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT = VkQueryType.TRANSFORM_FEEDBACK_STREAM_EXT;
enum VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR = VkQueryType.PERFORMANCE_QUERY_KHR;
enum VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR = VkQueryType.ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR;
enum VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR = VkQueryType.ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR;
enum VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV = VkQueryType.ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV;
enum VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL = VkQueryType.PERFORMANCE_QUERY_INTEL;
enum VK_QUERY_TYPE_VIDEO_ENCODE_FEEDBACK_KHR = VkQueryType.VIDEO_ENCODE_FEEDBACK_KHR;
enum VK_QUERY_TYPE_MESH_PRIMITIVES_GENERATED_EXT = VkQueryType.MESH_PRIMITIVES_GENERATED_EXT;
enum VK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT = VkQueryType.PRIMITIVES_GENERATED_EXT;
enum VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_BOTTOM_LEVEL_POINTERS_KHR = VkQueryType.ACCELERATION_STRUCTURE_SERIALIZATION_BOTTOM_LEVEL_POINTERS_KHR;
enum VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SIZE_KHR = VkQueryType.ACCELERATION_STRUCTURE_SIZE_KHR;
enum VK_QUERY_TYPE_MICROMAP_SERIALIZATION_SIZE_EXT = VkQueryType.MICROMAP_SERIALIZATION_SIZE_EXT;
enum VK_QUERY_TYPE_MICROMAP_COMPACTED_SIZE_EXT = VkQueryType.MICROMAP_COMPACTED_SIZE_EXT;

version (VK_VERSION_1_0) {
    extern VkResult vkCreateQueryPool(
        VkDevice device,
        const(VkQueryPoolCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkQueryPool* pQueryPool,
    );
    
    extern void vkDestroyQueryPool(
        VkDevice device,
        VkQueryPool queryPool,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern VkResult vkGetQueryPoolResults(
        VkDevice device,
        VkQueryPool queryPool,
        uint firstQuery,
        uint queryCount,
        size_t dataSize,
        void* pData,
        VkDeviceSize stride,
        VkQueryResultFlags flags,
    );
}

// Buffer commands

alias VkBuffer = OpaqueHandle!("VkBuffer");

enum VkBufferCreateFlagBits : uint {
    SPARSE_BINDING_BIT = 1,
    SPARSE_RESIDENCY_BIT = 2,
    SPARSE_ALIASED_BIT = 4,
    PROTECTED_BIT = 8,
    DEVICE_ADDRESS_CAPTURE_REPLAY_BIT = 16,
    RESERVED_7_BIT_IMG = 128,
    DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT = DEVICE_ADDRESS_CAPTURE_REPLAY_BIT,
    DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR = DEVICE_ADDRESS_CAPTURE_REPLAY_BIT,
    DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = 32,
    VIDEO_PROFILE_INDEPENDENT_BIT_KHR = 64,
}

enum VK_BUFFER_CREATE_SPARSE_BINDING_BIT = VkBufferCreateFlagBits.SPARSE_BINDING_BIT;
enum VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT = VkBufferCreateFlagBits.SPARSE_RESIDENCY_BIT;
enum VK_BUFFER_CREATE_SPARSE_ALIASED_BIT = VkBufferCreateFlagBits.SPARSE_ALIASED_BIT;
enum VK_BUFFER_CREATE_PROTECTED_BIT = VkBufferCreateFlagBits.PROTECTED_BIT;
enum VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT = VkBufferCreateFlagBits.DEVICE_ADDRESS_CAPTURE_REPLAY_BIT;
enum VK_BUFFER_CREATE_RESERVED_7_BIT_IMG = VkBufferCreateFlagBits.RESERVED_7_BIT_IMG;
enum VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT = VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT;
enum VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR = VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT;
enum VK_BUFFER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = VkBufferCreateFlagBits.DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT;
enum VK_BUFFER_CREATE_VIDEO_PROFILE_INDEPENDENT_BIT_KHR = VkBufferCreateFlagBits.VIDEO_PROFILE_INDEPENDENT_BIT_KHR;

alias VkBufferCreateFlags = VkFlags;

struct VkBufferCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkDeviceSize size;
    VkFlags usage;
    VkSharingMode sharingMode;
    uint queueFamilyIndexCount;
    const(uint)* pQueueFamilyIndices;
}

enum VkBufferUsageFlagBits : uint {
    TRANSFER_SRC_BIT = 1,
    TRANSFER_DST_BIT = 2,
    UNIFORM_TEXEL_BUFFER_BIT = 4,
    STORAGE_TEXEL_BUFFER_BIT = 8,
    UNIFORM_BUFFER_BIT = 16,
    STORAGE_BUFFER_BIT = 32,
    INDEX_BUFFER_BIT = 64,
    VERTEX_BUFFER_BIT = 128,
    INDIRECT_BUFFER_BIT = 256,
    SHADER_DEVICE_ADDRESS_BIT = 131072,
    VIDEO_DECODE_SRC_BIT_KHR = 8192,
    VIDEO_DECODE_DST_BIT_KHR = 16384,
    TRANSFORM_FEEDBACK_BUFFER_BIT_EXT = 2048,
    TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT = 4096,
    CONDITIONAL_RENDERING_BIT_EXT = 512,
    EXECUTION_GRAPH_SCRATCH_BIT_AMDX = 33554432,
    RESERVED_28_BIT_KHR = 268435456,
    ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR = 524288,
    ACCELERATION_STRUCTURE_STORAGE_BIT_KHR = 1048576,
    SHADER_BINDING_TABLE_BIT_KHR = 1024,
    RAY_TRACING_BIT_NV = SHADER_BINDING_TABLE_BIT_KHR,
    SHADER_DEVICE_ADDRESS_BIT_EXT = SHADER_DEVICE_ADDRESS_BIT,
    SHADER_DEVICE_ADDRESS_BIT_KHR = SHADER_DEVICE_ADDRESS_BIT,
    VIDEO_ENCODE_DST_BIT_KHR = 32768,
    VIDEO_ENCODE_SRC_BIT_KHR = 65536,
    SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT = 2097152,
    RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT = 4194304,
    PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT = 67108864,
    MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT = 8388608,
    MICROMAP_STORAGE_BIT_EXT = 16777216,
    TILE_MEMORY_BIT_QCOM = 134217728,
}

enum VK_BUFFER_USAGE_TRANSFER_SRC_BIT = VkBufferUsageFlagBits.TRANSFER_SRC_BIT;
enum VK_BUFFER_USAGE_TRANSFER_DST_BIT = VkBufferUsageFlagBits.TRANSFER_DST_BIT;
enum VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT = VkBufferUsageFlagBits.UNIFORM_TEXEL_BUFFER_BIT;
enum VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT = VkBufferUsageFlagBits.STORAGE_TEXEL_BUFFER_BIT;
enum VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT = VkBufferUsageFlagBits.UNIFORM_BUFFER_BIT;
enum VK_BUFFER_USAGE_STORAGE_BUFFER_BIT = VkBufferUsageFlagBits.STORAGE_BUFFER_BIT;
enum VK_BUFFER_USAGE_INDEX_BUFFER_BIT = VkBufferUsageFlagBits.INDEX_BUFFER_BIT;
enum VK_BUFFER_USAGE_VERTEX_BUFFER_BIT = VkBufferUsageFlagBits.VERTEX_BUFFER_BIT;
enum VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT = VkBufferUsageFlagBits.INDIRECT_BUFFER_BIT;
enum VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT = VkBufferUsageFlagBits.SHADER_DEVICE_ADDRESS_BIT;
enum VK_BUFFER_USAGE_VIDEO_DECODE_SRC_BIT_KHR = VkBufferUsageFlagBits.VIDEO_DECODE_SRC_BIT_KHR;
enum VK_BUFFER_USAGE_VIDEO_DECODE_DST_BIT_KHR = VkBufferUsageFlagBits.VIDEO_DECODE_DST_BIT_KHR;
enum VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT = VkBufferUsageFlagBits.TRANSFORM_FEEDBACK_BUFFER_BIT_EXT;
enum VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT = VkBufferUsageFlagBits.TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT;
enum VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT = VkBufferUsageFlagBits.CONDITIONAL_RENDERING_BIT_EXT;
enum VK_BUFFER_USAGE_EXECUTION_GRAPH_SCRATCH_BIT_AMDX = VkBufferUsageFlagBits.EXECUTION_GRAPH_SCRATCH_BIT_AMDX;
enum VK_BUFFER_USAGE_RESERVED_28_BIT_KHR = VkBufferUsageFlagBits.RESERVED_28_BIT_KHR;
enum VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR = VkBufferUsageFlagBits.ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR;
enum VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR = VkBufferUsageFlagBits.ACCELERATION_STRUCTURE_STORAGE_BIT_KHR;
enum VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR = VkBufferUsageFlagBits.SHADER_BINDING_TABLE_BIT_KHR;
enum VK_BUFFER_USAGE_RAY_TRACING_BIT_NV = VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR;
enum VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT = VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT;
enum VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR = VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT;
enum VK_BUFFER_USAGE_VIDEO_ENCODE_DST_BIT_KHR = VkBufferUsageFlagBits.VIDEO_ENCODE_DST_BIT_KHR;
enum VK_BUFFER_USAGE_VIDEO_ENCODE_SRC_BIT_KHR = VkBufferUsageFlagBits.VIDEO_ENCODE_SRC_BIT_KHR;
enum VK_BUFFER_USAGE_SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT = VkBufferUsageFlagBits.SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT;
enum VK_BUFFER_USAGE_RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT = VkBufferUsageFlagBits.RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT;
enum VK_BUFFER_USAGE_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT = VkBufferUsageFlagBits.PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT;
enum VK_BUFFER_USAGE_MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT = VkBufferUsageFlagBits.MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT;
enum VK_BUFFER_USAGE_MICROMAP_STORAGE_BIT_EXT = VkBufferUsageFlagBits.MICROMAP_STORAGE_BIT_EXT;
enum VK_BUFFER_USAGE_TILE_MEMORY_BIT_QCOM = VkBufferUsageFlagBits.TILE_MEMORY_BIT_QCOM;

alias VkBufferUsageFlags = VkFlags;

enum VkSharingMode {
    EXCLUSIVE = 0,
    CONCURRENT = 1,
}

enum VK_SHARING_MODE_EXCLUSIVE = VkSharingMode.EXCLUSIVE;
enum VK_SHARING_MODE_CONCURRENT = VkSharingMode.CONCURRENT;

version (VK_VERSION_1_0) {
    extern VkResult vkCreateBuffer(
        VkDevice device,
        const(VkBufferCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkBuffer* pBuffer,
    );
    
    extern void vkDestroyBuffer(
        VkDevice device,
        VkBuffer buffer,
        const(VkAllocationCallbacks)* pAllocator,
    );
}

// Buffer view commands

alias VkBufferView = OpaqueHandle!("VkBufferView");

alias VkBufferViewCreateFlags = VkFlags;

struct VkBufferViewCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkBuffer buffer;
    VkFormat format;
    VkDeviceSize offset;
    VkDeviceSize range;
}

version (VK_VERSION_1_0) {
    extern VkResult vkCreateBufferView(
        VkDevice device,
        const(VkBufferViewCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkBufferView* pView,
    );
    
    extern void vkDestroyBufferView(
        VkDevice device,
        VkBufferView bufferView,
        const(VkAllocationCallbacks)* pAllocator,
    );
}

// Image commands

alias VkImage = OpaqueHandle!("VkImage");

struct VkImageCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkImageType imageType;
    VkFormat format;
    VkExtent3D extent;
    uint mipLevels;
    uint arrayLayers;
    VkSampleCountFlagBits samples;
    VkImageTiling tiling;
    VkFlags usage;
    VkSharingMode sharingMode;
    uint queueFamilyIndexCount;
    const(uint)* pQueueFamilyIndices;
    VkImageLayout initialLayout;
}

enum VkImageLayout {
    UNDEFINED = 0,
    GENERAL = 1,
    COLOR_ATTACHMENT_OPTIMAL = 2,
    DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 3,
    DEPTH_STENCIL_READ_ONLY_OPTIMAL = 4,
    SHADER_READ_ONLY_OPTIMAL = 5,
    TRANSFER_SRC_OPTIMAL = 6,
    TRANSFER_DST_OPTIMAL = 7,
    PREINITIALIZED = 8,
    DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL = 1000117000,
    DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL = 1000117001,
    DEPTH_ATTACHMENT_OPTIMAL = 1000241000,
    DEPTH_READ_ONLY_OPTIMAL = 1000241001,
    STENCIL_ATTACHMENT_OPTIMAL = 1000241002,
    STENCIL_READ_ONLY_OPTIMAL = 1000241003,
    READ_ONLY_OPTIMAL = 1000314000,
    ATTACHMENT_OPTIMAL = 1000314001,
    RENDERING_LOCAL_READ = 1000232000,
    PRESENT_SRC_KHR = 1000001002,
    VIDEO_DECODE_DST_KHR = 1000024000,
    VIDEO_DECODE_SRC_KHR = 1000024001,
    VIDEO_DECODE_DPB_KHR = 1000024002,
    SHARED_PRESENT_KHR = 1000111000,
    DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR = DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL,
    DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR = DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL,
    SHADING_RATE_OPTIMAL_NV = FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR,
    FRAGMENT_DENSITY_MAP_OPTIMAL_EXT = 1000218000,
    FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR = 1000164003,
    RENDERING_LOCAL_READ_KHR = RENDERING_LOCAL_READ,
    DEPTH_ATTACHMENT_OPTIMAL_KHR = DEPTH_ATTACHMENT_OPTIMAL,
    DEPTH_READ_ONLY_OPTIMAL_KHR = DEPTH_READ_ONLY_OPTIMAL,
    STENCIL_ATTACHMENT_OPTIMAL_KHR = STENCIL_ATTACHMENT_OPTIMAL,
    STENCIL_READ_ONLY_OPTIMAL_KHR = STENCIL_READ_ONLY_OPTIMAL,
    VIDEO_ENCODE_DST_KHR = 1000299000,
    VIDEO_ENCODE_SRC_KHR = 1000299001,
    VIDEO_ENCODE_DPB_KHR = 1000299002,
    READ_ONLY_OPTIMAL_KHR = READ_ONLY_OPTIMAL,
    ATTACHMENT_OPTIMAL_KHR = ATTACHMENT_OPTIMAL,
    ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT = 1000339000,
    TENSOR_ALIASING_ARM = 1000460000,
    VIDEO_ENCODE_QUANTIZATION_MAP_KHR = 1000553000,
    ZERO_INITIALIZED_EXT = 1000620000,
}

enum VK_IMAGE_LAYOUT_UNDEFINED = VkImageLayout.UNDEFINED;
enum VK_IMAGE_LAYOUT_GENERAL = VkImageLayout.GENERAL;
enum VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = VkImageLayout.COLOR_ATTACHMENT_OPTIMAL;
enum VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = VkImageLayout.DEPTH_STENCIL_ATTACHMENT_OPTIMAL;
enum VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = VkImageLayout.DEPTH_STENCIL_READ_ONLY_OPTIMAL;
enum VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = VkImageLayout.SHADER_READ_ONLY_OPTIMAL;
enum VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL = VkImageLayout.TRANSFER_SRC_OPTIMAL;
enum VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL = VkImageLayout.TRANSFER_DST_OPTIMAL;
enum VK_IMAGE_LAYOUT_PREINITIALIZED = VkImageLayout.PREINITIALIZED;
enum VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL = VkImageLayout.DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL;
enum VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL = VkImageLayout.DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL;
enum VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL = VkImageLayout.DEPTH_ATTACHMENT_OPTIMAL;
enum VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL = VkImageLayout.DEPTH_READ_ONLY_OPTIMAL;
enum VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL = VkImageLayout.STENCIL_ATTACHMENT_OPTIMAL;
enum VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL = VkImageLayout.STENCIL_READ_ONLY_OPTIMAL;
enum VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL = VkImageLayout.READ_ONLY_OPTIMAL;
enum VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL = VkImageLayout.ATTACHMENT_OPTIMAL;
enum VK_IMAGE_LAYOUT_RENDERING_LOCAL_READ = VkImageLayout.RENDERING_LOCAL_READ;
enum VK_IMAGE_LAYOUT_PRESENT_SRC_KHR = VkImageLayout.PRESENT_SRC_KHR;
enum VK_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR = VkImageLayout.VIDEO_DECODE_DST_KHR;
enum VK_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR = VkImageLayout.VIDEO_DECODE_SRC_KHR;
enum VK_IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR = VkImageLayout.VIDEO_DECODE_DPB_KHR;
enum VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR = VkImageLayout.SHARED_PRESENT_KHR;
enum VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR = VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL;
enum VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL;
enum VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV = VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR;
enum VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT = VkImageLayout.FRAGMENT_DENSITY_MAP_OPTIMAL_EXT;
enum VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR = VkImageLayout.FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR;
enum VK_IMAGE_LAYOUT_RENDERING_LOCAL_READ_KHR = VK_IMAGE_LAYOUT_RENDERING_LOCAL_READ;
enum VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL;
enum VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR = VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL;
enum VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR = VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL;
enum VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR = VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL;
enum VK_IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR = VkImageLayout.VIDEO_ENCODE_DST_KHR;
enum VK_IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR = VkImageLayout.VIDEO_ENCODE_SRC_KHR;
enum VK_IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR = VkImageLayout.VIDEO_ENCODE_DPB_KHR;
enum VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR = VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL;
enum VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR = VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL;
enum VK_IMAGE_LAYOUT_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT = VkImageLayout.ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT;
enum VK_IMAGE_LAYOUT_TENSOR_ALIASING_ARM = VkImageLayout.TENSOR_ALIASING_ARM;
enum VK_IMAGE_LAYOUT_VIDEO_ENCODE_QUANTIZATION_MAP_KHR = VkImageLayout.VIDEO_ENCODE_QUANTIZATION_MAP_KHR;
enum VK_IMAGE_LAYOUT_ZERO_INITIALIZED_EXT = VkImageLayout.ZERO_INITIALIZED_EXT;

struct VkSubresourceLayout {
    VkDeviceSize offset;
    VkDeviceSize size;
    VkDeviceSize rowPitch;
    VkDeviceSize arrayPitch;
    VkDeviceSize depthPitch;
}

version (VK_VERSION_1_0) {
    extern VkResult vkCreateImage(
        VkDevice device,
        const(VkImageCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkImage* pImage,
    );
    
    extern void vkDestroyImage(
        VkDevice device,
        VkImage image,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern void vkGetImageSubresourceLayout(
        VkDevice device,
        VkImage image,
        const(VkImageSubresource)* pSubresource,
        VkSubresourceLayout* pLayout,
    );
}

// Image view commands

struct VkComponentMapping {
    VkComponentSwizzle r;
    VkComponentSwizzle g;
    VkComponentSwizzle b;
    VkComponentSwizzle a;
}

enum VkComponentSwizzle {
    IDENTITY = 0,
    ZERO = 1,
    ONE = 2,
    R = 3,
    G = 4,
    B = 5,
    A = 6,
}

enum VK_COMPONENT_SWIZZLE_IDENTITY = VkComponentSwizzle.IDENTITY;
enum VK_COMPONENT_SWIZZLE_ZERO = VkComponentSwizzle.ZERO;
enum VK_COMPONENT_SWIZZLE_ONE = VkComponentSwizzle.ONE;
enum VK_COMPONENT_SWIZZLE_R = VkComponentSwizzle.R;
enum VK_COMPONENT_SWIZZLE_G = VkComponentSwizzle.G;
enum VK_COMPONENT_SWIZZLE_B = VkComponentSwizzle.B;
enum VK_COMPONENT_SWIZZLE_A = VkComponentSwizzle.A;

struct VkImageSubresourceRange {
    VkFlags aspectMask;
    uint baseMipLevel;
    uint levelCount;
    uint baseArrayLayer;
    uint layerCount;
}

alias VkImageView = OpaqueHandle!("VkImageView");

enum VkImageViewCreateFlagBits : uint {
    FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT = 1,
    DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = 4,
    FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT = 2,
}

enum VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT = VkImageViewCreateFlagBits.FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT;
enum VK_IMAGE_VIEW_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = VkImageViewCreateFlagBits.DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT;
enum VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT = VkImageViewCreateFlagBits.FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT;

alias VkImageViewCreateFlags = VkFlags;

struct VkImageViewCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkImage image;
    VkImageViewType viewType;
    VkFormat format;
    VkComponentMapping components;
    VkImageSubresourceRange subresourceRange;
}

enum VkImageViewType {
    VK_IMAGE_VIEW_TYPE_1D = 0,
    VK_IMAGE_VIEW_TYPE_2D = 1,
    VK_IMAGE_VIEW_TYPE_3D = 2,
    CUBE = 3,
    VK_IMAGE_VIEW_TYPE_1D_ARRAY = 4,
    VK_IMAGE_VIEW_TYPE_2D_ARRAY = 5,
    CUBE_ARRAY = 6,
}

enum VK_IMAGE_VIEW_TYPE_1D = VkImageViewType.VK_IMAGE_VIEW_TYPE_1D;
enum VK_IMAGE_VIEW_TYPE_2D = VkImageViewType.VK_IMAGE_VIEW_TYPE_2D;
enum VK_IMAGE_VIEW_TYPE_3D = VkImageViewType.VK_IMAGE_VIEW_TYPE_3D;
enum VK_IMAGE_VIEW_TYPE_CUBE = VkImageViewType.CUBE;
enum VK_IMAGE_VIEW_TYPE_1D_ARRAY = VkImageViewType.VK_IMAGE_VIEW_TYPE_1D_ARRAY;
enum VK_IMAGE_VIEW_TYPE_2D_ARRAY = VkImageViewType.VK_IMAGE_VIEW_TYPE_2D_ARRAY;
enum VK_IMAGE_VIEW_TYPE_CUBE_ARRAY = VkImageViewType.CUBE_ARRAY;

version (VK_VERSION_1_0) {
    extern VkResult vkCreateImageView(
        VkDevice device,
        const(VkImageViewCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkImageView* pView,
    );
    
    extern void vkDestroyImageView(
        VkDevice device,
        VkImageView imageView,
        const(VkAllocationCallbacks)* pAllocator,
    );
}

// Shader commands

alias VkShaderModule = OpaqueHandle!("VkShaderModule");

alias VkShaderModuleCreateFlags = VkFlags;

struct VkShaderModuleCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    size_t codeSize;
    const(uint)* pCode;
}

version (VK_VERSION_1_0) {
    extern VkResult vkCreateShaderModule(
        VkDevice device,
        const(VkShaderModuleCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkShaderModule* pShaderModule,
    );
    
    extern void vkDestroyShaderModule(
        VkDevice device,
        VkShaderModule shaderModule,
        const(VkAllocationCallbacks)* pAllocator,
    );
}

// Pipeline Cache commands

alias VkPipelineCache = OpaqueHandle!("VkPipelineCache");

alias VkPipelineCacheCreateFlags = VkFlags;

struct VkPipelineCacheCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    size_t initialDataSize;
    const(void)* pInitialData;
}

version (VK_VERSION_1_0) {
    extern VkResult vkCreatePipelineCache(
        VkDevice device,
        const(VkPipelineCacheCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkPipelineCache* pPipelineCache,
    );
    
    extern void vkDestroyPipelineCache(
        VkDevice device,
        VkPipelineCache pipelineCache,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern VkResult vkGetPipelineCacheData(
        VkDevice device,
        VkPipelineCache pipelineCache,
        size_t* pDataSize,
        void* pData,
    );
    
    extern VkResult vkMergePipelineCaches(
        VkDevice device,
        VkPipelineCache dstCache,
        uint srcCacheCount,
        const(VkPipelineCache)* pSrcCaches,
    );
}

// Pipeline commands

enum VkBlendFactor {
    ZERO = 0,
    ONE = 1,
    SRC_COLOR = 2,
    ONE_MINUS_SRC_COLOR = 3,
    DST_COLOR = 4,
    ONE_MINUS_DST_COLOR = 5,
    SRC_ALPHA = 6,
    ONE_MINUS_SRC_ALPHA = 7,
    DST_ALPHA = 8,
    ONE_MINUS_DST_ALPHA = 9,
    CONSTANT_COLOR = 10,
    ONE_MINUS_CONSTANT_COLOR = 11,
    CONSTANT_ALPHA = 12,
    ONE_MINUS_CONSTANT_ALPHA = 13,
    SRC_ALPHA_SATURATE = 14,
    SRC1_COLOR = 15,
    ONE_MINUS_SRC1_COLOR = 16,
    SRC1_ALPHA = 17,
    ONE_MINUS_SRC1_ALPHA = 18,
}

enum VK_BLEND_FACTOR_ZERO = VkBlendFactor.ZERO;
enum VK_BLEND_FACTOR_ONE = VkBlendFactor.ONE;
enum VK_BLEND_FACTOR_SRC_COLOR = VkBlendFactor.SRC_COLOR;
enum VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR = VkBlendFactor.ONE_MINUS_SRC_COLOR;
enum VK_BLEND_FACTOR_DST_COLOR = VkBlendFactor.DST_COLOR;
enum VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR = VkBlendFactor.ONE_MINUS_DST_COLOR;
enum VK_BLEND_FACTOR_SRC_ALPHA = VkBlendFactor.SRC_ALPHA;
enum VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA = VkBlendFactor.ONE_MINUS_SRC_ALPHA;
enum VK_BLEND_FACTOR_DST_ALPHA = VkBlendFactor.DST_ALPHA;
enum VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA = VkBlendFactor.ONE_MINUS_DST_ALPHA;
enum VK_BLEND_FACTOR_CONSTANT_COLOR = VkBlendFactor.CONSTANT_COLOR;
enum VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR = VkBlendFactor.ONE_MINUS_CONSTANT_COLOR;
enum VK_BLEND_FACTOR_CONSTANT_ALPHA = VkBlendFactor.CONSTANT_ALPHA;
enum VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA = VkBlendFactor.ONE_MINUS_CONSTANT_ALPHA;
enum VK_BLEND_FACTOR_SRC_ALPHA_SATURATE = VkBlendFactor.SRC_ALPHA_SATURATE;
enum VK_BLEND_FACTOR_SRC1_COLOR = VkBlendFactor.SRC1_COLOR;
enum VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR = VkBlendFactor.ONE_MINUS_SRC1_COLOR;
enum VK_BLEND_FACTOR_SRC1_ALPHA = VkBlendFactor.SRC1_ALPHA;
enum VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA = VkBlendFactor.ONE_MINUS_SRC1_ALPHA;

enum VkBlendOp {
    ADD = 0,
    SUBTRACT = 1,
    REVERSE_SUBTRACT = 2,
    MIN = 3,
    MAX = 4,
    ZERO_EXT = 1000148000,
    SRC_EXT = 1000148001,
    DST_EXT = 1000148002,
    SRC_OVER_EXT = 1000148003,
    DST_OVER_EXT = 1000148004,
    SRC_IN_EXT = 1000148005,
    DST_IN_EXT = 1000148006,
    SRC_OUT_EXT = 1000148007,
    DST_OUT_EXT = 1000148008,
    SRC_ATOP_EXT = 1000148009,
    DST_ATOP_EXT = 1000148010,
    XOR_EXT = 1000148011,
    MULTIPLY_EXT = 1000148012,
    SCREEN_EXT = 1000148013,
    OVERLAY_EXT = 1000148014,
    DARKEN_EXT = 1000148015,
    LIGHTEN_EXT = 1000148016,
    COLORDODGE_EXT = 1000148017,
    COLORBURN_EXT = 1000148018,
    HARDLIGHT_EXT = 1000148019,
    SOFTLIGHT_EXT = 1000148020,
    DIFFERENCE_EXT = 1000148021,
    EXCLUSION_EXT = 1000148022,
    INVERT_EXT = 1000148023,
    INVERT_RGB_EXT = 1000148024,
    LINEARDODGE_EXT = 1000148025,
    LINEARBURN_EXT = 1000148026,
    VIVIDLIGHT_EXT = 1000148027,
    LINEARLIGHT_EXT = 1000148028,
    PINLIGHT_EXT = 1000148029,
    HARDMIX_EXT = 1000148030,
    HSL_HUE_EXT = 1000148031,
    HSL_SATURATION_EXT = 1000148032,
    HSL_COLOR_EXT = 1000148033,
    HSL_LUMINOSITY_EXT = 1000148034,
    PLUS_EXT = 1000148035,
    PLUS_CLAMPED_EXT = 1000148036,
    PLUS_CLAMPED_ALPHA_EXT = 1000148037,
    PLUS_DARKER_EXT = 1000148038,
    MINUS_EXT = 1000148039,
    MINUS_CLAMPED_EXT = 1000148040,
    CONTRAST_EXT = 1000148041,
    INVERT_OVG_EXT = 1000148042,
    RED_EXT = 1000148043,
    GREEN_EXT = 1000148044,
    BLUE_EXT = 1000148045,
}

enum VK_BLEND_OP_ADD = VkBlendOp.ADD;
enum VK_BLEND_OP_SUBTRACT = VkBlendOp.SUBTRACT;
enum VK_BLEND_OP_REVERSE_SUBTRACT = VkBlendOp.REVERSE_SUBTRACT;
enum VK_BLEND_OP_MIN = VkBlendOp.MIN;
enum VK_BLEND_OP_MAX = VkBlendOp.MAX;
enum VK_BLEND_OP_ZERO_EXT = VkBlendOp.ZERO_EXT;
enum VK_BLEND_OP_SRC_EXT = VkBlendOp.SRC_EXT;
enum VK_BLEND_OP_DST_EXT = VkBlendOp.DST_EXT;
enum VK_BLEND_OP_SRC_OVER_EXT = VkBlendOp.SRC_OVER_EXT;
enum VK_BLEND_OP_DST_OVER_EXT = VkBlendOp.DST_OVER_EXT;
enum VK_BLEND_OP_SRC_IN_EXT = VkBlendOp.SRC_IN_EXT;
enum VK_BLEND_OP_DST_IN_EXT = VkBlendOp.DST_IN_EXT;
enum VK_BLEND_OP_SRC_OUT_EXT = VkBlendOp.SRC_OUT_EXT;
enum VK_BLEND_OP_DST_OUT_EXT = VkBlendOp.DST_OUT_EXT;
enum VK_BLEND_OP_SRC_ATOP_EXT = VkBlendOp.SRC_ATOP_EXT;
enum VK_BLEND_OP_DST_ATOP_EXT = VkBlendOp.DST_ATOP_EXT;
enum VK_BLEND_OP_XOR_EXT = VkBlendOp.XOR_EXT;
enum VK_BLEND_OP_MULTIPLY_EXT = VkBlendOp.MULTIPLY_EXT;
enum VK_BLEND_OP_SCREEN_EXT = VkBlendOp.SCREEN_EXT;
enum VK_BLEND_OP_OVERLAY_EXT = VkBlendOp.OVERLAY_EXT;
enum VK_BLEND_OP_DARKEN_EXT = VkBlendOp.DARKEN_EXT;
enum VK_BLEND_OP_LIGHTEN_EXT = VkBlendOp.LIGHTEN_EXT;
enum VK_BLEND_OP_COLORDODGE_EXT = VkBlendOp.COLORDODGE_EXT;
enum VK_BLEND_OP_COLORBURN_EXT = VkBlendOp.COLORBURN_EXT;
enum VK_BLEND_OP_HARDLIGHT_EXT = VkBlendOp.HARDLIGHT_EXT;
enum VK_BLEND_OP_SOFTLIGHT_EXT = VkBlendOp.SOFTLIGHT_EXT;
enum VK_BLEND_OP_DIFFERENCE_EXT = VkBlendOp.DIFFERENCE_EXT;
enum VK_BLEND_OP_EXCLUSION_EXT = VkBlendOp.EXCLUSION_EXT;
enum VK_BLEND_OP_INVERT_EXT = VkBlendOp.INVERT_EXT;
enum VK_BLEND_OP_INVERT_RGB_EXT = VkBlendOp.INVERT_RGB_EXT;
enum VK_BLEND_OP_LINEARDODGE_EXT = VkBlendOp.LINEARDODGE_EXT;
enum VK_BLEND_OP_LINEARBURN_EXT = VkBlendOp.LINEARBURN_EXT;
enum VK_BLEND_OP_VIVIDLIGHT_EXT = VkBlendOp.VIVIDLIGHT_EXT;
enum VK_BLEND_OP_LINEARLIGHT_EXT = VkBlendOp.LINEARLIGHT_EXT;
enum VK_BLEND_OP_PINLIGHT_EXT = VkBlendOp.PINLIGHT_EXT;
enum VK_BLEND_OP_HARDMIX_EXT = VkBlendOp.HARDMIX_EXT;
enum VK_BLEND_OP_HSL_HUE_EXT = VkBlendOp.HSL_HUE_EXT;
enum VK_BLEND_OP_HSL_SATURATION_EXT = VkBlendOp.HSL_SATURATION_EXT;
enum VK_BLEND_OP_HSL_COLOR_EXT = VkBlendOp.HSL_COLOR_EXT;
enum VK_BLEND_OP_HSL_LUMINOSITY_EXT = VkBlendOp.HSL_LUMINOSITY_EXT;
enum VK_BLEND_OP_PLUS_EXT = VkBlendOp.PLUS_EXT;
enum VK_BLEND_OP_PLUS_CLAMPED_EXT = VkBlendOp.PLUS_CLAMPED_EXT;
enum VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT = VkBlendOp.PLUS_CLAMPED_ALPHA_EXT;
enum VK_BLEND_OP_PLUS_DARKER_EXT = VkBlendOp.PLUS_DARKER_EXT;
enum VK_BLEND_OP_MINUS_EXT = VkBlendOp.MINUS_EXT;
enum VK_BLEND_OP_MINUS_CLAMPED_EXT = VkBlendOp.MINUS_CLAMPED_EXT;
enum VK_BLEND_OP_CONTRAST_EXT = VkBlendOp.CONTRAST_EXT;
enum VK_BLEND_OP_INVERT_OVG_EXT = VkBlendOp.INVERT_OVG_EXT;
enum VK_BLEND_OP_RED_EXT = VkBlendOp.RED_EXT;
enum VK_BLEND_OP_GREEN_EXT = VkBlendOp.GREEN_EXT;
enum VK_BLEND_OP_BLUE_EXT = VkBlendOp.BLUE_EXT;

enum VkColorComponentFlagBits : uint {
    R_BIT = 1,
    G_BIT = 2,
    B_BIT = 4,
    A_BIT = 8,
}

enum VK_COLOR_COMPONENT_R_BIT = VkColorComponentFlagBits.R_BIT;
enum VK_COLOR_COMPONENT_G_BIT = VkColorComponentFlagBits.G_BIT;
enum VK_COLOR_COMPONENT_B_BIT = VkColorComponentFlagBits.B_BIT;
enum VK_COLOR_COMPONENT_A_BIT = VkColorComponentFlagBits.A_BIT;

alias VkColorComponentFlags = VkFlags;

enum VkCompareOp {
    NEVER = 0,
    LESS = 1,
    EQUAL = 2,
    LESS_OR_EQUAL = 3,
    GREATER = 4,
    NOT_EQUAL = 5,
    GREATER_OR_EQUAL = 6,
    ALWAYS = 7,
}

enum VK_COMPARE_OP_NEVER = VkCompareOp.NEVER;
enum VK_COMPARE_OP_LESS = VkCompareOp.LESS;
enum VK_COMPARE_OP_EQUAL = VkCompareOp.EQUAL;
enum VK_COMPARE_OP_LESS_OR_EQUAL = VkCompareOp.LESS_OR_EQUAL;
enum VK_COMPARE_OP_GREATER = VkCompareOp.GREATER;
enum VK_COMPARE_OP_NOT_EQUAL = VkCompareOp.NOT_EQUAL;
enum VK_COMPARE_OP_GREATER_OR_EQUAL = VkCompareOp.GREATER_OR_EQUAL;
enum VK_COMPARE_OP_ALWAYS = VkCompareOp.ALWAYS;

struct VkComputePipelineCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkPipelineShaderStageCreateInfo stage;
    VkPipelineLayout layout;
    VkPipeline basePipelineHandle;
    int basePipelineIndex;
}

enum VkCullModeFlagBits : uint {
    NONE = 0,
    FRONT_BIT = 1,
    BACK_BIT = 2,
    FRONT_AND_BACK = 0x00000003,
}

enum VK_CULL_MODE_NONE = VkCullModeFlagBits.NONE;
enum VK_CULL_MODE_FRONT_BIT = VkCullModeFlagBits.FRONT_BIT;
enum VK_CULL_MODE_BACK_BIT = VkCullModeFlagBits.BACK_BIT;
enum VK_CULL_MODE_FRONT_AND_BACK = VkCullModeFlagBits.FRONT_AND_BACK;

alias VkCullModeFlags = VkFlags;

enum VkDynamicState {
    VIEWPORT = 0,
    SCISSOR = 1,
    LINE_WIDTH = 2,
    DEPTH_BIAS = 3,
    BLEND_CONSTANTS = 4,
    DEPTH_BOUNDS = 5,
    STENCIL_COMPARE_MASK = 6,
    STENCIL_WRITE_MASK = 7,
    STENCIL_REFERENCE = 8,
    CULL_MODE = 1000267000,
    FRONT_FACE = 1000267001,
    PRIMITIVE_TOPOLOGY = 1000267002,
    VIEWPORT_WITH_COUNT = 1000267003,
    SCISSOR_WITH_COUNT = 1000267004,
    VERTEX_INPUT_BINDING_STRIDE = 1000267005,
    DEPTH_TEST_ENABLE = 1000267006,
    DEPTH_WRITE_ENABLE = 1000267007,
    DEPTH_COMPARE_OP = 1000267008,
    DEPTH_BOUNDS_TEST_ENABLE = 1000267009,
    STENCIL_TEST_ENABLE = 1000267010,
    STENCIL_OP = 1000267011,
    RASTERIZER_DISCARD_ENABLE = 1000377001,
    DEPTH_BIAS_ENABLE = 1000377002,
    PRIMITIVE_RESTART_ENABLE = 1000377004,
    LINE_STIPPLE = 1000259000,
    VIEWPORT_W_SCALING_NV = 1000087000,
    DISCARD_RECTANGLE_EXT = 1000099000,
    DISCARD_RECTANGLE_ENABLE_EXT = 1000099001,
    DISCARD_RECTANGLE_MODE_EXT = 1000099002,
    SAMPLE_LOCATIONS_EXT = 1000143000,
    RAY_TRACING_PIPELINE_STACK_SIZE_KHR = 1000347000,
    VIEWPORT_SHADING_RATE_PALETTE_NV = 1000164004,
    VIEWPORT_COARSE_SAMPLE_ORDER_NV = 1000164006,
    EXCLUSIVE_SCISSOR_ENABLE_NV = 1000205000,
    EXCLUSIVE_SCISSOR_NV = 1000205001,
    FRAGMENT_SHADING_RATE_KHR = 1000226000,
    LINE_STIPPLE_EXT = LINE_STIPPLE,
    CULL_MODE_EXT = CULL_MODE,
    FRONT_FACE_EXT = FRONT_FACE,
    PRIMITIVE_TOPOLOGY_EXT = PRIMITIVE_TOPOLOGY,
    VIEWPORT_WITH_COUNT_EXT = VIEWPORT_WITH_COUNT,
    SCISSOR_WITH_COUNT_EXT = SCISSOR_WITH_COUNT,
    VERTEX_INPUT_BINDING_STRIDE_EXT = VERTEX_INPUT_BINDING_STRIDE,
    DEPTH_TEST_ENABLE_EXT = DEPTH_TEST_ENABLE,
    DEPTH_WRITE_ENABLE_EXT = DEPTH_WRITE_ENABLE,
    DEPTH_COMPARE_OP_EXT = DEPTH_COMPARE_OP,
    DEPTH_BOUNDS_TEST_ENABLE_EXT = DEPTH_BOUNDS_TEST_ENABLE,
    STENCIL_TEST_ENABLE_EXT = STENCIL_TEST_ENABLE,
    STENCIL_OP_EXT = STENCIL_OP,
    VERTEX_INPUT_EXT = 1000352000,
    PATCH_CONTROL_POINTS_EXT = 1000377000,
    RASTERIZER_DISCARD_ENABLE_EXT = RASTERIZER_DISCARD_ENABLE,
    DEPTH_BIAS_ENABLE_EXT = DEPTH_BIAS_ENABLE,
    LOGIC_OP_EXT = 1000377003,
    PRIMITIVE_RESTART_ENABLE_EXT = PRIMITIVE_RESTART_ENABLE,
    COLOR_WRITE_ENABLE_EXT = 1000381000,
    DEPTH_CLAMP_ENABLE_EXT = 1000455003,
    POLYGON_MODE_EXT = 1000455004,
    RASTERIZATION_SAMPLES_EXT = 1000455005,
    SAMPLE_MASK_EXT = 1000455006,
    ALPHA_TO_COVERAGE_ENABLE_EXT = 1000455007,
    ALPHA_TO_ONE_ENABLE_EXT = 1000455008,
    LOGIC_OP_ENABLE_EXT = 1000455009,
    COLOR_BLEND_ENABLE_EXT = 1000455010,
    COLOR_BLEND_EQUATION_EXT = 1000455011,
    COLOR_WRITE_MASK_EXT = 1000455012,
    TESSELLATION_DOMAIN_ORIGIN_EXT = 1000455002,
    RASTERIZATION_STREAM_EXT = 1000455013,
    CONSERVATIVE_RASTERIZATION_MODE_EXT = 1000455014,
    EXTRA_PRIMITIVE_OVERESTIMATION_SIZE_EXT = 1000455015,
    DEPTH_CLIP_ENABLE_EXT = 1000455016,
    SAMPLE_LOCATIONS_ENABLE_EXT = 1000455017,
    COLOR_BLEND_ADVANCED_EXT = 1000455018,
    PROVOKING_VERTEX_MODE_EXT = 1000455019,
    LINE_RASTERIZATION_MODE_EXT = 1000455020,
    LINE_STIPPLE_ENABLE_EXT = 1000455021,
    DEPTH_CLIP_NEGATIVE_ONE_TO_ONE_EXT = 1000455022,
    VIEWPORT_W_SCALING_ENABLE_NV = 1000455023,
    VIEWPORT_SWIZZLE_NV = 1000455024,
    COVERAGE_TO_COLOR_ENABLE_NV = 1000455025,
    COVERAGE_TO_COLOR_LOCATION_NV = 1000455026,
    COVERAGE_MODULATION_MODE_NV = 1000455027,
    COVERAGE_MODULATION_TABLE_ENABLE_NV = 1000455028,
    COVERAGE_MODULATION_TABLE_NV = 1000455029,
    SHADING_RATE_IMAGE_ENABLE_NV = 1000455030,
    REPRESENTATIVE_FRAGMENT_TEST_ENABLE_NV = 1000455031,
    COVERAGE_REDUCTION_MODE_NV = 1000455032,
    ATTACHMENT_FEEDBACK_LOOP_ENABLE_EXT = 1000524000,
    LINE_STIPPLE_KHR = LINE_STIPPLE,
    DEPTH_CLAMP_RANGE_EXT = 1000582000,
}

enum VK_DYNAMIC_STATE_VIEWPORT = VkDynamicState.VIEWPORT;
enum VK_DYNAMIC_STATE_SCISSOR = VkDynamicState.SCISSOR;
enum VK_DYNAMIC_STATE_LINE_WIDTH = VkDynamicState.LINE_WIDTH;
enum VK_DYNAMIC_STATE_DEPTH_BIAS = VkDynamicState.DEPTH_BIAS;
enum VK_DYNAMIC_STATE_BLEND_CONSTANTS = VkDynamicState.BLEND_CONSTANTS;
enum VK_DYNAMIC_STATE_DEPTH_BOUNDS = VkDynamicState.DEPTH_BOUNDS;
enum VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK = VkDynamicState.STENCIL_COMPARE_MASK;
enum VK_DYNAMIC_STATE_STENCIL_WRITE_MASK = VkDynamicState.STENCIL_WRITE_MASK;
enum VK_DYNAMIC_STATE_STENCIL_REFERENCE = VkDynamicState.STENCIL_REFERENCE;
enum VK_DYNAMIC_STATE_CULL_MODE = VkDynamicState.CULL_MODE;
enum VK_DYNAMIC_STATE_FRONT_FACE = VkDynamicState.FRONT_FACE;
enum VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY = VkDynamicState.PRIMITIVE_TOPOLOGY;
enum VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT = VkDynamicState.VIEWPORT_WITH_COUNT;
enum VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT = VkDynamicState.SCISSOR_WITH_COUNT;
enum VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE = VkDynamicState.VERTEX_INPUT_BINDING_STRIDE;
enum VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE = VkDynamicState.DEPTH_TEST_ENABLE;
enum VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE = VkDynamicState.DEPTH_WRITE_ENABLE;
enum VK_DYNAMIC_STATE_DEPTH_COMPARE_OP = VkDynamicState.DEPTH_COMPARE_OP;
enum VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE = VkDynamicState.DEPTH_BOUNDS_TEST_ENABLE;
enum VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE = VkDynamicState.STENCIL_TEST_ENABLE;
enum VK_DYNAMIC_STATE_STENCIL_OP = VkDynamicState.STENCIL_OP;
enum VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE = VkDynamicState.RASTERIZER_DISCARD_ENABLE;
enum VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE = VkDynamicState.DEPTH_BIAS_ENABLE;
enum VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE = VkDynamicState.PRIMITIVE_RESTART_ENABLE;
enum VK_DYNAMIC_STATE_LINE_STIPPLE = VkDynamicState.LINE_STIPPLE;
enum VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV = VkDynamicState.VIEWPORT_W_SCALING_NV;
enum VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT = VkDynamicState.DISCARD_RECTANGLE_EXT;
enum VK_DYNAMIC_STATE_DISCARD_RECTANGLE_ENABLE_EXT = VkDynamicState.DISCARD_RECTANGLE_ENABLE_EXT;
enum VK_DYNAMIC_STATE_DISCARD_RECTANGLE_MODE_EXT = VkDynamicState.DISCARD_RECTANGLE_MODE_EXT;
enum VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT = VkDynamicState.SAMPLE_LOCATIONS_EXT;
enum VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR = VkDynamicState.RAY_TRACING_PIPELINE_STACK_SIZE_KHR;
enum VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV = VkDynamicState.VIEWPORT_SHADING_RATE_PALETTE_NV;
enum VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV = VkDynamicState.VIEWPORT_COARSE_SAMPLE_ORDER_NV;
enum VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_ENABLE_NV = VkDynamicState.EXCLUSIVE_SCISSOR_ENABLE_NV;
enum VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV = VkDynamicState.EXCLUSIVE_SCISSOR_NV;
enum VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR = VkDynamicState.FRAGMENT_SHADING_RATE_KHR;
enum VK_DYNAMIC_STATE_LINE_STIPPLE_EXT = VK_DYNAMIC_STATE_LINE_STIPPLE;
enum VK_DYNAMIC_STATE_CULL_MODE_EXT = VK_DYNAMIC_STATE_CULL_MODE;
enum VK_DYNAMIC_STATE_FRONT_FACE_EXT = VK_DYNAMIC_STATE_FRONT_FACE;
enum VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT = VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY;
enum VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT = VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT;
enum VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT = VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT;
enum VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT = VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE;
enum VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT = VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE;
enum VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT = VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE;
enum VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT = VK_DYNAMIC_STATE_DEPTH_COMPARE_OP;
enum VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT = VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE;
enum VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT = VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE;
enum VK_DYNAMIC_STATE_STENCIL_OP_EXT = VK_DYNAMIC_STATE_STENCIL_OP;
enum VK_DYNAMIC_STATE_VERTEX_INPUT_EXT = VkDynamicState.VERTEX_INPUT_EXT;
enum VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT = VkDynamicState.PATCH_CONTROL_POINTS_EXT;
enum VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT = VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE;
enum VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT = VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE;
enum VK_DYNAMIC_STATE_LOGIC_OP_EXT = VkDynamicState.LOGIC_OP_EXT;
enum VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT = VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE;
enum VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT = VkDynamicState.COLOR_WRITE_ENABLE_EXT;
enum VK_DYNAMIC_STATE_DEPTH_CLAMP_ENABLE_EXT = VkDynamicState.DEPTH_CLAMP_ENABLE_EXT;
enum VK_DYNAMIC_STATE_POLYGON_MODE_EXT = VkDynamicState.POLYGON_MODE_EXT;
enum VK_DYNAMIC_STATE_RASTERIZATION_SAMPLES_EXT = VkDynamicState.RASTERIZATION_SAMPLES_EXT;
enum VK_DYNAMIC_STATE_SAMPLE_MASK_EXT = VkDynamicState.SAMPLE_MASK_EXT;
enum VK_DYNAMIC_STATE_ALPHA_TO_COVERAGE_ENABLE_EXT = VkDynamicState.ALPHA_TO_COVERAGE_ENABLE_EXT;
enum VK_DYNAMIC_STATE_ALPHA_TO_ONE_ENABLE_EXT = VkDynamicState.ALPHA_TO_ONE_ENABLE_EXT;
enum VK_DYNAMIC_STATE_LOGIC_OP_ENABLE_EXT = VkDynamicState.LOGIC_OP_ENABLE_EXT;
enum VK_DYNAMIC_STATE_COLOR_BLEND_ENABLE_EXT = VkDynamicState.COLOR_BLEND_ENABLE_EXT;
enum VK_DYNAMIC_STATE_COLOR_BLEND_EQUATION_EXT = VkDynamicState.COLOR_BLEND_EQUATION_EXT;
enum VK_DYNAMIC_STATE_COLOR_WRITE_MASK_EXT = VkDynamicState.COLOR_WRITE_MASK_EXT;
enum VK_DYNAMIC_STATE_TESSELLATION_DOMAIN_ORIGIN_EXT = VkDynamicState.TESSELLATION_DOMAIN_ORIGIN_EXT;
enum VK_DYNAMIC_STATE_RASTERIZATION_STREAM_EXT = VkDynamicState.RASTERIZATION_STREAM_EXT;
enum VK_DYNAMIC_STATE_CONSERVATIVE_RASTERIZATION_MODE_EXT = VkDynamicState.CONSERVATIVE_RASTERIZATION_MODE_EXT;
enum VK_DYNAMIC_STATE_EXTRA_PRIMITIVE_OVERESTIMATION_SIZE_EXT = VkDynamicState.EXTRA_PRIMITIVE_OVERESTIMATION_SIZE_EXT;
enum VK_DYNAMIC_STATE_DEPTH_CLIP_ENABLE_EXT = VkDynamicState.DEPTH_CLIP_ENABLE_EXT;
enum VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_ENABLE_EXT = VkDynamicState.SAMPLE_LOCATIONS_ENABLE_EXT;
enum VK_DYNAMIC_STATE_COLOR_BLEND_ADVANCED_EXT = VkDynamicState.COLOR_BLEND_ADVANCED_EXT;
enum VK_DYNAMIC_STATE_PROVOKING_VERTEX_MODE_EXT = VkDynamicState.PROVOKING_VERTEX_MODE_EXT;
enum VK_DYNAMIC_STATE_LINE_RASTERIZATION_MODE_EXT = VkDynamicState.LINE_RASTERIZATION_MODE_EXT;
enum VK_DYNAMIC_STATE_LINE_STIPPLE_ENABLE_EXT = VkDynamicState.LINE_STIPPLE_ENABLE_EXT;
enum VK_DYNAMIC_STATE_DEPTH_CLIP_NEGATIVE_ONE_TO_ONE_EXT = VkDynamicState.DEPTH_CLIP_NEGATIVE_ONE_TO_ONE_EXT;
enum VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_ENABLE_NV = VkDynamicState.VIEWPORT_W_SCALING_ENABLE_NV;
enum VK_DYNAMIC_STATE_VIEWPORT_SWIZZLE_NV = VkDynamicState.VIEWPORT_SWIZZLE_NV;
enum VK_DYNAMIC_STATE_COVERAGE_TO_COLOR_ENABLE_NV = VkDynamicState.COVERAGE_TO_COLOR_ENABLE_NV;
enum VK_DYNAMIC_STATE_COVERAGE_TO_COLOR_LOCATION_NV = VkDynamicState.COVERAGE_TO_COLOR_LOCATION_NV;
enum VK_DYNAMIC_STATE_COVERAGE_MODULATION_MODE_NV = VkDynamicState.COVERAGE_MODULATION_MODE_NV;
enum VK_DYNAMIC_STATE_COVERAGE_MODULATION_TABLE_ENABLE_NV = VkDynamicState.COVERAGE_MODULATION_TABLE_ENABLE_NV;
enum VK_DYNAMIC_STATE_COVERAGE_MODULATION_TABLE_NV = VkDynamicState.COVERAGE_MODULATION_TABLE_NV;
enum VK_DYNAMIC_STATE_SHADING_RATE_IMAGE_ENABLE_NV = VkDynamicState.SHADING_RATE_IMAGE_ENABLE_NV;
enum VK_DYNAMIC_STATE_REPRESENTATIVE_FRAGMENT_TEST_ENABLE_NV = VkDynamicState.REPRESENTATIVE_FRAGMENT_TEST_ENABLE_NV;
enum VK_DYNAMIC_STATE_COVERAGE_REDUCTION_MODE_NV = VkDynamicState.COVERAGE_REDUCTION_MODE_NV;
enum VK_DYNAMIC_STATE_ATTACHMENT_FEEDBACK_LOOP_ENABLE_EXT = VkDynamicState.ATTACHMENT_FEEDBACK_LOOP_ENABLE_EXT;
enum VK_DYNAMIC_STATE_LINE_STIPPLE_KHR = VK_DYNAMIC_STATE_LINE_STIPPLE;
enum VK_DYNAMIC_STATE_DEPTH_CLAMP_RANGE_EXT = VkDynamicState.DEPTH_CLAMP_RANGE_EXT;

enum VkFrontFace {
    COUNTER_CLOCKWISE = 0,
    CLOCKWISE = 1,
}

enum VK_FRONT_FACE_COUNTER_CLOCKWISE = VkFrontFace.COUNTER_CLOCKWISE;
enum VK_FRONT_FACE_CLOCKWISE = VkFrontFace.CLOCKWISE;

struct VkGraphicsPipelineCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint stageCount;
    const(VkPipelineShaderStageCreateInfo)* pStages;
    const(VkPipelineVertexInputStateCreateInfo)* pVertexInputState;
    const(VkPipelineInputAssemblyStateCreateInfo)* pInputAssemblyState;
    const(VkPipelineTessellationStateCreateInfo)* pTessellationState;
    const(VkPipelineViewportStateCreateInfo)* pViewportState;
    const(VkPipelineRasterizationStateCreateInfo)* pRasterizationState;
    const(VkPipelineMultisampleStateCreateInfo)* pMultisampleState;
    const(VkPipelineDepthStencilStateCreateInfo)* pDepthStencilState;
    const(VkPipelineColorBlendStateCreateInfo)* pColorBlendState;
    const(VkPipelineDynamicStateCreateInfo)* pDynamicState;
    VkPipelineLayout layout;
    VkRenderPass renderPass;
    uint subpass;
    VkPipeline basePipelineHandle;
    int basePipelineIndex;
}

enum VkLogicOp {
    CLEAR = 0,
    AND = 1,
    AND_REVERSE = 2,
    COPY = 3,
    AND_INVERTED = 4,
    NO_OP = 5,
    XOR = 6,
    OR = 7,
    NOR = 8,
    EQUIVALENT = 9,
    INVERT = 10,
    OR_REVERSE = 11,
    COPY_INVERTED = 12,
    OR_INVERTED = 13,
    NAND = 14,
    SET = 15,
}

enum VK_LOGIC_OP_CLEAR = VkLogicOp.CLEAR;
enum VK_LOGIC_OP_AND = VkLogicOp.AND;
enum VK_LOGIC_OP_AND_REVERSE = VkLogicOp.AND_REVERSE;
enum VK_LOGIC_OP_COPY = VkLogicOp.COPY;
enum VK_LOGIC_OP_AND_INVERTED = VkLogicOp.AND_INVERTED;
enum VK_LOGIC_OP_NO_OP = VkLogicOp.NO_OP;
enum VK_LOGIC_OP_XOR = VkLogicOp.XOR;
enum VK_LOGIC_OP_OR = VkLogicOp.OR;
enum VK_LOGIC_OP_NOR = VkLogicOp.NOR;
enum VK_LOGIC_OP_EQUIVALENT = VkLogicOp.EQUIVALENT;
enum VK_LOGIC_OP_INVERT = VkLogicOp.INVERT;
enum VK_LOGIC_OP_OR_REVERSE = VkLogicOp.OR_REVERSE;
enum VK_LOGIC_OP_COPY_INVERTED = VkLogicOp.COPY_INVERTED;
enum VK_LOGIC_OP_OR_INVERTED = VkLogicOp.OR_INVERTED;
enum VK_LOGIC_OP_NAND = VkLogicOp.NAND;
enum VK_LOGIC_OP_SET = VkLogicOp.SET;

alias VkPipeline = OpaqueHandle!("VkPipeline");

struct VkPipelineColorBlendAttachmentState {
    VkBool32 blendEnable;
    VkBlendFactor srcColorBlendFactor;
    VkBlendFactor dstColorBlendFactor;
    VkBlendOp colorBlendOp;
    VkBlendFactor srcAlphaBlendFactor;
    VkBlendFactor dstAlphaBlendFactor;
    VkBlendOp alphaBlendOp;
    VkFlags colorWriteMask;
}

alias VkPipelineColorBlendStateCreateFlags = VkFlags;

struct VkPipelineColorBlendStateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkBool32 logicOpEnable;
    VkLogicOp logicOp;
    uint attachmentCount;
    const(VkPipelineColorBlendAttachmentState)* pAttachments;
    float blendConstants;
}

enum VkPipelineCreateFlagBits : uint {
    DISABLE_OPTIMIZATION_BIT = 1,
    ALLOW_DERIVATIVES_BIT = 2,
    DERIVATIVE_BIT = 4,
    VIEW_INDEX_FROM_DEVICE_INDEX_BIT = 8,
    DISPATCH_BASE_BIT = 16,
    DISPATCH_BASE = DISPATCH_BASE_BIT,
    FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT = 256,
    EARLY_RETURN_ON_FAILURE_BIT = 512,
    NO_PROTECTED_ACCESS_BIT = 134217728,
    PROTECTED_ACCESS_ONLY_BIT = 1073741824,
    VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR = VIEW_INDEX_FROM_DEVICE_INDEX_BIT,
    DISPATCH_BASE_BIT_KHR = DISPATCH_BASE_BIT,
    DISPATCH_BASE_KHR = DISPATCH_BASE_BIT,
    RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR = 16384,
    RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR = 32768,
    RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR = 65536,
    RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR = 131072,
    RAY_TRACING_SKIP_TRIANGLES_BIT_KHR = 4096,
    RAY_TRACING_SKIP_AABBS_BIT_KHR = 8192,
    RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR = 524288,
    DEFER_COMPILE_BIT_NV = 32,
    RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT = 4194304,
    VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT = RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT,
    RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 2097152,
    VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,
    CAPTURE_STATISTICS_BIT_KHR = 64,
    CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR = 128,
    INDIRECT_BINDABLE_BIT_NV = 262144,
    LIBRARY_BIT_KHR = 2048,
    FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT = FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT,
    EARLY_RETURN_ON_FAILURE_BIT_EXT = EARLY_RETURN_ON_FAILURE_BIT,
    DESCRIPTOR_BUFFER_BIT_EXT = 536870912,
    RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT = 8388608,
    LINK_TIME_OPTIMIZATION_BIT_EXT = 1024,
    RAY_TRACING_ALLOW_MOTION_BIT_NV = 1048576,
    COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT = 33554432,
    DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT = 67108864,
    RAY_TRACING_OPACITY_MICROMAP_BIT_EXT = 16777216,
    RAY_TRACING_DISPLACEMENT_MICROMAP_BIT_NV = 268435456,
    NO_PROTECTED_ACCESS_BIT_EXT = NO_PROTECTED_ACCESS_BIT,
    PROTECTED_ACCESS_ONLY_BIT_EXT = PROTECTED_ACCESS_ONLY_BIT,
}

enum VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT = VkPipelineCreateFlagBits.DISABLE_OPTIMIZATION_BIT;
enum VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT = VkPipelineCreateFlagBits.ALLOW_DERIVATIVES_BIT;
enum VK_PIPELINE_CREATE_DERIVATIVE_BIT = VkPipelineCreateFlagBits.DERIVATIVE_BIT;
enum VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT = VkPipelineCreateFlagBits.VIEW_INDEX_FROM_DEVICE_INDEX_BIT;
enum VK_PIPELINE_CREATE_DISPATCH_BASE_BIT = VkPipelineCreateFlagBits.DISPATCH_BASE_BIT;
deprecated("aliased")
enum VK_PIPELINE_CREATE_DISPATCH_BASE = VK_PIPELINE_CREATE_DISPATCH_BASE_BIT;
enum VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT = VkPipelineCreateFlagBits.FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT;
enum VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT = VkPipelineCreateFlagBits.EARLY_RETURN_ON_FAILURE_BIT;
enum VK_PIPELINE_CREATE_NO_PROTECTED_ACCESS_BIT = VkPipelineCreateFlagBits.NO_PROTECTED_ACCESS_BIT;
enum VK_PIPELINE_CREATE_PROTECTED_ACCESS_ONLY_BIT = VkPipelineCreateFlagBits.PROTECTED_ACCESS_ONLY_BIT;
enum VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR = VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT;
enum VK_PIPELINE_CREATE_DISPATCH_BASE_BIT_KHR = VK_PIPELINE_CREATE_DISPATCH_BASE_BIT;
deprecated("aliased")
enum VK_PIPELINE_CREATE_DISPATCH_BASE_KHR = VK_PIPELINE_CREATE_DISPATCH_BASE_BIT;
enum VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR = VkPipelineCreateFlagBits.RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR;
enum VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR = VkPipelineCreateFlagBits.RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR;
enum VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR = VkPipelineCreateFlagBits.RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR;
enum VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR = VkPipelineCreateFlagBits.RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR;
enum VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR = VkPipelineCreateFlagBits.RAY_TRACING_SKIP_TRIANGLES_BIT_KHR;
enum VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR = VkPipelineCreateFlagBits.RAY_TRACING_SKIP_AABBS_BIT_KHR;
enum VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR = VkPipelineCreateFlagBits.RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR;
enum VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV = VkPipelineCreateFlagBits.DEFER_COMPILE_BIT_NV;
enum VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT = VkPipelineCreateFlagBits.RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT;
deprecated("aliased")
enum VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT = VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT;
enum VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = VkPipelineCreateFlagBits.RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR;
deprecated("aliased")
enum VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR;
enum VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR = VkPipelineCreateFlagBits.CAPTURE_STATISTICS_BIT_KHR;
enum VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR = VkPipelineCreateFlagBits.CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR;
enum VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV = VkPipelineCreateFlagBits.INDIRECT_BINDABLE_BIT_NV;
enum VK_PIPELINE_CREATE_LIBRARY_BIT_KHR = VkPipelineCreateFlagBits.LIBRARY_BIT_KHR;
enum VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT = VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT;
enum VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT = VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT;
enum VK_PIPELINE_CREATE_DESCRIPTOR_BUFFER_BIT_EXT = VkPipelineCreateFlagBits.DESCRIPTOR_BUFFER_BIT_EXT;
enum VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT = VkPipelineCreateFlagBits.RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT;
enum VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT = VkPipelineCreateFlagBits.LINK_TIME_OPTIMIZATION_BIT_EXT;
enum VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV = VkPipelineCreateFlagBits.RAY_TRACING_ALLOW_MOTION_BIT_NV;
enum VK_PIPELINE_CREATE_COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT = VkPipelineCreateFlagBits.COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT;
enum VK_PIPELINE_CREATE_DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT = VkPipelineCreateFlagBits.DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT;
enum VK_PIPELINE_CREATE_RAY_TRACING_OPACITY_MICROMAP_BIT_EXT = VkPipelineCreateFlagBits.RAY_TRACING_OPACITY_MICROMAP_BIT_EXT;
enum VK_PIPELINE_CREATE_RAY_TRACING_DISPLACEMENT_MICROMAP_BIT_NV = VkPipelineCreateFlagBits.RAY_TRACING_DISPLACEMENT_MICROMAP_BIT_NV;
enum VK_PIPELINE_CREATE_NO_PROTECTED_ACCESS_BIT_EXT = VK_PIPELINE_CREATE_NO_PROTECTED_ACCESS_BIT;
enum VK_PIPELINE_CREATE_PROTECTED_ACCESS_ONLY_BIT_EXT = VK_PIPELINE_CREATE_PROTECTED_ACCESS_ONLY_BIT;

alias VkPipelineCreateFlags = VkFlags;
alias VkPipelineDepthStencilStateCreateFlags = VkFlags;

struct VkPipelineDepthStencilStateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkBool32 depthTestEnable;
    VkBool32 depthWriteEnable;
    VkCompareOp depthCompareOp;
    VkBool32 depthBoundsTestEnable;
    VkBool32 stencilTestEnable;
    VkStencilOpState front;
    VkStencilOpState back;
    float minDepthBounds;
    float maxDepthBounds;
}

alias VkPipelineDynamicStateCreateFlags = VkFlags;

struct VkPipelineDynamicStateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint dynamicStateCount;
    const(VkDynamicState)* pDynamicStates;
}

alias VkPipelineInputAssemblyStateCreateFlags = VkFlags;

struct VkPipelineInputAssemblyStateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkPrimitiveTopology topology;
    VkBool32 primitiveRestartEnable;
}

alias VkPipelineLayoutCreateFlags = VkFlags;
alias VkPipelineMultisampleStateCreateFlags = VkFlags;

struct VkPipelineMultisampleStateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkSampleCountFlagBits rasterizationSamples;
    VkBool32 sampleShadingEnable;
    float minSampleShading;
    const(VkSampleMask)* pSampleMask;
    VkBool32 alphaToCoverageEnable;
    VkBool32 alphaToOneEnable;
}

alias VkPipelineRasterizationStateCreateFlags = VkFlags;

struct VkPipelineRasterizationStateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkBool32 depthClampEnable;
    VkBool32 rasterizerDiscardEnable;
    VkPolygonMode polygonMode;
    VkFlags cullMode;
    VkFrontFace frontFace;
    VkBool32 depthBiasEnable;
    float depthBiasConstantFactor;
    float depthBiasClamp;
    float depthBiasSlopeFactor;
    float lineWidth;
}

enum VkPipelineShaderStageCreateFlagBits : uint {
    ALLOW_VARYING_SUBGROUP_SIZE_BIT = 1,
    REQUIRE_FULL_SUBGROUPS_BIT = 2,
    ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT = ALLOW_VARYING_SUBGROUP_SIZE_BIT,
    REQUIRE_FULL_SUBGROUPS_BIT_EXT = REQUIRE_FULL_SUBGROUPS_BIT,
    RESERVED_3_BIT_KHR = 8,
}

enum VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT = VkPipelineShaderStageCreateFlagBits.ALLOW_VARYING_SUBGROUP_SIZE_BIT;
enum VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT = VkPipelineShaderStageCreateFlagBits.REQUIRE_FULL_SUBGROUPS_BIT;
enum VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT = VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT;
enum VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT = VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT;
enum VK_PIPELINE_SHADER_STAGE_CREATE_RESERVED_3_BIT_KHR = VkPipelineShaderStageCreateFlagBits.RESERVED_3_BIT_KHR;

alias VkPipelineShaderStageCreateFlags = VkFlags;

struct VkPipelineShaderStageCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkShaderStageFlagBits stage;
    VkShaderModule module_;
    const(char)* pName;
    const(VkSpecializationInfo)* pSpecializationInfo;
}

alias VkPipelineTessellationStateCreateFlags = VkFlags;

struct VkPipelineTessellationStateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint patchControlPoints;
}

alias VkPipelineVertexInputStateCreateFlags = VkFlags;

struct VkPipelineVertexInputStateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint vertexBindingDescriptionCount;
    const(VkVertexInputBindingDescription)* pVertexBindingDescriptions;
    uint vertexAttributeDescriptionCount;
    const(VkVertexInputAttributeDescription)* pVertexAttributeDescriptions;
}

alias VkPipelineViewportStateCreateFlags = VkFlags;

struct VkPipelineViewportStateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint viewportCount;
    const(VkViewport)* pViewports;
    uint scissorCount;
    const(VkRect2D)* pScissors;
}

enum VkPolygonMode {
    FILL = 0,
    LINE = 1,
    POINT = 2,
    FILL_RECTANGLE_NV = 1000153000,
}

enum VK_POLYGON_MODE_FILL = VkPolygonMode.FILL;
enum VK_POLYGON_MODE_LINE = VkPolygonMode.LINE;
enum VK_POLYGON_MODE_POINT = VkPolygonMode.POINT;
enum VK_POLYGON_MODE_FILL_RECTANGLE_NV = VkPolygonMode.FILL_RECTANGLE_NV;

enum VkPrimitiveTopology {
    POINT_LIST = 0,
    LINE_LIST = 1,
    LINE_STRIP = 2,
    TRIANGLE_LIST = 3,
    TRIANGLE_STRIP = 4,
    TRIANGLE_FAN = 5,
    LINE_LIST_WITH_ADJACENCY = 6,
    LINE_STRIP_WITH_ADJACENCY = 7,
    TRIANGLE_LIST_WITH_ADJACENCY = 8,
    TRIANGLE_STRIP_WITH_ADJACENCY = 9,
    PATCH_LIST = 10,
}

enum VK_PRIMITIVE_TOPOLOGY_POINT_LIST = VkPrimitiveTopology.POINT_LIST;
enum VK_PRIMITIVE_TOPOLOGY_LINE_LIST = VkPrimitiveTopology.LINE_LIST;
enum VK_PRIMITIVE_TOPOLOGY_LINE_STRIP = VkPrimitiveTopology.LINE_STRIP;
enum VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST = VkPrimitiveTopology.TRIANGLE_LIST;
enum VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP = VkPrimitiveTopology.TRIANGLE_STRIP;
enum VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN = VkPrimitiveTopology.TRIANGLE_FAN;
enum VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY = VkPrimitiveTopology.LINE_LIST_WITH_ADJACENCY;
enum VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY = VkPrimitiveTopology.LINE_STRIP_WITH_ADJACENCY;
enum VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY = VkPrimitiveTopology.TRIANGLE_LIST_WITH_ADJACENCY;
enum VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY = VkPrimitiveTopology.TRIANGLE_STRIP_WITH_ADJACENCY;
enum VK_PRIMITIVE_TOPOLOGY_PATCH_LIST = VkPrimitiveTopology.PATCH_LIST;

alias VkSampleMask = uint;

enum VkShaderStageFlagBits : uint {
    VERTEX_BIT = 1,
    TESSELLATION_CONTROL_BIT = 2,
    TESSELLATION_EVALUATION_BIT = 4,
    GEOMETRY_BIT = 8,
    FRAGMENT_BIT = 16,
    COMPUTE_BIT = 32,
    ALL_GRAPHICS = 0x0000001F,
    ALL = 0x7FFFFFFF,
    RAYGEN_BIT_KHR = 256,
    ANY_HIT_BIT_KHR = 512,
    CLOSEST_HIT_BIT_KHR = 1024,
    MISS_BIT_KHR = 2048,
    INTERSECTION_BIT_KHR = 4096,
    CALLABLE_BIT_KHR = 8192,
    RAYGEN_BIT_NV = RAYGEN_BIT_KHR,
    ANY_HIT_BIT_NV = ANY_HIT_BIT_KHR,
    CLOSEST_HIT_BIT_NV = CLOSEST_HIT_BIT_KHR,
    MISS_BIT_NV = MISS_BIT_KHR,
    INTERSECTION_BIT_NV = INTERSECTION_BIT_KHR,
    CALLABLE_BIT_NV = CALLABLE_BIT_KHR,
    TASK_BIT_NV = TASK_BIT_EXT,
    MESH_BIT_NV = MESH_BIT_EXT,
    TASK_BIT_EXT = 64,
    MESH_BIT_EXT = 128,
    SUBPASS_SHADING_BIT_HUAWEI = 16384,
    CLUSTER_CULLING_BIT_HUAWEI = 524288,
    RESERVED_15_BIT_NV = 32768,
}

enum VK_SHADER_STAGE_VERTEX_BIT = VkShaderStageFlagBits.VERTEX_BIT;
enum VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT = VkShaderStageFlagBits.TESSELLATION_CONTROL_BIT;
enum VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT = VkShaderStageFlagBits.TESSELLATION_EVALUATION_BIT;
enum VK_SHADER_STAGE_GEOMETRY_BIT = VkShaderStageFlagBits.GEOMETRY_BIT;
enum VK_SHADER_STAGE_FRAGMENT_BIT = VkShaderStageFlagBits.FRAGMENT_BIT;
enum VK_SHADER_STAGE_COMPUTE_BIT = VkShaderStageFlagBits.COMPUTE_BIT;
enum VK_SHADER_STAGE_ALL_GRAPHICS = VkShaderStageFlagBits.ALL_GRAPHICS;
enum VK_SHADER_STAGE_ALL = VkShaderStageFlagBits.ALL;
enum VK_SHADER_STAGE_RAYGEN_BIT_KHR = VkShaderStageFlagBits.RAYGEN_BIT_KHR;
enum VK_SHADER_STAGE_ANY_HIT_BIT_KHR = VkShaderStageFlagBits.ANY_HIT_BIT_KHR;
enum VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR = VkShaderStageFlagBits.CLOSEST_HIT_BIT_KHR;
enum VK_SHADER_STAGE_MISS_BIT_KHR = VkShaderStageFlagBits.MISS_BIT_KHR;
enum VK_SHADER_STAGE_INTERSECTION_BIT_KHR = VkShaderStageFlagBits.INTERSECTION_BIT_KHR;
enum VK_SHADER_STAGE_CALLABLE_BIT_KHR = VkShaderStageFlagBits.CALLABLE_BIT_KHR;
enum VK_SHADER_STAGE_RAYGEN_BIT_NV = VK_SHADER_STAGE_RAYGEN_BIT_KHR;
enum VK_SHADER_STAGE_ANY_HIT_BIT_NV = VK_SHADER_STAGE_ANY_HIT_BIT_KHR;
enum VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV = VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR;
enum VK_SHADER_STAGE_MISS_BIT_NV = VK_SHADER_STAGE_MISS_BIT_KHR;
enum VK_SHADER_STAGE_INTERSECTION_BIT_NV = VK_SHADER_STAGE_INTERSECTION_BIT_KHR;
enum VK_SHADER_STAGE_CALLABLE_BIT_NV = VK_SHADER_STAGE_CALLABLE_BIT_KHR;
enum VK_SHADER_STAGE_TASK_BIT_NV = VK_SHADER_STAGE_TASK_BIT_EXT;
enum VK_SHADER_STAGE_MESH_BIT_NV = VK_SHADER_STAGE_MESH_BIT_EXT;
enum VK_SHADER_STAGE_TASK_BIT_EXT = VkShaderStageFlagBits.TASK_BIT_EXT;
enum VK_SHADER_STAGE_MESH_BIT_EXT = VkShaderStageFlagBits.MESH_BIT_EXT;
enum VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI = VkShaderStageFlagBits.SUBPASS_SHADING_BIT_HUAWEI;
enum VK_SHADER_STAGE_CLUSTER_CULLING_BIT_HUAWEI = VkShaderStageFlagBits.CLUSTER_CULLING_BIT_HUAWEI;
enum VK_SHADER_STAGE_RESERVED_15_BIT_NV = VkShaderStageFlagBits.RESERVED_15_BIT_NV;

alias VkShaderStageFlags = VkFlags;

struct VkSpecializationInfo {
    uint mapEntryCount;
    const(VkSpecializationMapEntry)* pMapEntries;
    size_t dataSize;
    const(void)* pData;
}

struct VkSpecializationMapEntry {
    uint constantID;
    uint offset;
    size_t size;
}

enum VkStencilOp {
    KEEP = 0,
    ZERO = 1,
    REPLACE = 2,
    INCREMENT_AND_CLAMP = 3,
    DECREMENT_AND_CLAMP = 4,
    INVERT = 5,
    INCREMENT_AND_WRAP = 6,
    DECREMENT_AND_WRAP = 7,
}

enum VK_STENCIL_OP_KEEP = VkStencilOp.KEEP;
enum VK_STENCIL_OP_ZERO = VkStencilOp.ZERO;
enum VK_STENCIL_OP_REPLACE = VkStencilOp.REPLACE;
enum VK_STENCIL_OP_INCREMENT_AND_CLAMP = VkStencilOp.INCREMENT_AND_CLAMP;
enum VK_STENCIL_OP_DECREMENT_AND_CLAMP = VkStencilOp.DECREMENT_AND_CLAMP;
enum VK_STENCIL_OP_INVERT = VkStencilOp.INVERT;
enum VK_STENCIL_OP_INCREMENT_AND_WRAP = VkStencilOp.INCREMENT_AND_WRAP;
enum VK_STENCIL_OP_DECREMENT_AND_WRAP = VkStencilOp.DECREMENT_AND_WRAP;

struct VkStencilOpState {
    VkStencilOp failOp;
    VkStencilOp passOp;
    VkStencilOp depthFailOp;
    VkCompareOp compareOp;
    uint compareMask;
    uint writeMask;
    uint reference;
}

struct VkVertexInputAttributeDescription {
    uint location;
    uint binding;
    VkFormat format;
    uint offset;
}

struct VkVertexInputBindingDescription {
    uint binding;
    uint stride;
    VkVertexInputRate inputRate;
}

enum VkVertexInputRate {
    VERTEX = 0,
    INSTANCE = 1,
}

enum VK_VERTEX_INPUT_RATE_VERTEX = VkVertexInputRate.VERTEX;
enum VK_VERTEX_INPUT_RATE_INSTANCE = VkVertexInputRate.INSTANCE;

struct VkViewport {
    float x;
    float y;
    float width;
    float height;
    float minDepth;
    float maxDepth;
}

version (VK_VERSION_1_0) {
    extern VkResult vkCreateGraphicsPipelines(
        VkDevice device,
        VkPipelineCache pipelineCache,
        uint createInfoCount,
        const(VkGraphicsPipelineCreateInfo)* pCreateInfos,
        const(VkAllocationCallbacks)* pAllocator,
        VkPipeline* pPipelines,
    );
    
    extern VkResult vkCreateComputePipelines(
        VkDevice device,
        VkPipelineCache pipelineCache,
        uint createInfoCount,
        const(VkComputePipelineCreateInfo)* pCreateInfos,
        const(VkAllocationCallbacks)* pAllocator,
        VkPipeline* pPipelines,
    );
    
    extern void vkDestroyPipeline(
        VkDevice device,
        VkPipeline pipeline,
        const(VkAllocationCallbacks)* pAllocator,
    );
}

// Pipeline layout commands

alias VkPipelineLayout = OpaqueHandle!("VkPipelineLayout");

struct VkPipelineLayoutCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint setLayoutCount;
    const(VkDescriptorSetLayout)* pSetLayouts;
    uint pushConstantRangeCount;
    const(VkPushConstantRange)* pPushConstantRanges;
}

struct VkPushConstantRange {
    VkFlags stageFlags;
    uint offset;
    uint size;
}

version (VK_VERSION_1_0) {
    extern VkResult vkCreatePipelineLayout(
        VkDevice device,
        const(VkPipelineLayoutCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkPipelineLayout* pPipelineLayout,
    );
    
    extern void vkDestroyPipelineLayout(
        VkDevice device,
        VkPipelineLayout pipelineLayout,
        const(VkAllocationCallbacks)* pAllocator,
    );
}

// Sampler commands

enum VkBorderColor {
    FLOAT_TRANSPARENT_BLACK = 0,
    INT_TRANSPARENT_BLACK = 1,
    FLOAT_OPAQUE_BLACK = 2,
    INT_OPAQUE_BLACK = 3,
    FLOAT_OPAQUE_WHITE = 4,
    INT_OPAQUE_WHITE = 5,
    FLOAT_CUSTOM_EXT = 1000287003,
    INT_CUSTOM_EXT = 1000287004,
}

enum VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK = VkBorderColor.FLOAT_TRANSPARENT_BLACK;
enum VK_BORDER_COLOR_INT_TRANSPARENT_BLACK = VkBorderColor.INT_TRANSPARENT_BLACK;
enum VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK = VkBorderColor.FLOAT_OPAQUE_BLACK;
enum VK_BORDER_COLOR_INT_OPAQUE_BLACK = VkBorderColor.INT_OPAQUE_BLACK;
enum VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE = VkBorderColor.FLOAT_OPAQUE_WHITE;
enum VK_BORDER_COLOR_INT_OPAQUE_WHITE = VkBorderColor.INT_OPAQUE_WHITE;
enum VK_BORDER_COLOR_FLOAT_CUSTOM_EXT = VkBorderColor.FLOAT_CUSTOM_EXT;
enum VK_BORDER_COLOR_INT_CUSTOM_EXT = VkBorderColor.INT_CUSTOM_EXT;

enum VkFilter {
    NEAREST = 0,
    LINEAR = 1,
    CUBIC_IMG = CUBIC_EXT,
    CUBIC_EXT = 1000015000,
}

enum VK_FILTER_NEAREST = VkFilter.NEAREST;
enum VK_FILTER_LINEAR = VkFilter.LINEAR;
enum VK_FILTER_CUBIC_IMG = VK_FILTER_CUBIC_EXT;
enum VK_FILTER_CUBIC_EXT = VkFilter.CUBIC_EXT;

alias VkSampler = OpaqueHandle!("VkSampler");

enum VkSamplerAddressMode {
    REPEAT = 0,
    MIRRORED_REPEAT = 1,
    CLAMP_TO_EDGE = 2,
    CLAMP_TO_BORDER = 3,
    MIRROR_CLAMP_TO_EDGE = 4,
    MIRROR_CLAMP_TO_EDGE_KHR = MIRROR_CLAMP_TO_EDGE,
}

enum VK_SAMPLER_ADDRESS_MODE_REPEAT = VkSamplerAddressMode.REPEAT;
enum VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT = VkSamplerAddressMode.MIRRORED_REPEAT;
enum VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE = VkSamplerAddressMode.CLAMP_TO_EDGE;
enum VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER = VkSamplerAddressMode.CLAMP_TO_BORDER;
enum VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE = VkSamplerAddressMode.MIRROR_CLAMP_TO_EDGE;
deprecated("aliased")
enum VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR = VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE;

enum VkSamplerCreateFlagBits : uint {
    SUBSAMPLED_BIT_EXT = 1,
    SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT = 2,
    DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = 8,
    NON_SEAMLESS_CUBE_MAP_BIT_EXT = 4,
    IMAGE_PROCESSING_BIT_QCOM = 16,
}

enum VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT = VkSamplerCreateFlagBits.SUBSAMPLED_BIT_EXT;
enum VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT = VkSamplerCreateFlagBits.SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT;
enum VK_SAMPLER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT = VkSamplerCreateFlagBits.DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT;
enum VK_SAMPLER_CREATE_NON_SEAMLESS_CUBE_MAP_BIT_EXT = VkSamplerCreateFlagBits.NON_SEAMLESS_CUBE_MAP_BIT_EXT;
enum VK_SAMPLER_CREATE_IMAGE_PROCESSING_BIT_QCOM = VkSamplerCreateFlagBits.IMAGE_PROCESSING_BIT_QCOM;

alias VkSamplerCreateFlags = VkFlags;

struct VkSamplerCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkFilter magFilter;
    VkFilter minFilter;
    VkSamplerMipmapMode mipmapMode;
    VkSamplerAddressMode addressModeU;
    VkSamplerAddressMode addressModeV;
    VkSamplerAddressMode addressModeW;
    float mipLodBias;
    VkBool32 anisotropyEnable;
    float maxAnisotropy;
    VkBool32 compareEnable;
    VkCompareOp compareOp;
    float minLod;
    float maxLod;
    VkBorderColor borderColor;
    VkBool32 unnormalizedCoordinates;
}

enum VkSamplerMipmapMode {
    NEAREST = 0,
    LINEAR = 1,
}

enum VK_SAMPLER_MIPMAP_MODE_NEAREST = VkSamplerMipmapMode.NEAREST;
enum VK_SAMPLER_MIPMAP_MODE_LINEAR = VkSamplerMipmapMode.LINEAR;

version (VK_VERSION_1_0) {
    extern VkResult vkCreateSampler(
        VkDevice device,
        const(VkSamplerCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkSampler* pSampler,
    );
    
    extern void vkDestroySampler(
        VkDevice device,
        VkSampler sampler,
        const(VkAllocationCallbacks)* pAllocator,
    );
}

// Descriptor set commands

struct VkCopyDescriptorSet {
    VkStructureType sType = VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET;
    const(void)* pNext;
    VkDescriptorSet srcSet;
    uint srcBinding;
    uint srcArrayElement;
    VkDescriptorSet dstSet;
    uint dstBinding;
    uint dstArrayElement;
    uint descriptorCount;
}

struct VkDescriptorBufferInfo {
    VkBuffer buffer;
    VkDeviceSize offset;
    VkDeviceSize range;
}

struct VkDescriptorImageInfo {
    VkSampler sampler;
    VkImageView imageView;
    VkImageLayout imageLayout;
}

alias VkDescriptorPool = OpaqueHandle!("VkDescriptorPool");

enum VkDescriptorPoolCreateFlagBits : uint {
    FREE_DESCRIPTOR_SET_BIT = 1,
    UPDATE_AFTER_BIND_BIT = 2,
    UPDATE_AFTER_BIND_BIT_EXT = UPDATE_AFTER_BIND_BIT,
    HOST_ONLY_BIT_VALVE = HOST_ONLY_BIT_EXT,
    HOST_ONLY_BIT_EXT = 4,
    ALLOW_OVERALLOCATION_SETS_BIT_NV = 8,
    ALLOW_OVERALLOCATION_POOLS_BIT_NV = 16,
}

enum VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT = VkDescriptorPoolCreateFlagBits.FREE_DESCRIPTOR_SET_BIT;
enum VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT = VkDescriptorPoolCreateFlagBits.UPDATE_AFTER_BIND_BIT;
enum VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT = VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT;
enum VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE = VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_EXT;
enum VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_EXT = VkDescriptorPoolCreateFlagBits.HOST_ONLY_BIT_EXT;
enum VK_DESCRIPTOR_POOL_CREATE_ALLOW_OVERALLOCATION_SETS_BIT_NV = VkDescriptorPoolCreateFlagBits.ALLOW_OVERALLOCATION_SETS_BIT_NV;
enum VK_DESCRIPTOR_POOL_CREATE_ALLOW_OVERALLOCATION_POOLS_BIT_NV = VkDescriptorPoolCreateFlagBits.ALLOW_OVERALLOCATION_POOLS_BIT_NV;

alias VkDescriptorPoolCreateFlags = VkFlags;

struct VkDescriptorPoolCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint maxSets;
    uint poolSizeCount;
    const(VkDescriptorPoolSize)* pPoolSizes;
}

alias VkDescriptorPoolResetFlags = VkFlags;

struct VkDescriptorPoolSize {
    VkDescriptorType type;
    uint descriptorCount;
}

alias VkDescriptorSet = OpaqueHandle!("VkDescriptorSet");

struct VkDescriptorSetAllocateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO;
    const(void)* pNext;
    VkDescriptorPool descriptorPool;
    uint descriptorSetCount;
    const(VkDescriptorSetLayout)* pSetLayouts;
}

alias VkDescriptorSetLayout = OpaqueHandle!("VkDescriptorSetLayout");

struct VkDescriptorSetLayoutBinding {
    uint binding;
    VkDescriptorType descriptorType;
    uint descriptorCount;
    VkFlags stageFlags;
    const(VkSampler)* pImmutableSamplers;
}

enum VkDescriptorSetLayoutCreateFlagBits : uint {
    UPDATE_AFTER_BIND_POOL_BIT = 2,
    PUSH_DESCRIPTOR_BIT = 1,
    PUSH_DESCRIPTOR_BIT_KHR = PUSH_DESCRIPTOR_BIT,
    UPDATE_AFTER_BIND_POOL_BIT_EXT = UPDATE_AFTER_BIND_POOL_BIT,
    DESCRIPTOR_BUFFER_BIT_EXT = 16,
    EMBEDDED_IMMUTABLE_SAMPLERS_BIT_EXT = 32,
    RESERVED_3_BIT_AMD = 8,
    HOST_ONLY_POOL_BIT_VALVE = HOST_ONLY_POOL_BIT_EXT,
    INDIRECT_BINDABLE_BIT_NV = 128,
    HOST_ONLY_POOL_BIT_EXT = 4,
    PER_STAGE_BIT_NV = 64,
}

enum VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT = VkDescriptorSetLayoutCreateFlagBits.UPDATE_AFTER_BIND_POOL_BIT;
enum VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT = VkDescriptorSetLayoutCreateFlagBits.PUSH_DESCRIPTOR_BIT;
enum VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR = VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT;
enum VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT = VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT;
enum VK_DESCRIPTOR_SET_LAYOUT_CREATE_DESCRIPTOR_BUFFER_BIT_EXT = VkDescriptorSetLayoutCreateFlagBits.DESCRIPTOR_BUFFER_BIT_EXT;
enum VK_DESCRIPTOR_SET_LAYOUT_CREATE_EMBEDDED_IMMUTABLE_SAMPLERS_BIT_EXT = VkDescriptorSetLayoutCreateFlagBits.EMBEDDED_IMMUTABLE_SAMPLERS_BIT_EXT;
enum VK_DESCRIPTOR_SET_LAYOUT_CREATE_RESERVED_3_BIT_AMD = VkDescriptorSetLayoutCreateFlagBits.RESERVED_3_BIT_AMD;
enum VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE = VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_EXT;
enum VK_DESCRIPTOR_SET_LAYOUT_CREATE_INDIRECT_BINDABLE_BIT_NV = VkDescriptorSetLayoutCreateFlagBits.INDIRECT_BINDABLE_BIT_NV;
enum VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_EXT = VkDescriptorSetLayoutCreateFlagBits.HOST_ONLY_POOL_BIT_EXT;
enum VK_DESCRIPTOR_SET_LAYOUT_CREATE_PER_STAGE_BIT_NV = VkDescriptorSetLayoutCreateFlagBits.PER_STAGE_BIT_NV;

alias VkDescriptorSetLayoutCreateFlags = VkFlags;

struct VkDescriptorSetLayoutCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint bindingCount;
    const(VkDescriptorSetLayoutBinding)* pBindings;
}

enum VkDescriptorType {
    SAMPLER = 0,
    COMBINED_IMAGE_SAMPLER = 1,
    SAMPLED_IMAGE = 2,
    STORAGE_IMAGE = 3,
    UNIFORM_TEXEL_BUFFER = 4,
    STORAGE_TEXEL_BUFFER = 5,
    UNIFORM_BUFFER = 6,
    STORAGE_BUFFER = 7,
    UNIFORM_BUFFER_DYNAMIC = 8,
    STORAGE_BUFFER_DYNAMIC = 9,
    INPUT_ATTACHMENT = 10,
    INLINE_UNIFORM_BLOCK = 1000138000,
    INLINE_UNIFORM_BLOCK_EXT = INLINE_UNIFORM_BLOCK,
    ACCELERATION_STRUCTURE_KHR = 1000150000,
    ACCELERATION_STRUCTURE_NV = 1000165000,
    MUTABLE_VALVE = MUTABLE_EXT,
    SAMPLE_WEIGHT_IMAGE_QCOM = 1000440000,
    BLOCK_MATCH_IMAGE_QCOM = 1000440001,
    TENSOR_ARM = 1000460000,
    MUTABLE_EXT = 1000351000,
    PARTITIONED_ACCELERATION_STRUCTURE_NV = 1000570000,
}

enum VK_DESCRIPTOR_TYPE_SAMPLER = VkDescriptorType.SAMPLER;
enum VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER = VkDescriptorType.COMBINED_IMAGE_SAMPLER;
enum VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE = VkDescriptorType.SAMPLED_IMAGE;
enum VK_DESCRIPTOR_TYPE_STORAGE_IMAGE = VkDescriptorType.STORAGE_IMAGE;
enum VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER = VkDescriptorType.UNIFORM_TEXEL_BUFFER;
enum VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER = VkDescriptorType.STORAGE_TEXEL_BUFFER;
enum VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER = VkDescriptorType.UNIFORM_BUFFER;
enum VK_DESCRIPTOR_TYPE_STORAGE_BUFFER = VkDescriptorType.STORAGE_BUFFER;
enum VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC = VkDescriptorType.UNIFORM_BUFFER_DYNAMIC;
enum VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC = VkDescriptorType.STORAGE_BUFFER_DYNAMIC;
enum VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT = VkDescriptorType.INPUT_ATTACHMENT;
enum VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK = VkDescriptorType.INLINE_UNIFORM_BLOCK;
enum VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT = VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK;
enum VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR = VkDescriptorType.ACCELERATION_STRUCTURE_KHR;
enum VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV = VkDescriptorType.ACCELERATION_STRUCTURE_NV;
enum VK_DESCRIPTOR_TYPE_MUTABLE_VALVE = VK_DESCRIPTOR_TYPE_MUTABLE_EXT;
enum VK_DESCRIPTOR_TYPE_SAMPLE_WEIGHT_IMAGE_QCOM = VkDescriptorType.SAMPLE_WEIGHT_IMAGE_QCOM;
enum VK_DESCRIPTOR_TYPE_BLOCK_MATCH_IMAGE_QCOM = VkDescriptorType.BLOCK_MATCH_IMAGE_QCOM;
enum VK_DESCRIPTOR_TYPE_TENSOR_ARM = VkDescriptorType.TENSOR_ARM;
enum VK_DESCRIPTOR_TYPE_MUTABLE_EXT = VkDescriptorType.MUTABLE_EXT;
enum VK_DESCRIPTOR_TYPE_PARTITIONED_ACCELERATION_STRUCTURE_NV = VkDescriptorType.PARTITIONED_ACCELERATION_STRUCTURE_NV;

struct VkWriteDescriptorSet {
    VkStructureType sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
    const(void)* pNext;
    VkDescriptorSet dstSet;
    uint dstBinding;
    uint dstArrayElement;
    uint descriptorCount;
    VkDescriptorType descriptorType;
    const(VkDescriptorImageInfo)* pImageInfo;
    const(VkDescriptorBufferInfo)* pBufferInfo;
    const(VkBufferView)* pTexelBufferView;
}

version (VK_VERSION_1_0) {
    extern VkResult vkCreateDescriptorSetLayout(
        VkDevice device,
        const(VkDescriptorSetLayoutCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkDescriptorSetLayout* pSetLayout,
    );
    
    extern void vkDestroyDescriptorSetLayout(
        VkDevice device,
        VkDescriptorSetLayout descriptorSetLayout,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern VkResult vkCreateDescriptorPool(
        VkDevice device,
        const(VkDescriptorPoolCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkDescriptorPool* pDescriptorPool,
    );
    
    extern void vkDestroyDescriptorPool(
        VkDevice device,
        VkDescriptorPool descriptorPool,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern VkResult vkResetDescriptorPool(
        VkDevice device,
        VkDescriptorPool descriptorPool,
        VkDescriptorPoolResetFlags flags,
    );
    
    extern VkResult vkAllocateDescriptorSets(
        VkDevice device,
        const(VkDescriptorSetAllocateInfo)* pAllocateInfo,
        VkDescriptorSet* pDescriptorSets,
    );
    
    extern VkResult vkFreeDescriptorSets(
        VkDevice device,
        VkDescriptorPool descriptorPool,
        uint descriptorSetCount,
        const(VkDescriptorSet)* pDescriptorSets,
    );
    
    extern void vkUpdateDescriptorSets(
        VkDevice device,
        uint descriptorWriteCount,
        const(VkWriteDescriptorSet)* pDescriptorWrites,
        uint descriptorCopyCount,
        const(VkCopyDescriptorSet)* pDescriptorCopies,
    );
}

// Pass commands

enum VkAccessFlagBits : uint {
    INDIRECT_COMMAND_READ_BIT = 1,
    INDEX_READ_BIT = 2,
    VERTEX_ATTRIBUTE_READ_BIT = 4,
    UNIFORM_READ_BIT = 8,
    INPUT_ATTACHMENT_READ_BIT = 16,
    SHADER_READ_BIT = 32,
    SHADER_WRITE_BIT = 64,
    COLOR_ATTACHMENT_READ_BIT = 128,
    COLOR_ATTACHMENT_WRITE_BIT = 256,
    DEPTH_STENCIL_ATTACHMENT_READ_BIT = 512,
    DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = 1024,
    TRANSFER_READ_BIT = 2048,
    TRANSFER_WRITE_BIT = 4096,
    HOST_READ_BIT = 8192,
    HOST_WRITE_BIT = 16384,
    MEMORY_READ_BIT = 32768,
    MEMORY_WRITE_BIT = 65536,
    NONE = 0,
    TRANSFORM_FEEDBACK_WRITE_BIT_EXT = 33554432,
    TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT = 67108864,
    TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT = 134217728,
    CONDITIONAL_RENDERING_READ_BIT_EXT = 1048576,
    COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT = 524288,
    ACCELERATION_STRUCTURE_READ_BIT_KHR = 2097152,
    ACCELERATION_STRUCTURE_WRITE_BIT_KHR = 4194304,
    SHADING_RATE_IMAGE_READ_BIT_NV = FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR,
    ACCELERATION_STRUCTURE_READ_BIT_NV = ACCELERATION_STRUCTURE_READ_BIT_KHR,
    ACCELERATION_STRUCTURE_WRITE_BIT_NV = ACCELERATION_STRUCTURE_WRITE_BIT_KHR,
    FRAGMENT_DENSITY_MAP_READ_BIT_EXT = 16777216,
    FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR = 8388608,
    COMMAND_PREPROCESS_READ_BIT_NV = COMMAND_PREPROCESS_READ_BIT_EXT,
    COMMAND_PREPROCESS_WRITE_BIT_NV = COMMAND_PREPROCESS_WRITE_BIT_EXT,
    NONE_KHR = NONE,
    COMMAND_PREPROCESS_READ_BIT_EXT = 131072,
    COMMAND_PREPROCESS_WRITE_BIT_EXT = 262144,
}

enum VK_ACCESS_INDIRECT_COMMAND_READ_BIT = VkAccessFlagBits.INDIRECT_COMMAND_READ_BIT;
enum VK_ACCESS_INDEX_READ_BIT = VkAccessFlagBits.INDEX_READ_BIT;
enum VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT = VkAccessFlagBits.VERTEX_ATTRIBUTE_READ_BIT;
enum VK_ACCESS_UNIFORM_READ_BIT = VkAccessFlagBits.UNIFORM_READ_BIT;
enum VK_ACCESS_INPUT_ATTACHMENT_READ_BIT = VkAccessFlagBits.INPUT_ATTACHMENT_READ_BIT;
enum VK_ACCESS_SHADER_READ_BIT = VkAccessFlagBits.SHADER_READ_BIT;
enum VK_ACCESS_SHADER_WRITE_BIT = VkAccessFlagBits.SHADER_WRITE_BIT;
enum VK_ACCESS_COLOR_ATTACHMENT_READ_BIT = VkAccessFlagBits.COLOR_ATTACHMENT_READ_BIT;
enum VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT = VkAccessFlagBits.COLOR_ATTACHMENT_WRITE_BIT;
enum VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT = VkAccessFlagBits.DEPTH_STENCIL_ATTACHMENT_READ_BIT;
enum VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = VkAccessFlagBits.DEPTH_STENCIL_ATTACHMENT_WRITE_BIT;
enum VK_ACCESS_TRANSFER_READ_BIT = VkAccessFlagBits.TRANSFER_READ_BIT;
enum VK_ACCESS_TRANSFER_WRITE_BIT = VkAccessFlagBits.TRANSFER_WRITE_BIT;
enum VK_ACCESS_HOST_READ_BIT = VkAccessFlagBits.HOST_READ_BIT;
enum VK_ACCESS_HOST_WRITE_BIT = VkAccessFlagBits.HOST_WRITE_BIT;
enum VK_ACCESS_MEMORY_READ_BIT = VkAccessFlagBits.MEMORY_READ_BIT;
enum VK_ACCESS_MEMORY_WRITE_BIT = VkAccessFlagBits.MEMORY_WRITE_BIT;
enum VK_ACCESS_NONE = VkAccessFlagBits.NONE;
enum VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT = VkAccessFlagBits.TRANSFORM_FEEDBACK_WRITE_BIT_EXT;
enum VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT = VkAccessFlagBits.TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT;
enum VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT = VkAccessFlagBits.TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT;
enum VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT = VkAccessFlagBits.CONDITIONAL_RENDERING_READ_BIT_EXT;
enum VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT = VkAccessFlagBits.COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT;
enum VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR = VkAccessFlagBits.ACCELERATION_STRUCTURE_READ_BIT_KHR;
enum VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR = VkAccessFlagBits.ACCELERATION_STRUCTURE_WRITE_BIT_KHR;
enum VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV = VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR;
enum VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV = VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR;
enum VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV = VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR;
enum VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT = VkAccessFlagBits.FRAGMENT_DENSITY_MAP_READ_BIT_EXT;
enum VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR = VkAccessFlagBits.FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR;
enum VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV = VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_EXT;
enum VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV = VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_EXT;
enum VK_ACCESS_NONE_KHR = VK_ACCESS_NONE;
enum VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_EXT = VkAccessFlagBits.COMMAND_PREPROCESS_READ_BIT_EXT;
enum VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_EXT = VkAccessFlagBits.COMMAND_PREPROCESS_WRITE_BIT_EXT;

alias VkAccessFlags = VkFlags;

struct VkAttachmentDescription {
    VkFlags flags;
    VkFormat format;
    VkSampleCountFlagBits samples;
    VkAttachmentLoadOp loadOp;
    VkAttachmentStoreOp storeOp;
    VkAttachmentLoadOp stencilLoadOp;
    VkAttachmentStoreOp stencilStoreOp;
    VkImageLayout initialLayout;
    VkImageLayout finalLayout;
}

enum VkAttachmentDescriptionFlagBits : uint {
    MAY_ALIAS_BIT = 1,
    RESERVED_1_BIT_KHR = 2,
    RESERVED_2_BIT_KHR = 4,
}

enum VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT = VkAttachmentDescriptionFlagBits.MAY_ALIAS_BIT;
enum VK_ATTACHMENT_DESCRIPTION_RESERVED_1_BIT_KHR = VkAttachmentDescriptionFlagBits.RESERVED_1_BIT_KHR;
enum VK_ATTACHMENT_DESCRIPTION_RESERVED_2_BIT_KHR = VkAttachmentDescriptionFlagBits.RESERVED_2_BIT_KHR;

alias VkAttachmentDescriptionFlags = VkFlags;

enum VkAttachmentLoadOp {
    LOAD = 0,
    CLEAR = 1,
    DONT_CARE = 2,
    NONE = 1000400000,
    NONE_EXT = NONE,
    NONE_KHR = NONE,
}

enum VK_ATTACHMENT_LOAD_OP_LOAD = VkAttachmentLoadOp.LOAD;
enum VK_ATTACHMENT_LOAD_OP_CLEAR = VkAttachmentLoadOp.CLEAR;
enum VK_ATTACHMENT_LOAD_OP_DONT_CARE = VkAttachmentLoadOp.DONT_CARE;
enum VK_ATTACHMENT_LOAD_OP_NONE = VkAttachmentLoadOp.NONE;
enum VK_ATTACHMENT_LOAD_OP_NONE_EXT = VK_ATTACHMENT_LOAD_OP_NONE;
enum VK_ATTACHMENT_LOAD_OP_NONE_KHR = VK_ATTACHMENT_LOAD_OP_NONE;

struct VkAttachmentReference {
    uint attachment;
    VkImageLayout layout;
}

enum VkAttachmentStoreOp {
    STORE = 0,
    DONT_CARE = 1,
    NONE = 1000301000,
    NONE_KHR = NONE,
    NONE_QCOM = NONE,
    NONE_EXT = NONE,
}

enum VK_ATTACHMENT_STORE_OP_STORE = VkAttachmentStoreOp.STORE;
enum VK_ATTACHMENT_STORE_OP_DONT_CARE = VkAttachmentStoreOp.DONT_CARE;
enum VK_ATTACHMENT_STORE_OP_NONE = VkAttachmentStoreOp.NONE;
enum VK_ATTACHMENT_STORE_OP_NONE_KHR = VK_ATTACHMENT_STORE_OP_NONE;
enum VK_ATTACHMENT_STORE_OP_NONE_QCOM = VK_ATTACHMENT_STORE_OP_NONE;
enum VK_ATTACHMENT_STORE_OP_NONE_EXT = VK_ATTACHMENT_STORE_OP_NONE;

enum VkDependencyFlagBits : uint {
    BY_REGION_BIT = 1,
    DEVICE_GROUP_BIT = 4,
    VIEW_LOCAL_BIT = 2,
    VIEW_LOCAL_BIT_KHR = VIEW_LOCAL_BIT,
    DEVICE_GROUP_BIT_KHR = DEVICE_GROUP_BIT,
    FEEDBACK_LOOP_BIT_EXT = 8,
    QUEUE_FAMILY_OWNERSHIP_TRANSFER_USE_ALL_STAGES_BIT_KHR = 32,
    ASYMMETRIC_EVENT_BIT_KHR = 64,
    EXTENSION_586_BIT_IMG = 16,
}

enum VK_DEPENDENCY_BY_REGION_BIT = VkDependencyFlagBits.BY_REGION_BIT;
enum VK_DEPENDENCY_DEVICE_GROUP_BIT = VkDependencyFlagBits.DEVICE_GROUP_BIT;
enum VK_DEPENDENCY_VIEW_LOCAL_BIT = VkDependencyFlagBits.VIEW_LOCAL_BIT;
enum VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR = VK_DEPENDENCY_VIEW_LOCAL_BIT;
enum VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR = VK_DEPENDENCY_DEVICE_GROUP_BIT;
enum VK_DEPENDENCY_FEEDBACK_LOOP_BIT_EXT = VkDependencyFlagBits.FEEDBACK_LOOP_BIT_EXT;
enum VK_DEPENDENCY_QUEUE_FAMILY_OWNERSHIP_TRANSFER_USE_ALL_STAGES_BIT_KHR = VkDependencyFlagBits.QUEUE_FAMILY_OWNERSHIP_TRANSFER_USE_ALL_STAGES_BIT_KHR;
enum VK_DEPENDENCY_ASYMMETRIC_EVENT_BIT_KHR = VkDependencyFlagBits.ASYMMETRIC_EVENT_BIT_KHR;
enum VK_DEPENDENCY_EXTENSION_586_BIT_IMG = VkDependencyFlagBits.EXTENSION_586_BIT_IMG;

alias VkDependencyFlags = VkFlags;

alias VkFramebuffer = OpaqueHandle!("VkFramebuffer");

enum VkFramebufferCreateFlagBits : uint {
    IMAGELESS_BIT = 1,
    IMAGELESS_BIT_KHR = IMAGELESS_BIT,
}

enum VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT = VkFramebufferCreateFlagBits.IMAGELESS_BIT;
enum VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR = VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT;

alias VkFramebufferCreateFlags = VkFlags;

struct VkFramebufferCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkRenderPass renderPass;
    uint attachmentCount;
    const(VkImageView)* pAttachments;
    uint width;
    uint height;
    uint layers;
}

enum VkPipelineBindPoint {
    GRAPHICS = 0,
    COMPUTE = 1,
    EXECUTION_GRAPH_AMDX = 1000134000,
    RAY_TRACING_KHR = 1000165000,
    RAY_TRACING_NV = RAY_TRACING_KHR,
    SUBPASS_SHADING_HUAWEI = 1000369003,
    DATA_GRAPH_ARM = 1000507000,
}

enum VK_PIPELINE_BIND_POINT_GRAPHICS = VkPipelineBindPoint.GRAPHICS;
enum VK_PIPELINE_BIND_POINT_COMPUTE = VkPipelineBindPoint.COMPUTE;
enum VK_PIPELINE_BIND_POINT_EXECUTION_GRAPH_AMDX = VkPipelineBindPoint.EXECUTION_GRAPH_AMDX;
enum VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR = VkPipelineBindPoint.RAY_TRACING_KHR;
enum VK_PIPELINE_BIND_POINT_RAY_TRACING_NV = VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR;
enum VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI = VkPipelineBindPoint.SUBPASS_SHADING_HUAWEI;
enum VK_PIPELINE_BIND_POINT_DATA_GRAPH_ARM = VkPipelineBindPoint.DATA_GRAPH_ARM;

alias VkRenderPass = OpaqueHandle!("VkRenderPass");

enum VkRenderPassCreateFlagBits : uint {
    RESERVED_3_BIT_IMG = 8,
    RESERVED_0_BIT_KHR = 1,
    TRANSFORM_BIT_QCOM = 2,
    PER_LAYER_FRAGMENT_DENSITY_BIT_VALVE = 4,
}

enum VK_RENDER_PASS_CREATE_RESERVED_3_BIT_IMG = VkRenderPassCreateFlagBits.RESERVED_3_BIT_IMG;
enum VK_RENDER_PASS_CREATE_RESERVED_0_BIT_KHR = VkRenderPassCreateFlagBits.RESERVED_0_BIT_KHR;
enum VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM = VkRenderPassCreateFlagBits.TRANSFORM_BIT_QCOM;
enum VK_RENDER_PASS_CREATE_PER_LAYER_FRAGMENT_DENSITY_BIT_VALVE = VkRenderPassCreateFlagBits.PER_LAYER_FRAGMENT_DENSITY_BIT_VALVE;

alias VkRenderPassCreateFlags = VkFlags;

struct VkRenderPassCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint attachmentCount;
    const(VkAttachmentDescription)* pAttachments;
    uint subpassCount;
    const(VkSubpassDescription)* pSubpasses;
    uint dependencyCount;
    const(VkSubpassDependency)* pDependencies;
}

struct VkSubpassDependency {
    uint srcSubpass;
    uint dstSubpass;
    VkFlags srcStageMask;
    VkFlags dstStageMask;
    VkFlags srcAccessMask;
    VkFlags dstAccessMask;
    VkFlags dependencyFlags;
}

struct VkSubpassDescription {
    VkFlags flags;
    VkPipelineBindPoint pipelineBindPoint;
    uint inputAttachmentCount;
    const(VkAttachmentReference)* pInputAttachments;
    uint colorAttachmentCount;
    const(VkAttachmentReference)* pColorAttachments;
    const(VkAttachmentReference)* pResolveAttachments;
    const(VkAttachmentReference)* pDepthStencilAttachment;
    uint preserveAttachmentCount;
    const(uint)* pPreserveAttachments;
}

enum VkSubpassDescriptionFlagBits : uint {
    PER_VIEW_ATTRIBUTES_BIT_NVX = 1,
    PER_VIEW_POSITION_X_ONLY_BIT_NVX = 2,
    FRAGMENT_REGION_BIT_QCOM = 4,
    SHADER_RESOLVE_BIT_QCOM = 8,
    TILE_SHADING_APRON_BIT_QCOM = 256,
    RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM = RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT,
    RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM = RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT,
    RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM = RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT,
    RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT = 16,
    RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT = 32,
    RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT = 64,
    ENABLE_LEGACY_DITHERING_BIT_EXT = 128,
}

enum VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX = VkSubpassDescriptionFlagBits.PER_VIEW_ATTRIBUTES_BIT_NVX;
enum VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX = VkSubpassDescriptionFlagBits.PER_VIEW_POSITION_X_ONLY_BIT_NVX;
enum VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM = VkSubpassDescriptionFlagBits.FRAGMENT_REGION_BIT_QCOM;
enum VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM = VkSubpassDescriptionFlagBits.SHADER_RESOLVE_BIT_QCOM;
enum VK_SUBPASS_DESCRIPTION_TILE_SHADING_APRON_BIT_QCOM = VkSubpassDescriptionFlagBits.TILE_SHADING_APRON_BIT_QCOM;
enum VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM = VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT;
enum VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM = VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT;
enum VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM = VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT;
enum VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT = VkSubpassDescriptionFlagBits.RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT;
enum VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT = VkSubpassDescriptionFlagBits.RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT;
enum VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT = VkSubpassDescriptionFlagBits.RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT;
enum VK_SUBPASS_DESCRIPTION_ENABLE_LEGACY_DITHERING_BIT_EXT = VkSubpassDescriptionFlagBits.ENABLE_LEGACY_DITHERING_BIT_EXT;

alias VkSubpassDescriptionFlags = VkFlags;

version (VK_VERSION_1_0) {
    extern VkResult vkCreateFramebuffer(
        VkDevice device,
        const(VkFramebufferCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkFramebuffer* pFramebuffer,
    );
    
    extern void vkDestroyFramebuffer(
        VkDevice device,
        VkFramebuffer framebuffer,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern VkResult vkCreateRenderPass(
        VkDevice device,
        const(VkRenderPassCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkRenderPass* pRenderPass,
    );
    
    extern void vkDestroyRenderPass(
        VkDevice device,
        VkRenderPass renderPass,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern void vkGetRenderAreaGranularity(
        VkDevice device,
        VkRenderPass renderPass,
        VkExtent2D* pGranularity,
    );
}

// Command pool commands

alias VkCommandPool = OpaqueHandle!("VkCommandPool");

enum VkCommandPoolCreateFlagBits : uint {
    TRANSIENT_BIT = 1,
    RESET_COMMAND_BUFFER_BIT = 2,
    PROTECTED_BIT = 4,
}

enum VK_COMMAND_POOL_CREATE_TRANSIENT_BIT = VkCommandPoolCreateFlagBits.TRANSIENT_BIT;
enum VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT = VkCommandPoolCreateFlagBits.RESET_COMMAND_BUFFER_BIT;
enum VK_COMMAND_POOL_CREATE_PROTECTED_BIT = VkCommandPoolCreateFlagBits.PROTECTED_BIT;

alias VkCommandPoolCreateFlags = VkFlags;

struct VkCommandPoolCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint queueFamilyIndex;
}

enum VkCommandPoolResetFlagBits : uint {
    RELEASE_RESOURCES_BIT = 1,
    RESERVED_1_BIT_COREAVI = 2,
}

enum VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT = VkCommandPoolResetFlagBits.RELEASE_RESOURCES_BIT;
enum VK_COMMAND_POOL_RESET_RESERVED_1_BIT_COREAVI = VkCommandPoolResetFlagBits.RESERVED_1_BIT_COREAVI;

alias VkCommandPoolResetFlags = VkFlags;

version (VK_VERSION_1_0) {
    extern VkResult vkCreateCommandPool(
        VkDevice device,
        const(VkCommandPoolCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkCommandPool* pCommandPool,
    );
    
    extern void vkDestroyCommandPool(
        VkDevice device,
        VkCommandPool commandPool,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern VkResult vkResetCommandPool(
        VkDevice device,
        VkCommandPool commandPool,
        VkCommandPoolResetFlags flags,
    );
}

// Command buffer commands

alias VkCommandBuffer = OpaqueHandle!("VkCommandBuffer");

struct VkCommandBufferAllocateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
    const(void)* pNext;
    VkCommandPool commandPool;
    VkCommandBufferLevel level;
    uint commandBufferCount;
}

struct VkCommandBufferBeginInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
    const(void)* pNext;
    VkFlags flags;
    const(VkCommandBufferInheritanceInfo)* pInheritanceInfo;
}

struct VkCommandBufferInheritanceInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO;
    const(void)* pNext;
    VkRenderPass renderPass;
    uint subpass;
    VkFramebuffer framebuffer;
    VkBool32 occlusionQueryEnable;
    VkFlags queryFlags;
    VkFlags pipelineStatistics;
}

enum VkCommandBufferLevel {
    PRIMARY = 0,
    SECONDARY = 1,
}

enum VK_COMMAND_BUFFER_LEVEL_PRIMARY = VkCommandBufferLevel.PRIMARY;
enum VK_COMMAND_BUFFER_LEVEL_SECONDARY = VkCommandBufferLevel.SECONDARY;

enum VkCommandBufferResetFlagBits : uint {
    RELEASE_RESOURCES_BIT = 1,
}

enum VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT = VkCommandBufferResetFlagBits.RELEASE_RESOURCES_BIT;

alias VkCommandBufferResetFlags = VkFlags;

enum VkCommandBufferUsageFlagBits : uint {
    ONE_TIME_SUBMIT_BIT = 1,
    RENDER_PASS_CONTINUE_BIT = 2,
    SIMULTANEOUS_USE_BIT = 4,
}

enum VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT = VkCommandBufferUsageFlagBits.ONE_TIME_SUBMIT_BIT;
enum VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT = VkCommandBufferUsageFlagBits.RENDER_PASS_CONTINUE_BIT;
enum VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT = VkCommandBufferUsageFlagBits.SIMULTANEOUS_USE_BIT;

alias VkCommandBufferUsageFlags = VkFlags;

enum VkQueryControlFlagBits : uint {
    PRECISE_BIT = 1,
}

enum VK_QUERY_CONTROL_PRECISE_BIT = VkQueryControlFlagBits.PRECISE_BIT;

alias VkQueryControlFlags = VkFlags;

version (VK_VERSION_1_0) {
    extern VkResult vkAllocateCommandBuffers(
        VkDevice device,
        const(VkCommandBufferAllocateInfo)* pAllocateInfo,
        VkCommandBuffer* pCommandBuffers,
    );
    
    extern void vkFreeCommandBuffers(
        VkDevice device,
        VkCommandPool commandPool,
        uint commandBufferCount,
        const(VkCommandBuffer)* pCommandBuffers,
    );
    
    extern VkResult vkBeginCommandBuffer(
        VkCommandBuffer commandBuffer,
        const(VkCommandBufferBeginInfo)* pBeginInfo,
    );
    
    extern VkResult vkEndCommandBuffer(
        VkCommandBuffer commandBuffer,
    );
    
    extern VkResult vkResetCommandBuffer(
        VkCommandBuffer commandBuffer,
        VkCommandBufferResetFlags flags,
    );
}

// Command buffer building commands

struct VkBufferCopy {
    VkDeviceSize srcOffset;
    VkDeviceSize dstOffset;
    VkDeviceSize size;
}

struct VkBufferImageCopy {
    VkDeviceSize bufferOffset;
    uint bufferRowLength;
    uint bufferImageHeight;
    VkImageSubresourceLayers imageSubresource;
    VkOffset3D imageOffset;
    VkExtent3D imageExtent;
}

struct VkClearAttachment {
    VkFlags aspectMask;
    uint colorAttachment;
    VkClearValue clearValue;
}

union VkClearColorValue {
    float float32;
    int int32;
    uint uint32;
}

struct VkClearDepthStencilValue {
    float depth;
    uint stencil;
}

struct VkClearRect {
    VkRect2D rect;
    uint baseArrayLayer;
    uint layerCount;
}

union VkClearValue {
    VkClearColorValue color;
    VkClearDepthStencilValue depthStencil;
}

struct VkImageBlit {
    VkImageSubresourceLayers srcSubresource;
    VkOffset3D srcOffsets;
    VkImageSubresourceLayers dstSubresource;
    VkOffset3D dstOffsets;
}

struct VkImageCopy {
    VkImageSubresourceLayers srcSubresource;
    VkOffset3D srcOffset;
    VkImageSubresourceLayers dstSubresource;
    VkOffset3D dstOffset;
    VkExtent3D extent;
}

struct VkImageResolve {
    VkImageSubresourceLayers srcSubresource;
    VkOffset3D srcOffset;
    VkImageSubresourceLayers dstSubresource;
    VkOffset3D dstOffset;
    VkExtent3D extent;
}

struct VkImageSubresourceLayers {
    VkFlags aspectMask;
    uint mipLevel;
    uint baseArrayLayer;
    uint layerCount;
}

enum VkIndexType {
    UINT16 = 0,
    UINT32 = 1,
    UINT8 = 1000265000,
    NONE_KHR = 1000165000,
    NONE_NV = NONE_KHR,
    UINT8_EXT = UINT8,
    UINT8_KHR = UINT8,
}

enum VK_INDEX_TYPE_UINT16 = VkIndexType.UINT16;
enum VK_INDEX_TYPE_UINT32 = VkIndexType.UINT32;
enum VK_INDEX_TYPE_UINT8 = VkIndexType.UINT8;
enum VK_INDEX_TYPE_NONE_KHR = VkIndexType.NONE_KHR;
enum VK_INDEX_TYPE_NONE_NV = VK_INDEX_TYPE_NONE_KHR;
enum VK_INDEX_TYPE_UINT8_EXT = VK_INDEX_TYPE_UINT8;
enum VK_INDEX_TYPE_UINT8_KHR = VK_INDEX_TYPE_UINT8;

struct VkRenderPassBeginInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
    const(void)* pNext;
    VkRenderPass renderPass;
    VkFramebuffer framebuffer;
    VkRect2D renderArea;
    uint clearValueCount;
    const(VkClearValue)* pClearValues;
}

enum VkStencilFaceFlagBits : uint {
    FRONT_BIT = 1,
    BACK_BIT = 2,
    FRONT_AND_BACK = 0x00000003,
    VK_STENCIL_FRONT_AND_BACK = FRONT_AND_BACK,
}

enum VK_STENCIL_FACE_FRONT_BIT = VkStencilFaceFlagBits.FRONT_BIT;
enum VK_STENCIL_FACE_BACK_BIT = VkStencilFaceFlagBits.BACK_BIT;
enum VK_STENCIL_FACE_FRONT_AND_BACK = VkStencilFaceFlagBits.FRONT_AND_BACK;
deprecated("aliased")
enum VK_STENCIL_FRONT_AND_BACK = VK_STENCIL_FACE_FRONT_AND_BACK;

alias VkStencilFaceFlags = VkFlags;

enum VkSubpassContents {
    INLINE = 0,
    SECONDARY_COMMAND_BUFFERS = 1,
    INLINE_AND_SECONDARY_COMMAND_BUFFERS_EXT = INLINE_AND_SECONDARY_COMMAND_BUFFERS_KHR,
    INLINE_AND_SECONDARY_COMMAND_BUFFERS_KHR = 1000451000,
}

enum VK_SUBPASS_CONTENTS_INLINE = VkSubpassContents.INLINE;
enum VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS = VkSubpassContents.SECONDARY_COMMAND_BUFFERS;
enum VK_SUBPASS_CONTENTS_INLINE_AND_SECONDARY_COMMAND_BUFFERS_EXT = VK_SUBPASS_CONTENTS_INLINE_AND_SECONDARY_COMMAND_BUFFERS_KHR;
enum VK_SUBPASS_CONTENTS_INLINE_AND_SECONDARY_COMMAND_BUFFERS_KHR = VkSubpassContents.INLINE_AND_SECONDARY_COMMAND_BUFFERS_KHR;

version (VK_VERSION_1_0) {
    extern void vkCmdBindPipeline(
        VkCommandBuffer commandBuffer,
        VkPipelineBindPoint pipelineBindPoint,
        VkPipeline pipeline,
    );
    
    extern void vkCmdSetViewport(
        VkCommandBuffer commandBuffer,
        uint firstViewport,
        uint viewportCount,
        const(VkViewport)* pViewports,
    );
    
    extern void vkCmdSetScissor(
        VkCommandBuffer commandBuffer,
        uint firstScissor,
        uint scissorCount,
        const(VkRect2D)* pScissors,
    );
    
    extern void vkCmdSetLineWidth(
        VkCommandBuffer commandBuffer,
        float lineWidth,
    );
    
    extern void vkCmdSetDepthBias(
        VkCommandBuffer commandBuffer,
        float depthBiasConstantFactor,
        float depthBiasClamp,
        float depthBiasSlopeFactor,
    );
    
    extern void vkCmdSetBlendConstants(
        VkCommandBuffer commandBuffer,
        const(float) blendConstants,
    );
    
    extern void vkCmdSetDepthBounds(
        VkCommandBuffer commandBuffer,
        float minDepthBounds,
        float maxDepthBounds,
    );
    
    extern void vkCmdSetStencilCompareMask(
        VkCommandBuffer commandBuffer,
        VkStencilFaceFlags faceMask,
        uint compareMask,
    );
    
    extern void vkCmdSetStencilWriteMask(
        VkCommandBuffer commandBuffer,
        VkStencilFaceFlags faceMask,
        uint writeMask,
    );
    
    extern void vkCmdSetStencilReference(
        VkCommandBuffer commandBuffer,
        VkStencilFaceFlags faceMask,
        uint reference,
    );
    
    extern void vkCmdBindDescriptorSets(
        VkCommandBuffer commandBuffer,
        VkPipelineBindPoint pipelineBindPoint,
        VkPipelineLayout layout,
        uint firstSet,
        uint descriptorSetCount,
        const(VkDescriptorSet)* pDescriptorSets,
        uint dynamicOffsetCount,
        const(uint)* pDynamicOffsets,
    );
    
    extern void vkCmdBindIndexBuffer(
        VkCommandBuffer commandBuffer,
        VkBuffer buffer,
        VkDeviceSize offset,
        VkIndexType indexType,
    );
    
    extern void vkCmdBindVertexBuffers(
        VkCommandBuffer commandBuffer,
        uint firstBinding,
        uint bindingCount,
        const(VkBuffer)* pBuffers,
        const(VkDeviceSize)* pOffsets,
    );
    
    extern void vkCmdDraw(
        VkCommandBuffer commandBuffer,
        uint vertexCount,
        uint instanceCount,
        uint firstVertex,
        uint firstInstance,
    );
    
    extern void vkCmdDrawIndexed(
        VkCommandBuffer commandBuffer,
        uint indexCount,
        uint instanceCount,
        uint firstIndex,
        int vertexOffset,
        uint firstInstance,
    );
    
    extern void vkCmdDrawIndirect(
        VkCommandBuffer commandBuffer,
        VkBuffer buffer,
        VkDeviceSize offset,
        uint drawCount,
        uint stride,
    );
    
    extern void vkCmdDrawIndexedIndirect(
        VkCommandBuffer commandBuffer,
        VkBuffer buffer,
        VkDeviceSize offset,
        uint drawCount,
        uint stride,
    );
    
    extern void vkCmdDispatch(
        VkCommandBuffer commandBuffer,
        uint groupCountX,
        uint groupCountY,
        uint groupCountZ,
    );
    
    extern void vkCmdDispatchIndirect(
        VkCommandBuffer commandBuffer,
        VkBuffer buffer,
        VkDeviceSize offset,
    );
    
    extern void vkCmdCopyBuffer(
        VkCommandBuffer commandBuffer,
        VkBuffer srcBuffer,
        VkBuffer dstBuffer,
        uint regionCount,
        const(VkBufferCopy)* pRegions,
    );
    
    extern void vkCmdCopyImage(
        VkCommandBuffer commandBuffer,
        VkImage srcImage,
        VkImageLayout srcImageLayout,
        VkImage dstImage,
        VkImageLayout dstImageLayout,
        uint regionCount,
        const(VkImageCopy)* pRegions,
    );
    
    extern void vkCmdBlitImage(
        VkCommandBuffer commandBuffer,
        VkImage srcImage,
        VkImageLayout srcImageLayout,
        VkImage dstImage,
        VkImageLayout dstImageLayout,
        uint regionCount,
        const(VkImageBlit)* pRegions,
        VkFilter filter,
    );
    
    extern void vkCmdCopyBufferToImage(
        VkCommandBuffer commandBuffer,
        VkBuffer srcBuffer,
        VkImage dstImage,
        VkImageLayout dstImageLayout,
        uint regionCount,
        const(VkBufferImageCopy)* pRegions,
    );
    
    extern void vkCmdCopyImageToBuffer(
        VkCommandBuffer commandBuffer,
        VkImage srcImage,
        VkImageLayout srcImageLayout,
        VkBuffer dstBuffer,
        uint regionCount,
        const(VkBufferImageCopy)* pRegions,
    );
    
    extern void vkCmdUpdateBuffer(
        VkCommandBuffer commandBuffer,
        VkBuffer dstBuffer,
        VkDeviceSize dstOffset,
        VkDeviceSize dataSize,
        const(void)* pData,
    );
    
    extern void vkCmdFillBuffer(
        VkCommandBuffer commandBuffer,
        VkBuffer dstBuffer,
        VkDeviceSize dstOffset,
        VkDeviceSize size,
        uint data,
    );
    
    extern void vkCmdClearColorImage(
        VkCommandBuffer commandBuffer,
        VkImage image,
        VkImageLayout imageLayout,
        const(VkClearColorValue)* pColor,
        uint rangeCount,
        const(VkImageSubresourceRange)* pRanges,
    );
    
    extern void vkCmdClearDepthStencilImage(
        VkCommandBuffer commandBuffer,
        VkImage image,
        VkImageLayout imageLayout,
        const(VkClearDepthStencilValue)* pDepthStencil,
        uint rangeCount,
        const(VkImageSubresourceRange)* pRanges,
    );
    
    extern void vkCmdClearAttachments(
        VkCommandBuffer commandBuffer,
        uint attachmentCount,
        const(VkClearAttachment)* pAttachments,
        uint rectCount,
        const(VkClearRect)* pRects,
    );
    
    extern void vkCmdResolveImage(
        VkCommandBuffer commandBuffer,
        VkImage srcImage,
        VkImageLayout srcImageLayout,
        VkImage dstImage,
        VkImageLayout dstImageLayout,
        uint regionCount,
        const(VkImageResolve)* pRegions,
    );
    
    extern void vkCmdSetEvent(
        VkCommandBuffer commandBuffer,
        VkEvent event,
        VkPipelineStageFlags stageMask,
    );
    
    extern void vkCmdResetEvent(
        VkCommandBuffer commandBuffer,
        VkEvent event,
        VkPipelineStageFlags stageMask,
    );
    
    extern void vkCmdWaitEvents(
        VkCommandBuffer commandBuffer,
        uint eventCount,
        const(VkEvent)* pEvents,
        VkPipelineStageFlags srcStageMask,
        VkPipelineStageFlags dstStageMask,
        uint memoryBarrierCount,
        const(VkMemoryBarrier)* pMemoryBarriers,
        uint bufferMemoryBarrierCount,
        const(VkBufferMemoryBarrier)* pBufferMemoryBarriers,
        uint imageMemoryBarrierCount,
        const(VkImageMemoryBarrier)* pImageMemoryBarriers,
    );
    
    extern void vkCmdPipelineBarrier(
        VkCommandBuffer commandBuffer,
        VkPipelineStageFlags srcStageMask,
        VkPipelineStageFlags dstStageMask,
        VkDependencyFlags dependencyFlags,
        uint memoryBarrierCount,
        const(VkMemoryBarrier)* pMemoryBarriers,
        uint bufferMemoryBarrierCount,
        const(VkBufferMemoryBarrier)* pBufferMemoryBarriers,
        uint imageMemoryBarrierCount,
        const(VkImageMemoryBarrier)* pImageMemoryBarriers,
    );
    
    extern void vkCmdBeginQuery(
        VkCommandBuffer commandBuffer,
        VkQueryPool queryPool,
        uint query,
        VkQueryControlFlags flags,
    );
    
    extern void vkCmdEndQuery(
        VkCommandBuffer commandBuffer,
        VkQueryPool queryPool,
        uint query,
    );
    
    extern void vkCmdResetQueryPool(
        VkCommandBuffer commandBuffer,
        VkQueryPool queryPool,
        uint firstQuery,
        uint queryCount,
    );
    
    extern void vkCmdWriteTimestamp(
        VkCommandBuffer commandBuffer,
        VkPipelineStageFlagBits pipelineStage,
        VkQueryPool queryPool,
        uint query,
    );
    
    extern void vkCmdCopyQueryPoolResults(
        VkCommandBuffer commandBuffer,
        VkQueryPool queryPool,
        uint firstQuery,
        uint queryCount,
        VkBuffer dstBuffer,
        VkDeviceSize dstOffset,
        VkDeviceSize stride,
        VkQueryResultFlags flags,
    );
    
    extern void vkCmdPushConstants(
        VkCommandBuffer commandBuffer,
        VkPipelineLayout layout,
        VkShaderStageFlags stageFlags,
        uint offset,
        uint size,
        const(void)* pValues,
    );
    
    extern void vkCmdBeginRenderPass(
        VkCommandBuffer commandBuffer,
        const(VkRenderPassBeginInfo)* pRenderPassBegin,
        VkSubpassContents contents,
    );
    
    extern void vkCmdNextSubpass(
        VkCommandBuffer commandBuffer,
        VkSubpassContents contents,
    );
    
    extern void vkCmdEndRenderPass(
        VkCommandBuffer commandBuffer,
    );
    
    extern void vkCmdExecuteCommands(
        VkCommandBuffer commandBuffer,
        uint commandBufferCount,
        const(VkCommandBuffer)* pCommandBuffers,
    );
}


enum VK_API_VERSION_1_1 = VK_MAKE_API_VERSION(0, 1, 1, 0);

// Device Initialization

version (VK_VERSION_1_1) {
    extern VkResult vkEnumerateInstanceVersion(
        uint* pApiVersion,
    );
}

// Originally based on VK_KHR_subgroup (extension 94), but the actual enum block used was, incorrectly, that of extension 95

struct VkPhysicalDeviceSubgroupProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES;
    void* pNext;
    uint subgroupSize;
    VkFlags supportedStages;
    VkFlags supportedOperations;
    VkBool32 quadOperationsInAllStages;
}

alias VkSubgroupFeatureFlags = VkFlags;

enum VkSubgroupFeatureFlagBits : uint {
    BASIC_BIT = 1,
    VOTE_BIT = 2,
    ARITHMETIC_BIT = 4,
    BALLOT_BIT = 8,
    SHUFFLE_BIT = 16,
    SHUFFLE_RELATIVE_BIT = 32,
    CLUSTERED_BIT = 64,
    QUAD_BIT = 128,
    ROTATE_BIT = 512,
    ROTATE_CLUSTERED_BIT = 1024,
    PARTITIONED_BIT_NV = 256,
    ROTATE_BIT_KHR = ROTATE_BIT,
    ROTATE_CLUSTERED_BIT_KHR = ROTATE_CLUSTERED_BIT,
}

enum VK_SUBGROUP_FEATURE_BASIC_BIT = VkSubgroupFeatureFlagBits.BASIC_BIT;
enum VK_SUBGROUP_FEATURE_VOTE_BIT = VkSubgroupFeatureFlagBits.VOTE_BIT;
enum VK_SUBGROUP_FEATURE_ARITHMETIC_BIT = VkSubgroupFeatureFlagBits.ARITHMETIC_BIT;
enum VK_SUBGROUP_FEATURE_BALLOT_BIT = VkSubgroupFeatureFlagBits.BALLOT_BIT;
enum VK_SUBGROUP_FEATURE_SHUFFLE_BIT = VkSubgroupFeatureFlagBits.SHUFFLE_BIT;
enum VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT = VkSubgroupFeatureFlagBits.SHUFFLE_RELATIVE_BIT;
enum VK_SUBGROUP_FEATURE_CLUSTERED_BIT = VkSubgroupFeatureFlagBits.CLUSTERED_BIT;
enum VK_SUBGROUP_FEATURE_QUAD_BIT = VkSubgroupFeatureFlagBits.QUAD_BIT;
enum VK_SUBGROUP_FEATURE_ROTATE_BIT = VkSubgroupFeatureFlagBits.ROTATE_BIT;
enum VK_SUBGROUP_FEATURE_ROTATE_CLUSTERED_BIT = VkSubgroupFeatureFlagBits.ROTATE_CLUSTERED_BIT;
enum VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV = VkSubgroupFeatureFlagBits.PARTITIONED_BIT_NV;
enum VK_SUBGROUP_FEATURE_ROTATE_BIT_KHR = VK_SUBGROUP_FEATURE_ROTATE_BIT;
enum VK_SUBGROUP_FEATURE_ROTATE_CLUSTERED_BIT_KHR = VK_SUBGROUP_FEATURE_ROTATE_CLUSTERED_BIT;

// Promoted from VK_KHR_bind_memory2

struct VkBindBufferMemoryInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO;
    const(void)* pNext;
    VkBuffer buffer;
    VkDeviceMemory memory;
    VkDeviceSize memoryOffset;
}

struct VkBindImageMemoryInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO;
    const(void)* pNext;
    VkImage image;
    VkDeviceMemory memory;
    VkDeviceSize memoryOffset;
}

version (VK_VERSION_1_1) {
    extern VkResult vkBindBufferMemory2(
        VkDevice device,
        uint bindInfoCount,
        const(VkBindBufferMemoryInfo)* pBindInfos,
    );
    
    extern VkResult vkBindImageMemory2(
        VkDevice device,
        uint bindInfoCount,
        const(VkBindImageMemoryInfo)* pBindInfos,
    );
}

// Promoted from VK_KHR_16bit_storage

struct VkPhysicalDevice16BitStorageFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES;
    void* pNext;
    VkBool32 storageBuffer16BitAccess;
    VkBool32 uniformAndStorageBuffer16BitAccess;
    VkBool32 storagePushConstant16;
    VkBool32 storageInputOutput16;
}

// Promoted from VK_KHR_dedicated_allocation

struct VkMemoryDedicatedRequirements {
    VkStructureType sType = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS;
    void* pNext;
    VkBool32 prefersDedicatedAllocation;
    VkBool32 requiresDedicatedAllocation;
}

struct VkMemoryDedicatedAllocateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO;
    const(void)* pNext;
    VkImage image;
    VkBuffer buffer;
}

// Promoted from VK_KHR_device_group

alias VkPeerMemoryFeatureFlags = VkFlags;

enum VkPeerMemoryFeatureFlagBits : uint {
    COPY_SRC_BIT = 1,
    COPY_DST_BIT = 2,
    GENERIC_SRC_BIT = 4,
    GENERIC_DST_BIT = 8,
    COPY_SRC_BIT_KHR = COPY_SRC_BIT,
    COPY_DST_BIT_KHR = COPY_DST_BIT,
    GENERIC_SRC_BIT_KHR = GENERIC_SRC_BIT,
    GENERIC_DST_BIT_KHR = GENERIC_DST_BIT,
}

enum VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT = VkPeerMemoryFeatureFlagBits.COPY_SRC_BIT;
enum VK_PEER_MEMORY_FEATURE_COPY_DST_BIT = VkPeerMemoryFeatureFlagBits.COPY_DST_BIT;
enum VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT = VkPeerMemoryFeatureFlagBits.GENERIC_SRC_BIT;
enum VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT = VkPeerMemoryFeatureFlagBits.GENERIC_DST_BIT;
enum VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR = VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT;
enum VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR = VK_PEER_MEMORY_FEATURE_COPY_DST_BIT;
enum VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR = VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT;
enum VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR = VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT;

alias VkMemoryAllocateFlags = VkFlags;

enum VkMemoryAllocateFlagBits : uint {
    DEVICE_MASK_BIT = 1,
    DEVICE_ADDRESS_BIT = 2,
    DEVICE_ADDRESS_CAPTURE_REPLAY_BIT = 4,
    DEVICE_MASK_BIT_KHR = DEVICE_MASK_BIT,
    DEVICE_ADDRESS_BIT_KHR = DEVICE_ADDRESS_BIT,
    DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR = DEVICE_ADDRESS_CAPTURE_REPLAY_BIT,
    ZERO_INITIALIZE_BIT_EXT = 8,
}

enum VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT = VkMemoryAllocateFlagBits.DEVICE_MASK_BIT;
enum VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT = VkMemoryAllocateFlagBits.DEVICE_ADDRESS_BIT;
enum VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT = VkMemoryAllocateFlagBits.DEVICE_ADDRESS_CAPTURE_REPLAY_BIT;
enum VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR = VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT;
enum VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR = VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT;
enum VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR = VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT;
enum VK_MEMORY_ALLOCATE_ZERO_INITIALIZE_BIT_EXT = VkMemoryAllocateFlagBits.ZERO_INITIALIZE_BIT_EXT;

struct VkMemoryAllocateFlagsInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint deviceMask;
}

struct VkDeviceGroupRenderPassBeginInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO;
    const(void)* pNext;
    uint deviceMask;
    uint deviceRenderAreaCount;
    const(VkRect2D)* pDeviceRenderAreas;
}

struct VkDeviceGroupCommandBufferBeginInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO;
    const(void)* pNext;
    uint deviceMask;
}

struct VkDeviceGroupSubmitInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO;
    const(void)* pNext;
    uint waitSemaphoreCount;
    const(uint)* pWaitSemaphoreDeviceIndices;
    uint commandBufferCount;
    const(uint)* pCommandBufferDeviceMasks;
    uint signalSemaphoreCount;
    const(uint)* pSignalSemaphoreDeviceIndices;
}

struct VkDeviceGroupBindSparseInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO;
    const(void)* pNext;
    uint resourceDeviceIndex;
    uint memoryDeviceIndex;
}

version (VK_VERSION_1_1) {
    extern void vkGetDeviceGroupPeerMemoryFeatures(
        VkDevice device,
        uint heapIndex,
        uint localDeviceIndex,
        uint remoteDeviceIndex,
        VkPeerMemoryFeatureFlags* pPeerMemoryFeatures,
    );
    
    extern void vkCmdSetDeviceMask(
        VkCommandBuffer commandBuffer,
        uint deviceMask,
    );
    
    extern void vkCmdDispatchBase(
        VkCommandBuffer commandBuffer,
        uint baseGroupX,
        uint baseGroupY,
        uint baseGroupZ,
        uint groupCountX,
        uint groupCountY,
        uint groupCountZ,
    );
}

// Promoted from VK_KHR_device_group + VK_KHR_bind_memory2

struct VkBindBufferMemoryDeviceGroupInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO;
    const(void)* pNext;
    uint deviceIndexCount;
    const(uint)* pDeviceIndices;
}

struct VkBindImageMemoryDeviceGroupInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO;
    const(void)* pNext;
    uint deviceIndexCount;
    const(uint)* pDeviceIndices;
    uint splitInstanceBindRegionCount;
    const(VkRect2D)* pSplitInstanceBindRegions;
}

// Promoted from VK_KHR_device_group_creation

enum uint VK_MAX_DEVICE_GROUP_SIZE = 32;

struct VkPhysicalDeviceGroupProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES;
    void* pNext;
    uint physicalDeviceCount;
    VkPhysicalDevice[VK_MAX_DEVICE_GROUP_SIZE] physicalDevices;
    VkBool32 subsetAllocation;
}

struct VkDeviceGroupDeviceCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO;
    const(void)* pNext;
    uint physicalDeviceCount;
    const(VkPhysicalDevice)* pPhysicalDevices;
}

version (VK_VERSION_1_1) {
    extern VkResult vkEnumeratePhysicalDeviceGroups(
        VkInstance instance,
        uint* pPhysicalDeviceGroupCount,
        VkPhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties,
    );
}

// Promoted from VK_KHR_get_memory_requirements2

struct VkBufferMemoryRequirementsInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2;
    const(void)* pNext;
    VkBuffer buffer;
}

struct VkImageMemoryRequirementsInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2;
    const(void)* pNext;
    VkImage image;
}

struct VkImageSparseMemoryRequirementsInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2;
    const(void)* pNext;
    VkImage image;
}

struct VkMemoryRequirements2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2;
    void* pNext;
    VkMemoryRequirements memoryRequirements;
}

struct VkSparseImageMemoryRequirements2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2;
    void* pNext;
    VkSparseImageMemoryRequirements memoryRequirements;
}

version (VK_VERSION_1_1) {
    extern void vkGetImageMemoryRequirements2(
        VkDevice device,
        const(VkImageMemoryRequirementsInfo2)* pInfo,
        VkMemoryRequirements2* pMemoryRequirements,
    );
    
    extern void vkGetBufferMemoryRequirements2(
        VkDevice device,
        const(VkBufferMemoryRequirementsInfo2)* pInfo,
        VkMemoryRequirements2* pMemoryRequirements,
    );
    
    extern void vkGetImageSparseMemoryRequirements2(
        VkDevice device,
        const(VkImageSparseMemoryRequirementsInfo2)* pInfo,
        uint* pSparseMemoryRequirementCount,
        VkSparseImageMemoryRequirements2* pSparseMemoryRequirements,
    );
}

// Promoted from VK_KHR_get_physical_device_properties2

struct VkPhysicalDeviceFeatures2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2;
    void* pNext;
    VkPhysicalDeviceFeatures features;
}

struct VkPhysicalDeviceProperties2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    void* pNext;
    VkPhysicalDeviceProperties properties;
}

struct VkFormatProperties2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2;
    void* pNext;
    VkFormatProperties formatProperties;
}

struct VkImageFormatProperties2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2;
    void* pNext;
    VkImageFormatProperties imageFormatProperties;
}

struct VkPhysicalDeviceImageFormatInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2;
    const(void)* pNext;
    VkFormat format;
    VkImageType type;
    VkImageTiling tiling;
    VkFlags usage;
    VkFlags flags;
}

struct VkQueueFamilyProperties2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2;
    void* pNext;
    VkQueueFamilyProperties queueFamilyProperties;
}

struct VkPhysicalDeviceMemoryProperties2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2;
    void* pNext;
    VkPhysicalDeviceMemoryProperties memoryProperties;
}

struct VkSparseImageFormatProperties2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2;
    void* pNext;
    VkSparseImageFormatProperties properties;
}

struct VkPhysicalDeviceSparseImageFormatInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2;
    const(void)* pNext;
    VkFormat format;
    VkImageType type;
    VkSampleCountFlagBits samples;
    VkFlags usage;
    VkImageTiling tiling;
}

version (VK_VERSION_1_1) {
    extern void vkGetPhysicalDeviceFeatures2(
        VkPhysicalDevice physicalDevice,
        VkPhysicalDeviceFeatures2* pFeatures,
    );
    
    extern void vkGetPhysicalDeviceProperties2(
        VkPhysicalDevice physicalDevice,
        VkPhysicalDeviceProperties2* pProperties,
    );
    
    extern void vkGetPhysicalDeviceFormatProperties2(
        VkPhysicalDevice physicalDevice,
        VkFormat format,
        VkFormatProperties2* pFormatProperties,
    );
    
    extern VkResult vkGetPhysicalDeviceImageFormatProperties2(
        VkPhysicalDevice physicalDevice,
        const(VkPhysicalDeviceImageFormatInfo2)* pImageFormatInfo,
        VkImageFormatProperties2* pImageFormatProperties,
    );
    
    extern void vkGetPhysicalDeviceQueueFamilyProperties2(
        VkPhysicalDevice physicalDevice,
        uint* pQueueFamilyPropertyCount,
        VkQueueFamilyProperties2* pQueueFamilyProperties,
    );
    
    extern void vkGetPhysicalDeviceMemoryProperties2(
        VkPhysicalDevice physicalDevice,
        VkPhysicalDeviceMemoryProperties2* pMemoryProperties,
    );
    
    extern void vkGetPhysicalDeviceSparseImageFormatProperties2(
        VkPhysicalDevice physicalDevice,
        const(VkPhysicalDeviceSparseImageFormatInfo2)* pFormatInfo,
        uint* pPropertyCount,
        VkSparseImageFormatProperties2* pProperties,
    );
}

// Promoted from VK_KHR_maintenance1

alias VkCommandPoolTrimFlags = VkFlags;

version (VK_VERSION_1_1) {
    extern void vkTrimCommandPool(
        VkDevice device,
        VkCommandPool commandPool,
        VkCommandPoolTrimFlags flags,
    );
}

// Promoted from VK_KHR_maintenance2

struct VkPhysicalDevicePointClippingProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES;
    void* pNext;
    VkPointClippingBehavior pointClippingBehavior;
}

enum VkPointClippingBehavior {
    ALL_CLIP_PLANES = 0,
    USER_CLIP_PLANES_ONLY = 1,
    ALL_CLIP_PLANES_KHR = ALL_CLIP_PLANES,
    USER_CLIP_PLANES_ONLY_KHR = USER_CLIP_PLANES_ONLY,
}

enum VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES = VkPointClippingBehavior.ALL_CLIP_PLANES;
enum VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY = VkPointClippingBehavior.USER_CLIP_PLANES_ONLY;
enum VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR = VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES;
enum VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR = VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY;

struct VkRenderPassInputAttachmentAspectCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO;
    const(void)* pNext;
    uint aspectReferenceCount;
    const(VkInputAttachmentAspectReference)* pAspectReferences;
}

struct VkInputAttachmentAspectReference {
    uint subpass;
    uint inputAttachmentIndex;
    VkFlags aspectMask;
}

struct VkImageViewUsageCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO;
    const(void)* pNext;
    VkFlags usage;
}

enum VkTessellationDomainOrigin {
    UPPER_LEFT = 0,
    LOWER_LEFT = 1,
    UPPER_LEFT_KHR = UPPER_LEFT,
    LOWER_LEFT_KHR = LOWER_LEFT,
}

enum VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT = VkTessellationDomainOrigin.UPPER_LEFT;
enum VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT = VkTessellationDomainOrigin.LOWER_LEFT;
enum VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR = VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT;
enum VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR = VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT;

struct VkPipelineTessellationDomainOriginStateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO;
    const(void)* pNext;
    VkTessellationDomainOrigin domainOrigin;
}

// Promoted from VK_KHR_multiview

struct VkRenderPassMultiviewCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO;
    const(void)* pNext;
    uint subpassCount;
    const(uint)* pViewMasks;
    uint dependencyCount;
    const(int)* pViewOffsets;
    uint correlationMaskCount;
    const(uint)* pCorrelationMasks;
}

struct VkPhysicalDeviceMultiviewFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES;
    void* pNext;
    VkBool32 multiview;
    VkBool32 multiviewGeometryShader;
    VkBool32 multiviewTessellationShader;
}

struct VkPhysicalDeviceMultiviewProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES;
    void* pNext;
    uint maxMultiviewViewCount;
    uint maxMultiviewInstanceIndex;
}

// Promoted from VK_KHR_variable_pointers

alias VkPhysicalDeviceVariablePointerFeatures = VkPhysicalDeviceVariablePointersFeatures;

struct VkPhysicalDeviceVariablePointersFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES;
    void* pNext;
    VkBool32 variablePointersStorageBuffer;
    VkBool32 variablePointers;
}

// Originally based on VK_KHR_protected_memory (extension 146), which was never published; thus the mystifying large value= numbers below. These are not aliased since they were not actually promoted from an extension.

enum VkDeviceQueueCreateFlagBits : uint {
    PROTECTED_BIT = 1,
    RESERVED_1_BIT_QCOM = 2,
    RESERVED_2_BIT_EXT = 4,
}

enum VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT = VkDeviceQueueCreateFlagBits.PROTECTED_BIT;
enum VK_DEVICE_QUEUE_CREATE_RESERVED_1_BIT_QCOM = VkDeviceQueueCreateFlagBits.RESERVED_1_BIT_QCOM;
enum VK_DEVICE_QUEUE_CREATE_RESERVED_2_BIT_EXT = VkDeviceQueueCreateFlagBits.RESERVED_2_BIT_EXT;

struct VkPhysicalDeviceProtectedMemoryFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES;
    void* pNext;
    VkBool32 protectedMemory;
}

struct VkPhysicalDeviceProtectedMemoryProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES;
    void* pNext;
    VkBool32 protectedNoFault;
}

struct VkDeviceQueueInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2;
    const(void)* pNext;
    VkFlags flags;
    uint queueFamilyIndex;
    uint queueIndex;
}

struct VkProtectedSubmitInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO;
    const(void)* pNext;
    VkBool32 protectedSubmit;
}

version (VK_VERSION_1_1) {
    extern void vkGetDeviceQueue2(
        VkDevice device,
        const(VkDeviceQueueInfo2)* pQueueInfo,
        VkQueue* pQueue,
    );
}

// Promoted from VK_KHR_sampler_ycbcr_conversion

struct VkSamplerYcbcrConversionCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO;
    const(void)* pNext;
    VkFormat format;
    VkSamplerYcbcrModelConversion ycbcrModel;
    VkSamplerYcbcrRange ycbcrRange;
    VkComponentMapping components;
    VkChromaLocation xChromaOffset;
    VkChromaLocation yChromaOffset;
    VkFilter chromaFilter;
    VkBool32 forceExplicitReconstruction;
}

struct VkSamplerYcbcrConversionInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO;
    const(void)* pNext;
    VkSamplerYcbcrConversion conversion;
}

struct VkBindImagePlaneMemoryInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO;
    const(void)* pNext;
    VkImageAspectFlagBits planeAspect;
}

struct VkImagePlaneMemoryRequirementsInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO;
    const(void)* pNext;
    VkImageAspectFlagBits planeAspect;
}

struct VkPhysicalDeviceSamplerYcbcrConversionFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES;
    void* pNext;
    VkBool32 samplerYcbcrConversion;
}

struct VkSamplerYcbcrConversionImageFormatProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES;
    void* pNext;
    uint combinedImageSamplerDescriptorCount;
}

alias VkSamplerYcbcrConversion = OpaqueHandle!("VkSamplerYcbcrConversion");

enum VkSamplerYcbcrModelConversion {
    RGB_IDENTITY = 0,
    YCBCR_IDENTITY = 1,
    YCBCR_709 = 2,
    YCBCR_601 = 3,
    YCBCR_2020 = 4,
    RGB_IDENTITY_KHR = RGB_IDENTITY,
    YCBCR_IDENTITY_KHR = YCBCR_IDENTITY,
    YCBCR_709_KHR = YCBCR_709,
    YCBCR_601_KHR = YCBCR_601,
    YCBCR_2020_KHR = YCBCR_2020,
}

enum VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY = VkSamplerYcbcrModelConversion.RGB_IDENTITY;
enum VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY = VkSamplerYcbcrModelConversion.YCBCR_IDENTITY;
enum VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709 = VkSamplerYcbcrModelConversion.YCBCR_709;
enum VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601 = VkSamplerYcbcrModelConversion.YCBCR_601;
enum VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020 = VkSamplerYcbcrModelConversion.YCBCR_2020;
enum VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR = VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY;
enum VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY;
enum VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709;
enum VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601;
enum VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020;

enum VkSamplerYcbcrRange {
    ITU_FULL = 0,
    ITU_NARROW = 1,
    ITU_FULL_KHR = ITU_FULL,
    ITU_NARROW_KHR = ITU_NARROW,
}

enum VK_SAMPLER_YCBCR_RANGE_ITU_FULL = VkSamplerYcbcrRange.ITU_FULL;
enum VK_SAMPLER_YCBCR_RANGE_ITU_NARROW = VkSamplerYcbcrRange.ITU_NARROW;
enum VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR = VK_SAMPLER_YCBCR_RANGE_ITU_FULL;
enum VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR = VK_SAMPLER_YCBCR_RANGE_ITU_NARROW;

enum VkChromaLocation {
    COSITED_EVEN = 0,
    MIDPOINT = 1,
    COSITED_EVEN_KHR = COSITED_EVEN,
    MIDPOINT_KHR = MIDPOINT,
}

enum VK_CHROMA_LOCATION_COSITED_EVEN = VkChromaLocation.COSITED_EVEN;
enum VK_CHROMA_LOCATION_MIDPOINT = VkChromaLocation.MIDPOINT;
enum VK_CHROMA_LOCATION_COSITED_EVEN_KHR = VK_CHROMA_LOCATION_COSITED_EVEN;
enum VK_CHROMA_LOCATION_MIDPOINT_KHR = VK_CHROMA_LOCATION_MIDPOINT;

version (VK_VERSION_1_1) {
    extern VkResult vkCreateSamplerYcbcrConversion(
        VkDevice device,
        const(VkSamplerYcbcrConversionCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkSamplerYcbcrConversion* pYcbcrConversion,
    );
    
    extern void vkDestroySamplerYcbcrConversion(
        VkDevice device,
        VkSamplerYcbcrConversion ycbcrConversion,
        const(VkAllocationCallbacks)* pAllocator,
    );
}

// Promoted from VK_KHR_descriptor_update_template

alias VkDescriptorUpdateTemplate = OpaqueHandle!("VkDescriptorUpdateTemplate");

alias VkDescriptorUpdateTemplateCreateFlags = VkFlags;

enum VkDescriptorUpdateTemplateType {
    DESCRIPTOR_SET = 0,
    PUSH_DESCRIPTORS = 1,
    PUSH_DESCRIPTORS_KHR = PUSH_DESCRIPTORS,
    DESCRIPTOR_SET_KHR = DESCRIPTOR_SET,
}

enum VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET = VkDescriptorUpdateTemplateType.DESCRIPTOR_SET;
enum VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS = VkDescriptorUpdateTemplateType.PUSH_DESCRIPTORS;
enum VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR = VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS;
enum VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR = VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET;

struct VkDescriptorUpdateTemplateEntry {
    uint dstBinding;
    uint dstArrayElement;
    uint descriptorCount;
    VkDescriptorType descriptorType;
    size_t offset;
    size_t stride;
}

struct VkDescriptorUpdateTemplateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint descriptorUpdateEntryCount;
    const(VkDescriptorUpdateTemplateEntry)* pDescriptorUpdateEntries;
    VkDescriptorUpdateTemplateType templateType;
    VkDescriptorSetLayout descriptorSetLayout;
    VkPipelineBindPoint pipelineBindPoint;
    VkPipelineLayout pipelineLayout;
    uint set;
}

version (VK_VERSION_1_1) {
    extern VkResult vkCreateDescriptorUpdateTemplate(
        VkDevice device,
        const(VkDescriptorUpdateTemplateCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkDescriptorUpdateTemplate* pDescriptorUpdateTemplate,
    );
    
    extern void vkDestroyDescriptorUpdateTemplate(
        VkDevice device,
        VkDescriptorUpdateTemplate descriptorUpdateTemplate,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern void vkUpdateDescriptorSetWithTemplate(
        VkDevice device,
        VkDescriptorSet descriptorSet,
        VkDescriptorUpdateTemplate descriptorUpdateTemplate,
        const(void)* pData,
    );
}

// Promoted from VK_KHR_external_memory_capabilities

enum uint VK_LUID_SIZE = 8;

alias VkExternalMemoryHandleTypeFlags = VkFlags;

enum VkExternalMemoryHandleTypeFlagBits : uint {
    OPAQUE_FD_BIT = 1,
    OPAQUE_WIN32_BIT = 2,
    OPAQUE_WIN32_KMT_BIT = 4,
    D3D11_TEXTURE_BIT = 8,
    D3D11_TEXTURE_KMT_BIT = 16,
    D3D12_HEAP_BIT = 32,
    D3D12_RESOURCE_BIT = 64,
    OPAQUE_FD_BIT_KHR = OPAQUE_FD_BIT,
    OPAQUE_WIN32_BIT_KHR = OPAQUE_WIN32_BIT,
    OPAQUE_WIN32_KMT_BIT_KHR = OPAQUE_WIN32_KMT_BIT,
    D3D11_TEXTURE_BIT_KHR = D3D11_TEXTURE_BIT,
    D3D11_TEXTURE_KMT_BIT_KHR = D3D11_TEXTURE_KMT_BIT,
    D3D12_HEAP_BIT_KHR = D3D12_HEAP_BIT,
    D3D12_RESOURCE_BIT_KHR = D3D12_RESOURCE_BIT,
    DMA_BUF_BIT_EXT = 512,
    ANDROID_HARDWARE_BUFFER_BIT_ANDROID = 1024,
    HOST_ALLOCATION_BIT_EXT = 128,
    HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT = 256,
    ZIRCON_VMO_BIT_FUCHSIA = 2048,
    RDMA_ADDRESS_BIT_NV = 4096,
    SCI_BUF_BIT_NV = 8192,
    SCREEN_BUFFER_BIT_QNX = 16384,
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_590_BIT_HUAWEI = 32768,
    MTLBUFFER_BIT_EXT = 65536,
    MTLTEXTURE_BIT_EXT = 131072,
    MTLHEAP_BIT_EXT = 262144,
}

enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT = VkExternalMemoryHandleTypeFlagBits.OPAQUE_FD_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT = VkExternalMemoryHandleTypeFlagBits.OPAQUE_WIN32_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT = VkExternalMemoryHandleTypeFlagBits.OPAQUE_WIN32_KMT_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT = VkExternalMemoryHandleTypeFlagBits.D3D11_TEXTURE_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT = VkExternalMemoryHandleTypeFlagBits.D3D11_TEXTURE_KMT_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT = VkExternalMemoryHandleTypeFlagBits.D3D12_HEAP_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT = VkExternalMemoryHandleTypeFlagBits.D3D12_RESOURCE_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT = VkExternalMemoryHandleTypeFlagBits.DMA_BUF_BIT_EXT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID = VkExternalMemoryHandleTypeFlagBits.ANDROID_HARDWARE_BUFFER_BIT_ANDROID;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT = VkExternalMemoryHandleTypeFlagBits.HOST_ALLOCATION_BIT_EXT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT = VkExternalMemoryHandleTypeFlagBits.HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA = VkExternalMemoryHandleTypeFlagBits.ZIRCON_VMO_BIT_FUCHSIA;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV = VkExternalMemoryHandleTypeFlagBits.RDMA_ADDRESS_BIT_NV;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCI_BUF_BIT_NV = VkExternalMemoryHandleTypeFlagBits.SCI_BUF_BIT_NV;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCREEN_BUFFER_BIT_QNX = VkExternalMemoryHandleTypeFlagBits.SCREEN_BUFFER_BIT_QNX;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_590_BIT_HUAWEI = VkExternalMemoryHandleTypeFlagBits.VK_EXTERNAL_MEMORY_HANDLE_TYPE_590_BIT_HUAWEI;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_MTLBUFFER_BIT_EXT = VkExternalMemoryHandleTypeFlagBits.MTLBUFFER_BIT_EXT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_MTLTEXTURE_BIT_EXT = VkExternalMemoryHandleTypeFlagBits.MTLTEXTURE_BIT_EXT;
enum VK_EXTERNAL_MEMORY_HANDLE_TYPE_MTLHEAP_BIT_EXT = VkExternalMemoryHandleTypeFlagBits.MTLHEAP_BIT_EXT;

alias VkExternalMemoryFeatureFlags = VkFlags;

enum VkExternalMemoryFeatureFlagBits : uint {
    DEDICATED_ONLY_BIT = 1,
    EXPORTABLE_BIT = 2,
    IMPORTABLE_BIT = 4,
    DEDICATED_ONLY_BIT_KHR = DEDICATED_ONLY_BIT,
    EXPORTABLE_BIT_KHR = EXPORTABLE_BIT,
    IMPORTABLE_BIT_KHR = IMPORTABLE_BIT,
}

enum VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT = VkExternalMemoryFeatureFlagBits.DEDICATED_ONLY_BIT;
enum VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT = VkExternalMemoryFeatureFlagBits.EXPORTABLE_BIT;
enum VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT = VkExternalMemoryFeatureFlagBits.IMPORTABLE_BIT;
enum VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR = VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT;
enum VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR = VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT;
enum VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR = VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT;

struct VkExternalMemoryProperties {
    VkFlags externalMemoryFeatures;
    VkFlags exportFromImportedHandleTypes;
    VkFlags compatibleHandleTypes;
}

struct VkPhysicalDeviceExternalImageFormatInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO;
    const(void)* pNext;
    VkExternalMemoryHandleTypeFlagBits handleType;
}

struct VkExternalImageFormatProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES;
    void* pNext;
    VkExternalMemoryProperties externalMemoryProperties;
}

struct VkPhysicalDeviceExternalBufferInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkFlags usage;
    VkExternalMemoryHandleTypeFlagBits handleType;
}

struct VkExternalBufferProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES;
    void* pNext;
    VkExternalMemoryProperties externalMemoryProperties;
}

struct VkPhysicalDeviceIDProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES;
    void* pNext;
    ubyte[VK_UUID_SIZE] deviceUUID;
    ubyte[VK_UUID_SIZE] driverUUID;
    ubyte[VK_LUID_SIZE] deviceLUID;
    uint deviceNodeMask;
    VkBool32 deviceLUIDValid;
}

version (VK_VERSION_1_1) {
    extern void vkGetPhysicalDeviceExternalBufferProperties(
        VkPhysicalDevice physicalDevice,
        const(VkPhysicalDeviceExternalBufferInfo)* pExternalBufferInfo,
        VkExternalBufferProperties* pExternalBufferProperties,
    );
}

// Promoted from VK_KHR_external_memory

enum uint VK_QUEUE_FAMILY_EXTERNAL = ~1U;

struct VkExternalMemoryImageCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO;
    const(void)* pNext;
    VkFlags handleTypes;
}

struct VkExternalMemoryBufferCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO;
    const(void)* pNext;
    VkFlags handleTypes;
}

struct VkExportMemoryAllocateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO;
    const(void)* pNext;
    VkFlags handleTypes;
}

// Promoted from VK_KHR_external_fence_capabilities

alias VkExternalFenceHandleTypeFlags = VkFlags;

enum VkExternalFenceHandleTypeFlagBits : uint {
    OPAQUE_FD_BIT = 1,
    OPAQUE_WIN32_BIT = 2,
    OPAQUE_WIN32_KMT_BIT = 4,
    SYNC_FD_BIT = 8,
    OPAQUE_FD_BIT_KHR = OPAQUE_FD_BIT,
    OPAQUE_WIN32_BIT_KHR = OPAQUE_WIN32_BIT,
    OPAQUE_WIN32_KMT_BIT_KHR = OPAQUE_WIN32_KMT_BIT,
    SYNC_FD_BIT_KHR = SYNC_FD_BIT,
    SCI_SYNC_OBJ_BIT_NV = 16,
    SCI_SYNC_FENCE_BIT_NV = 32,
}

enum VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT = VkExternalFenceHandleTypeFlagBits.OPAQUE_FD_BIT;
enum VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT = VkExternalFenceHandleTypeFlagBits.OPAQUE_WIN32_BIT;
enum VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT = VkExternalFenceHandleTypeFlagBits.OPAQUE_WIN32_KMT_BIT;
enum VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT = VkExternalFenceHandleTypeFlagBits.SYNC_FD_BIT;
enum VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT;
enum VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT;
enum VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT;
enum VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR = VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT;
enum VK_EXTERNAL_FENCE_HANDLE_TYPE_SCI_SYNC_OBJ_BIT_NV = VkExternalFenceHandleTypeFlagBits.SCI_SYNC_OBJ_BIT_NV;
enum VK_EXTERNAL_FENCE_HANDLE_TYPE_SCI_SYNC_FENCE_BIT_NV = VkExternalFenceHandleTypeFlagBits.SCI_SYNC_FENCE_BIT_NV;

alias VkExternalFenceFeatureFlags = VkFlags;

enum VkExternalFenceFeatureFlagBits : uint {
    EXPORTABLE_BIT = 1,
    IMPORTABLE_BIT = 2,
    EXPORTABLE_BIT_KHR = EXPORTABLE_BIT,
    IMPORTABLE_BIT_KHR = IMPORTABLE_BIT,
}

enum VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT = VkExternalFenceFeatureFlagBits.EXPORTABLE_BIT;
enum VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT = VkExternalFenceFeatureFlagBits.IMPORTABLE_BIT;
enum VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR = VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT;
enum VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR = VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT;

struct VkPhysicalDeviceExternalFenceInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO;
    const(void)* pNext;
    VkExternalFenceHandleTypeFlagBits handleType;
}

struct VkExternalFenceProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES;
    void* pNext;
    VkFlags exportFromImportedHandleTypes;
    VkFlags compatibleHandleTypes;
    VkFlags externalFenceFeatures;
}

version (VK_VERSION_1_1) {
    extern void vkGetPhysicalDeviceExternalFenceProperties(
        VkPhysicalDevice physicalDevice,
        const(VkPhysicalDeviceExternalFenceInfo)* pExternalFenceInfo,
        VkExternalFenceProperties* pExternalFenceProperties,
    );
}

// Promoted from VK_KHR_external_fence

alias VkFenceImportFlags = VkFlags;

enum VkFenceImportFlagBits : uint {
    TEMPORARY_BIT = 1,
    TEMPORARY_BIT_KHR = TEMPORARY_BIT,
}

enum VK_FENCE_IMPORT_TEMPORARY_BIT = VkFenceImportFlagBits.TEMPORARY_BIT;
enum VK_FENCE_IMPORT_TEMPORARY_BIT_KHR = VK_FENCE_IMPORT_TEMPORARY_BIT;

struct VkExportFenceCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO;
    const(void)* pNext;
    VkFlags handleTypes;
}

// Promoted from VK_KHR_external_semaphore

alias VkSemaphoreImportFlags = VkFlags;

enum VkSemaphoreImportFlagBits : uint {
    TEMPORARY_BIT = 1,
    TEMPORARY_BIT_KHR = TEMPORARY_BIT,
}

enum VK_SEMAPHORE_IMPORT_TEMPORARY_BIT = VkSemaphoreImportFlagBits.TEMPORARY_BIT;
enum VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR = VK_SEMAPHORE_IMPORT_TEMPORARY_BIT;

struct VkExportSemaphoreCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO;
    const(void)* pNext;
    VkFlags handleTypes;
}

// Promoted from VK_KHR_external_semaphore_capabilities

alias VkExternalSemaphoreHandleTypeFlags = VkFlags;

enum VkExternalSemaphoreHandleTypeFlagBits : uint {
    OPAQUE_FD_BIT = 1,
    OPAQUE_WIN32_BIT = 2,
    OPAQUE_WIN32_KMT_BIT = 4,
    D3D12_FENCE_BIT = 8,
    D3D11_FENCE_BIT = D3D12_FENCE_BIT,
    SYNC_FD_BIT = 16,
    OPAQUE_FD_BIT_KHR = OPAQUE_FD_BIT,
    OPAQUE_WIN32_BIT_KHR = OPAQUE_WIN32_BIT,
    OPAQUE_WIN32_KMT_BIT_KHR = OPAQUE_WIN32_KMT_BIT,
    D3D12_FENCE_BIT_KHR = D3D12_FENCE_BIT,
    SYNC_FD_BIT_KHR = SYNC_FD_BIT,
    ZIRCON_EVENT_BIT_FUCHSIA = 128,
    SCI_SYNC_OBJ_BIT_NV = 32,
}

enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT = VkExternalSemaphoreHandleTypeFlagBits.OPAQUE_FD_BIT;
enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT = VkExternalSemaphoreHandleTypeFlagBits.OPAQUE_WIN32_BIT;
enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT = VkExternalSemaphoreHandleTypeFlagBits.OPAQUE_WIN32_KMT_BIT;
enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT = VkExternalSemaphoreHandleTypeFlagBits.D3D12_FENCE_BIT;
enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT;
enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT = VkExternalSemaphoreHandleTypeFlagBits.SYNC_FD_BIT;
enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT;
enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT;
enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT;
enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT;
enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT;
enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA = VkExternalSemaphoreHandleTypeFlagBits.ZIRCON_EVENT_BIT_FUCHSIA;
enum VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SCI_SYNC_OBJ_BIT_NV = VkExternalSemaphoreHandleTypeFlagBits.SCI_SYNC_OBJ_BIT_NV;

alias VkExternalSemaphoreFeatureFlags = VkFlags;

enum VkExternalSemaphoreFeatureFlagBits : uint {
    EXPORTABLE_BIT = 1,
    IMPORTABLE_BIT = 2,
    EXPORTABLE_BIT_KHR = EXPORTABLE_BIT,
    IMPORTABLE_BIT_KHR = IMPORTABLE_BIT,
}

enum VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT = VkExternalSemaphoreFeatureFlagBits.EXPORTABLE_BIT;
enum VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT = VkExternalSemaphoreFeatureFlagBits.IMPORTABLE_BIT;
enum VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR = VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT;
enum VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR = VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT;

struct VkPhysicalDeviceExternalSemaphoreInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO;
    const(void)* pNext;
    VkExternalSemaphoreHandleTypeFlagBits handleType;
}

struct VkExternalSemaphoreProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES;
    void* pNext;
    VkFlags exportFromImportedHandleTypes;
    VkFlags compatibleHandleTypes;
    VkFlags externalSemaphoreFeatures;
}

version (VK_VERSION_1_1) {
    extern void vkGetPhysicalDeviceExternalSemaphoreProperties(
        VkPhysicalDevice physicalDevice,
        const(VkPhysicalDeviceExternalSemaphoreInfo)* pExternalSemaphoreInfo,
        VkExternalSemaphoreProperties* pExternalSemaphoreProperties,
    );
}

// Promoted from VK_KHR_maintenance3

struct VkPhysicalDeviceMaintenance3Properties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES;
    void* pNext;
    uint maxPerSetDescriptors;
    VkDeviceSize maxMemoryAllocationSize;
}

struct VkDescriptorSetLayoutSupport {
    VkStructureType sType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT;
    void* pNext;
    VkBool32 supported;
}

version (VK_VERSION_1_1) {
    extern void vkGetDescriptorSetLayoutSupport(
        VkDevice device,
        const(VkDescriptorSetLayoutCreateInfo)* pCreateInfo,
        VkDescriptorSetLayoutSupport* pSupport,
    );
}

// Promoted from VK_KHR_shader_draw_parameters, with a feature support query added

alias VkPhysicalDeviceShaderDrawParameterFeatures = VkPhysicalDeviceShaderDrawParametersFeatures;

struct VkPhysicalDeviceShaderDrawParametersFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES;
    void* pNext;
    VkBool32 shaderDrawParameters;
}


enum VK_API_VERSION_1_2 = VK_MAKE_API_VERSION(0, 1, 2, 0);

struct VkPhysicalDeviceVulkan11Features {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES;
    void* pNext;
    VkBool32 storageBuffer16BitAccess;
    VkBool32 uniformAndStorageBuffer16BitAccess;
    VkBool32 storagePushConstant16;
    VkBool32 storageInputOutput16;
    VkBool32 multiview;
    VkBool32 multiviewGeometryShader;
    VkBool32 multiviewTessellationShader;
    VkBool32 variablePointersStorageBuffer;
    VkBool32 variablePointers;
    VkBool32 protectedMemory;
    VkBool32 samplerYcbcrConversion;
    VkBool32 shaderDrawParameters;
}

struct VkPhysicalDeviceVulkan11Properties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
    void* pNext;
    ubyte[VK_UUID_SIZE] deviceUUID;
    ubyte[VK_UUID_SIZE] driverUUID;
    ubyte[VK_LUID_SIZE] deviceLUID;
    uint deviceNodeMask;
    VkBool32 deviceLUIDValid;
    uint subgroupSize;
    VkFlags subgroupSupportedStages;
    VkFlags subgroupSupportedOperations;
    VkBool32 subgroupQuadOperationsInAllStages;
    VkPointClippingBehavior pointClippingBehavior;
    uint maxMultiviewViewCount;
    uint maxMultiviewInstanceIndex;
    VkBool32 protectedNoFault;
    uint maxPerSetDescriptors;
    VkDeviceSize maxMemoryAllocationSize;
}

struct VkPhysicalDeviceVulkan12Features {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES;
    void* pNext;
    VkBool32 samplerMirrorClampToEdge;
    VkBool32 drawIndirectCount;
    VkBool32 storageBuffer8BitAccess;
    VkBool32 uniformAndStorageBuffer8BitAccess;
    VkBool32 storagePushConstant8;
    VkBool32 shaderBufferInt64Atomics;
    VkBool32 shaderSharedInt64Atomics;
    VkBool32 shaderFloat16;
    VkBool32 shaderInt8;
    VkBool32 descriptorIndexing;
    VkBool32 shaderInputAttachmentArrayDynamicIndexing;
    VkBool32 shaderUniformTexelBufferArrayDynamicIndexing;
    VkBool32 shaderStorageTexelBufferArrayDynamicIndexing;
    VkBool32 shaderUniformBufferArrayNonUniformIndexing;
    VkBool32 shaderSampledImageArrayNonUniformIndexing;
    VkBool32 shaderStorageBufferArrayNonUniformIndexing;
    VkBool32 shaderStorageImageArrayNonUniformIndexing;
    VkBool32 shaderInputAttachmentArrayNonUniformIndexing;
    VkBool32 shaderUniformTexelBufferArrayNonUniformIndexing;
    VkBool32 shaderStorageTexelBufferArrayNonUniformIndexing;
    VkBool32 descriptorBindingUniformBufferUpdateAfterBind;
    VkBool32 descriptorBindingSampledImageUpdateAfterBind;
    VkBool32 descriptorBindingStorageImageUpdateAfterBind;
    VkBool32 descriptorBindingStorageBufferUpdateAfterBind;
    VkBool32 descriptorBindingUniformTexelBufferUpdateAfterBind;
    VkBool32 descriptorBindingStorageTexelBufferUpdateAfterBind;
    VkBool32 descriptorBindingUpdateUnusedWhilePending;
    VkBool32 descriptorBindingPartiallyBound;
    VkBool32 descriptorBindingVariableDescriptorCount;
    VkBool32 runtimeDescriptorArray;
    VkBool32 samplerFilterMinmax;
    VkBool32 scalarBlockLayout;
    VkBool32 imagelessFramebuffer;
    VkBool32 uniformBufferStandardLayout;
    VkBool32 shaderSubgroupExtendedTypes;
    VkBool32 separateDepthStencilLayouts;
    VkBool32 hostQueryReset;
    VkBool32 timelineSemaphore;
    VkBool32 bufferDeviceAddress;
    VkBool32 bufferDeviceAddressCaptureReplay;
    VkBool32 bufferDeviceAddressMultiDevice;
    VkBool32 vulkanMemoryModel;
    VkBool32 vulkanMemoryModelDeviceScope;
    VkBool32 vulkanMemoryModelAvailabilityVisibilityChains;
    VkBool32 shaderOutputViewportIndex;
    VkBool32 shaderOutputLayer;
    VkBool32 subgroupBroadcastDynamicId;
}

struct VkPhysicalDeviceVulkan12Properties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
    void* pNext;
    VkDriverId driverID;
    char[VK_MAX_DRIVER_NAME_SIZE] driverName;
    char[VK_MAX_DRIVER_INFO_SIZE] driverInfo;
    VkConformanceVersion conformanceVersion;
    VkShaderFloatControlsIndependence denormBehaviorIndependence;
    VkShaderFloatControlsIndependence roundingModeIndependence;
    VkBool32 shaderSignedZeroInfNanPreserveFloat16;
    VkBool32 shaderSignedZeroInfNanPreserveFloat32;
    VkBool32 shaderSignedZeroInfNanPreserveFloat64;
    VkBool32 shaderDenormPreserveFloat16;
    VkBool32 shaderDenormPreserveFloat32;
    VkBool32 shaderDenormPreserveFloat64;
    VkBool32 shaderDenormFlushToZeroFloat16;
    VkBool32 shaderDenormFlushToZeroFloat32;
    VkBool32 shaderDenormFlushToZeroFloat64;
    VkBool32 shaderRoundingModeRTEFloat16;
    VkBool32 shaderRoundingModeRTEFloat32;
    VkBool32 shaderRoundingModeRTEFloat64;
    VkBool32 shaderRoundingModeRTZFloat16;
    VkBool32 shaderRoundingModeRTZFloat32;
    VkBool32 shaderRoundingModeRTZFloat64;
    uint maxUpdateAfterBindDescriptorsInAllPools;
    VkBool32 shaderUniformBufferArrayNonUniformIndexingNative;
    VkBool32 shaderSampledImageArrayNonUniformIndexingNative;
    VkBool32 shaderStorageBufferArrayNonUniformIndexingNative;
    VkBool32 shaderStorageImageArrayNonUniformIndexingNative;
    VkBool32 shaderInputAttachmentArrayNonUniformIndexingNative;
    VkBool32 robustBufferAccessUpdateAfterBind;
    VkBool32 quadDivergentImplicitLod;
    uint maxPerStageDescriptorUpdateAfterBindSamplers;
    uint maxPerStageDescriptorUpdateAfterBindUniformBuffers;
    uint maxPerStageDescriptorUpdateAfterBindStorageBuffers;
    uint maxPerStageDescriptorUpdateAfterBindSampledImages;
    uint maxPerStageDescriptorUpdateAfterBindStorageImages;
    uint maxPerStageDescriptorUpdateAfterBindInputAttachments;
    uint maxPerStageUpdateAfterBindResources;
    uint maxDescriptorSetUpdateAfterBindSamplers;
    uint maxDescriptorSetUpdateAfterBindUniformBuffers;
    uint maxDescriptorSetUpdateAfterBindUniformBuffersDynamic;
    uint maxDescriptorSetUpdateAfterBindStorageBuffers;
    uint maxDescriptorSetUpdateAfterBindStorageBuffersDynamic;
    uint maxDescriptorSetUpdateAfterBindSampledImages;
    uint maxDescriptorSetUpdateAfterBindStorageImages;
    uint maxDescriptorSetUpdateAfterBindInputAttachments;
    VkFlags supportedDepthResolveModes;
    VkFlags supportedStencilResolveModes;
    VkBool32 independentResolveNone;
    VkBool32 independentResolve;
    VkBool32 filterMinmaxSingleComponentFormats;
    VkBool32 filterMinmaxImageComponentMapping;
    ulong maxTimelineSemaphoreValueDifference;
    VkFlags framebufferIntegerColorSampleCounts;
}

// Promoted from VK_KHR_image_format_list (extension 148)

struct VkImageFormatListCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO;
    const(void)* pNext;
    uint viewFormatCount;
    const(VkFormat)* pViewFormats;
}

// Promoted from VK_KHR_draw_indirect_count (extension 170)

version (VK_VERSION_1_2) {
    extern void vkCmdDrawIndirectCount(
        VkCommandBuffer commandBuffer,
        VkBuffer buffer,
        VkDeviceSize offset,
        VkBuffer countBuffer,
        VkDeviceSize countBufferOffset,
        uint maxDrawCount,
        uint stride,
    );
    
    extern void vkCmdDrawIndexedIndirectCount(
        VkCommandBuffer commandBuffer,
        VkBuffer buffer,
        VkDeviceSize offset,
        VkBuffer countBuffer,
        VkDeviceSize countBufferOffset,
        uint maxDrawCount,
        uint stride,
    );
}

// Promoted from VK_KHR_create_renderpass2 (extension 110)

struct VkRenderPassCreateInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2;
    const(void)* pNext;
    VkFlags flags;
    uint attachmentCount;
    const(VkAttachmentDescription2)* pAttachments;
    uint subpassCount;
    const(VkSubpassDescription2)* pSubpasses;
    uint dependencyCount;
    const(VkSubpassDependency2)* pDependencies;
    uint correlatedViewMaskCount;
    const(uint)* pCorrelatedViewMasks;
}

struct VkAttachmentDescription2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2;
    const(void)* pNext;
    VkFlags flags;
    VkFormat format;
    VkSampleCountFlagBits samples;
    VkAttachmentLoadOp loadOp;
    VkAttachmentStoreOp storeOp;
    VkAttachmentLoadOp stencilLoadOp;
    VkAttachmentStoreOp stencilStoreOp;
    VkImageLayout initialLayout;
    VkImageLayout finalLayout;
}

struct VkAttachmentReference2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2;
    const(void)* pNext;
    uint attachment;
    VkImageLayout layout;
    VkFlags aspectMask;
}

struct VkSubpassDescription2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2;
    const(void)* pNext;
    VkFlags flags;
    VkPipelineBindPoint pipelineBindPoint;
    uint viewMask;
    uint inputAttachmentCount;
    const(VkAttachmentReference2)* pInputAttachments;
    uint colorAttachmentCount;
    const(VkAttachmentReference2)* pColorAttachments;
    const(VkAttachmentReference2)* pResolveAttachments;
    const(VkAttachmentReference2)* pDepthStencilAttachment;
    uint preserveAttachmentCount;
    const(uint)* pPreserveAttachments;
}

struct VkSubpassDependency2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2;
    const(void)* pNext;
    uint srcSubpass;
    uint dstSubpass;
    VkFlags srcStageMask;
    VkFlags dstStageMask;
    VkFlags srcAccessMask;
    VkFlags dstAccessMask;
    VkFlags dependencyFlags;
    int viewOffset;
}

struct VkSubpassBeginInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO;
    const(void)* pNext;
    VkSubpassContents contents;
}

struct VkSubpassEndInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SUBPASS_END_INFO;
    const(void)* pNext;
}

version (VK_VERSION_1_2) {
    extern VkResult vkCreateRenderPass2(
        VkDevice device,
        const(VkRenderPassCreateInfo2)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkRenderPass* pRenderPass,
    );
    
    extern void vkCmdBeginRenderPass2(
        VkCommandBuffer commandBuffer,
        const(VkRenderPassBeginInfo)* pRenderPassBegin,
        const(VkSubpassBeginInfo)* pSubpassBeginInfo,
    );
    
    extern void vkCmdNextSubpass2(
        VkCommandBuffer commandBuffer,
        const(VkSubpassBeginInfo)* pSubpassBeginInfo,
        const(VkSubpassEndInfo)* pSubpassEndInfo,
    );
    
    extern void vkCmdEndRenderPass2(
        VkCommandBuffer commandBuffer,
        const(VkSubpassEndInfo)* pSubpassEndInfo,
    );
}

// Promoted from VK_KHR_8bit_storage (extension 178)

struct VkPhysicalDevice8BitStorageFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES;
    void* pNext;
    VkBool32 storageBuffer8BitAccess;
    VkBool32 uniformAndStorageBuffer8BitAccess;
    VkBool32 storagePushConstant8;
}

// Promoted from VK_KHR_driver_properties (extension 197)

enum uint VK_MAX_DRIVER_NAME_SIZE = 256;
enum uint VK_MAX_DRIVER_INFO_SIZE = 256;

enum VkDriverId {
    AMD_PROPRIETARY = 1,
    AMD_OPEN_SOURCE = 2,
    MESA_RADV = 3,
    NVIDIA_PROPRIETARY = 4,
    INTEL_PROPRIETARY_WINDOWS = 5,
    INTEL_OPEN_SOURCE_MESA = 6,
    IMAGINATION_PROPRIETARY = 7,
    QUALCOMM_PROPRIETARY = 8,
    ARM_PROPRIETARY = 9,
    GOOGLE_SWIFTSHADER = 10,
    GGP_PROPRIETARY = 11,
    BROADCOM_PROPRIETARY = 12,
    MESA_LLVMPIPE = 13,
    MOLTENVK = 14,
    COREAVI_PROPRIETARY = 15,
    JUICE_PROPRIETARY = 16,
    VERISILICON_PROPRIETARY = 17,
    MESA_TURNIP = 18,
    MESA_V3DV = 19,
    MESA_PANVK = 20,
    SAMSUNG_PROPRIETARY = 21,
    MESA_VENUS = 22,
    MESA_DOZEN = 23,
    MESA_NVK = 24,
    IMAGINATION_OPEN_SOURCE_MESA = 25,
    MESA_HONEYKRISP = 26,
    VULKAN_SC_EMULATION_ON_VULKAN = 27,
    AMD_PROPRIETARY_KHR = AMD_PROPRIETARY,
    AMD_OPEN_SOURCE_KHR = AMD_OPEN_SOURCE,
    MESA_RADV_KHR = MESA_RADV,
    NVIDIA_PROPRIETARY_KHR = NVIDIA_PROPRIETARY,
    INTEL_PROPRIETARY_WINDOWS_KHR = INTEL_PROPRIETARY_WINDOWS,
    INTEL_OPEN_SOURCE_MESA_KHR = INTEL_OPEN_SOURCE_MESA,
    IMAGINATION_PROPRIETARY_KHR = IMAGINATION_PROPRIETARY,
    QUALCOMM_PROPRIETARY_KHR = QUALCOMM_PROPRIETARY,
    ARM_PROPRIETARY_KHR = ARM_PROPRIETARY,
    GOOGLE_SWIFTSHADER_KHR = GOOGLE_SWIFTSHADER,
    GGP_PROPRIETARY_KHR = GGP_PROPRIETARY,
    BROADCOM_PROPRIETARY_KHR = BROADCOM_PROPRIETARY,
}

enum VK_DRIVER_ID_AMD_PROPRIETARY = VkDriverId.AMD_PROPRIETARY;
enum VK_DRIVER_ID_AMD_OPEN_SOURCE = VkDriverId.AMD_OPEN_SOURCE;
enum VK_DRIVER_ID_MESA_RADV = VkDriverId.MESA_RADV;
enum VK_DRIVER_ID_NVIDIA_PROPRIETARY = VkDriverId.NVIDIA_PROPRIETARY;
enum VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS = VkDriverId.INTEL_PROPRIETARY_WINDOWS;
enum VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA = VkDriverId.INTEL_OPEN_SOURCE_MESA;
enum VK_DRIVER_ID_IMAGINATION_PROPRIETARY = VkDriverId.IMAGINATION_PROPRIETARY;
enum VK_DRIVER_ID_QUALCOMM_PROPRIETARY = VkDriverId.QUALCOMM_PROPRIETARY;
enum VK_DRIVER_ID_ARM_PROPRIETARY = VkDriverId.ARM_PROPRIETARY;
enum VK_DRIVER_ID_GOOGLE_SWIFTSHADER = VkDriverId.GOOGLE_SWIFTSHADER;
enum VK_DRIVER_ID_GGP_PROPRIETARY = VkDriverId.GGP_PROPRIETARY;
enum VK_DRIVER_ID_BROADCOM_PROPRIETARY = VkDriverId.BROADCOM_PROPRIETARY;
enum VK_DRIVER_ID_MESA_LLVMPIPE = VkDriverId.MESA_LLVMPIPE;
enum VK_DRIVER_ID_MOLTENVK = VkDriverId.MOLTENVK;
enum VK_DRIVER_ID_COREAVI_PROPRIETARY = VkDriverId.COREAVI_PROPRIETARY;
enum VK_DRIVER_ID_JUICE_PROPRIETARY = VkDriverId.JUICE_PROPRIETARY;
enum VK_DRIVER_ID_VERISILICON_PROPRIETARY = VkDriverId.VERISILICON_PROPRIETARY;
enum VK_DRIVER_ID_MESA_TURNIP = VkDriverId.MESA_TURNIP;
enum VK_DRIVER_ID_MESA_V3DV = VkDriverId.MESA_V3DV;
enum VK_DRIVER_ID_MESA_PANVK = VkDriverId.MESA_PANVK;
enum VK_DRIVER_ID_SAMSUNG_PROPRIETARY = VkDriverId.SAMSUNG_PROPRIETARY;
enum VK_DRIVER_ID_MESA_VENUS = VkDriverId.MESA_VENUS;
enum VK_DRIVER_ID_MESA_DOZEN = VkDriverId.MESA_DOZEN;
enum VK_DRIVER_ID_MESA_NVK = VkDriverId.MESA_NVK;
enum VK_DRIVER_ID_IMAGINATION_OPEN_SOURCE_MESA = VkDriverId.IMAGINATION_OPEN_SOURCE_MESA;
enum VK_DRIVER_ID_MESA_HONEYKRISP = VkDriverId.MESA_HONEYKRISP;
enum VK_DRIVER_ID_VULKAN_SC_EMULATION_ON_VULKAN = VkDriverId.VULKAN_SC_EMULATION_ON_VULKAN;
enum VK_DRIVER_ID_AMD_PROPRIETARY_KHR = VK_DRIVER_ID_AMD_PROPRIETARY;
enum VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR = VK_DRIVER_ID_AMD_OPEN_SOURCE;
enum VK_DRIVER_ID_MESA_RADV_KHR = VK_DRIVER_ID_MESA_RADV;
enum VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR = VK_DRIVER_ID_NVIDIA_PROPRIETARY;
enum VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR = VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS;
enum VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR = VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA;
enum VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR = VK_DRIVER_ID_IMAGINATION_PROPRIETARY;
enum VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR = VK_DRIVER_ID_QUALCOMM_PROPRIETARY;
enum VK_DRIVER_ID_ARM_PROPRIETARY_KHR = VK_DRIVER_ID_ARM_PROPRIETARY;
enum VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR = VK_DRIVER_ID_GOOGLE_SWIFTSHADER;
enum VK_DRIVER_ID_GGP_PROPRIETARY_KHR = VK_DRIVER_ID_GGP_PROPRIETARY;
enum VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR = VK_DRIVER_ID_BROADCOM_PROPRIETARY;

struct VkConformanceVersion {
    ubyte major;
    ubyte minor;
    ubyte subminor;
    ubyte patch;
}

struct VkPhysicalDeviceDriverProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES;
    void* pNext;
    VkDriverId driverID;
    char[VK_MAX_DRIVER_NAME_SIZE] driverName;
    char[VK_MAX_DRIVER_INFO_SIZE] driverInfo;
    VkConformanceVersion conformanceVersion;
}

// Promoted from VK_KHR_shader_atomic_int64 (extension 181)

struct VkPhysicalDeviceShaderAtomicInt64Features {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES;
    void* pNext;
    VkBool32 shaderBufferInt64Atomics;
    VkBool32 shaderSharedInt64Atomics;
}

// Promoted from VK_KHR_shader_float16_int8 (extension 83)

struct VkPhysicalDeviceShaderFloat16Int8Features {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES;
    void* pNext;
    VkBool32 shaderFloat16;
    VkBool32 shaderInt8;
}

// Promoted from VK_KHR_shader_float_controls (extension 198)

struct VkPhysicalDeviceFloatControlsProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES;
    void* pNext;
    VkShaderFloatControlsIndependence denormBehaviorIndependence;
    VkShaderFloatControlsIndependence roundingModeIndependence;
    VkBool32 shaderSignedZeroInfNanPreserveFloat16;
    VkBool32 shaderSignedZeroInfNanPreserveFloat32;
    VkBool32 shaderSignedZeroInfNanPreserveFloat64;
    VkBool32 shaderDenormPreserveFloat16;
    VkBool32 shaderDenormPreserveFloat32;
    VkBool32 shaderDenormPreserveFloat64;
    VkBool32 shaderDenormFlushToZeroFloat16;
    VkBool32 shaderDenormFlushToZeroFloat32;
    VkBool32 shaderDenormFlushToZeroFloat64;
    VkBool32 shaderRoundingModeRTEFloat16;
    VkBool32 shaderRoundingModeRTEFloat32;
    VkBool32 shaderRoundingModeRTEFloat64;
    VkBool32 shaderRoundingModeRTZFloat16;
    VkBool32 shaderRoundingModeRTZFloat32;
    VkBool32 shaderRoundingModeRTZFloat64;
}

enum VkShaderFloatControlsIndependence {
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY = 0,
    ALL = 1,
    NONE = 2,
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY,
    ALL_KHR = ALL,
    NONE_KHR = NONE,
}

enum VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY = VkShaderFloatControlsIndependence.VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY;
enum VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL = VkShaderFloatControlsIndependence.ALL;
enum VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE = VkShaderFloatControlsIndependence.NONE;
enum VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY;
enum VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL;
enum VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE;

// Promoted from VK_EXT_descriptor_indexing (extension 162)

struct VkDescriptorSetLayoutBindingFlagsCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO;
    const(void)* pNext;
    uint bindingCount;
    const(VkDescriptorBindingFlags)* pBindingFlags;
}

struct VkPhysicalDeviceDescriptorIndexingFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES;
    void* pNext;
    VkBool32 shaderInputAttachmentArrayDynamicIndexing;
    VkBool32 shaderUniformTexelBufferArrayDynamicIndexing;
    VkBool32 shaderStorageTexelBufferArrayDynamicIndexing;
    VkBool32 shaderUniformBufferArrayNonUniformIndexing;
    VkBool32 shaderSampledImageArrayNonUniformIndexing;
    VkBool32 shaderStorageBufferArrayNonUniformIndexing;
    VkBool32 shaderStorageImageArrayNonUniformIndexing;
    VkBool32 shaderInputAttachmentArrayNonUniformIndexing;
    VkBool32 shaderUniformTexelBufferArrayNonUniformIndexing;
    VkBool32 shaderStorageTexelBufferArrayNonUniformIndexing;
    VkBool32 descriptorBindingUniformBufferUpdateAfterBind;
    VkBool32 descriptorBindingSampledImageUpdateAfterBind;
    VkBool32 descriptorBindingStorageImageUpdateAfterBind;
    VkBool32 descriptorBindingStorageBufferUpdateAfterBind;
    VkBool32 descriptorBindingUniformTexelBufferUpdateAfterBind;
    VkBool32 descriptorBindingStorageTexelBufferUpdateAfterBind;
    VkBool32 descriptorBindingUpdateUnusedWhilePending;
    VkBool32 descriptorBindingPartiallyBound;
    VkBool32 descriptorBindingVariableDescriptorCount;
    VkBool32 runtimeDescriptorArray;
}

struct VkPhysicalDeviceDescriptorIndexingProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES;
    void* pNext;
    uint maxUpdateAfterBindDescriptorsInAllPools;
    VkBool32 shaderUniformBufferArrayNonUniformIndexingNative;
    VkBool32 shaderSampledImageArrayNonUniformIndexingNative;
    VkBool32 shaderStorageBufferArrayNonUniformIndexingNative;
    VkBool32 shaderStorageImageArrayNonUniformIndexingNative;
    VkBool32 shaderInputAttachmentArrayNonUniformIndexingNative;
    VkBool32 robustBufferAccessUpdateAfterBind;
    VkBool32 quadDivergentImplicitLod;
    uint maxPerStageDescriptorUpdateAfterBindSamplers;
    uint maxPerStageDescriptorUpdateAfterBindUniformBuffers;
    uint maxPerStageDescriptorUpdateAfterBindStorageBuffers;
    uint maxPerStageDescriptorUpdateAfterBindSampledImages;
    uint maxPerStageDescriptorUpdateAfterBindStorageImages;
    uint maxPerStageDescriptorUpdateAfterBindInputAttachments;
    uint maxPerStageUpdateAfterBindResources;
    uint maxDescriptorSetUpdateAfterBindSamplers;
    uint maxDescriptorSetUpdateAfterBindUniformBuffers;
    uint maxDescriptorSetUpdateAfterBindUniformBuffersDynamic;
    uint maxDescriptorSetUpdateAfterBindStorageBuffers;
    uint maxDescriptorSetUpdateAfterBindStorageBuffersDynamic;
    uint maxDescriptorSetUpdateAfterBindSampledImages;
    uint maxDescriptorSetUpdateAfterBindStorageImages;
    uint maxDescriptorSetUpdateAfterBindInputAttachments;
}

struct VkDescriptorSetVariableDescriptorCountAllocateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO;
    const(void)* pNext;
    uint descriptorSetCount;
    const(uint)* pDescriptorCounts;
}

struct VkDescriptorSetVariableDescriptorCountLayoutSupport {
    VkStructureType sType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT;
    void* pNext;
    uint maxVariableDescriptorCount;
}

enum VkDescriptorBindingFlagBits : uint {
    UPDATE_AFTER_BIND_BIT = 1,
    UPDATE_UNUSED_WHILE_PENDING_BIT = 2,
    PARTIALLY_BOUND_BIT = 4,
    VARIABLE_DESCRIPTOR_COUNT_BIT = 8,
    UPDATE_AFTER_BIND_BIT_EXT = UPDATE_AFTER_BIND_BIT,
    UPDATE_UNUSED_WHILE_PENDING_BIT_EXT = UPDATE_UNUSED_WHILE_PENDING_BIT,
    PARTIALLY_BOUND_BIT_EXT = PARTIALLY_BOUND_BIT,
    VARIABLE_DESCRIPTOR_COUNT_BIT_EXT = VARIABLE_DESCRIPTOR_COUNT_BIT,
    RESERVED_4_BIT_QCOM = 16,
}

enum VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT = VkDescriptorBindingFlagBits.UPDATE_AFTER_BIND_BIT;
enum VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT = VkDescriptorBindingFlagBits.UPDATE_UNUSED_WHILE_PENDING_BIT;
enum VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT = VkDescriptorBindingFlagBits.PARTIALLY_BOUND_BIT;
enum VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT = VkDescriptorBindingFlagBits.VARIABLE_DESCRIPTOR_COUNT_BIT;
enum VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT = VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT;
enum VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT = VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT;
enum VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT = VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT;
enum VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT = VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT;
enum VK_DESCRIPTOR_BINDING_RESERVED_4_BIT_QCOM = VkDescriptorBindingFlagBits.RESERVED_4_BIT_QCOM;

alias VkDescriptorBindingFlags = VkFlags;

// Promoted from VK_KHR_depth_stencil_resolve (extension 200)

struct VkSubpassDescriptionDepthStencilResolve {
    VkStructureType sType = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE;
    const(void)* pNext;
    VkResolveModeFlagBits depthResolveMode;
    VkResolveModeFlagBits stencilResolveMode;
    const(VkAttachmentReference2)* pDepthStencilResolveAttachment;
}

struct VkPhysicalDeviceDepthStencilResolveProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES;
    void* pNext;
    VkFlags supportedDepthResolveModes;
    VkFlags supportedStencilResolveModes;
    VkBool32 independentResolveNone;
    VkBool32 independentResolve;
}

enum VkResolveModeFlagBits : uint {
    NONE = 0,
    SAMPLE_ZERO_BIT = 1,
    AVERAGE_BIT = 2,
    MIN_BIT = 4,
    MAX_BIT = 8,
    NONE_KHR = NONE,
    SAMPLE_ZERO_BIT_KHR = SAMPLE_ZERO_BIT,
    AVERAGE_BIT_KHR = AVERAGE_BIT,
    MIN_BIT_KHR = MIN_BIT,
    MAX_BIT_KHR = MAX_BIT,
    EXTERNAL_FORMAT_DOWNSAMPLE_BIT_ANDROID = 16,
    EXTERNAL_FORMAT_DOWNSAMPLE_ANDROID = EXTERNAL_FORMAT_DOWNSAMPLE_BIT_ANDROID,
    RESERVED_5_BIT_EXT = 32,
}

enum VK_RESOLVE_MODE_NONE = VkResolveModeFlagBits.NONE;
enum VK_RESOLVE_MODE_SAMPLE_ZERO_BIT = VkResolveModeFlagBits.SAMPLE_ZERO_BIT;
enum VK_RESOLVE_MODE_AVERAGE_BIT = VkResolveModeFlagBits.AVERAGE_BIT;
enum VK_RESOLVE_MODE_MIN_BIT = VkResolveModeFlagBits.MIN_BIT;
enum VK_RESOLVE_MODE_MAX_BIT = VkResolveModeFlagBits.MAX_BIT;
enum VK_RESOLVE_MODE_NONE_KHR = VK_RESOLVE_MODE_NONE;
enum VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR = VK_RESOLVE_MODE_SAMPLE_ZERO_BIT;
enum VK_RESOLVE_MODE_AVERAGE_BIT_KHR = VK_RESOLVE_MODE_AVERAGE_BIT;
enum VK_RESOLVE_MODE_MIN_BIT_KHR = VK_RESOLVE_MODE_MIN_BIT;
enum VK_RESOLVE_MODE_MAX_BIT_KHR = VK_RESOLVE_MODE_MAX_BIT;
enum VK_RESOLVE_MODE_EXTERNAL_FORMAT_DOWNSAMPLE_BIT_ANDROID = VkResolveModeFlagBits.EXTERNAL_FORMAT_DOWNSAMPLE_BIT_ANDROID;
deprecated("aliased")
enum VK_RESOLVE_MODE_EXTERNAL_FORMAT_DOWNSAMPLE_ANDROID = VK_RESOLVE_MODE_EXTERNAL_FORMAT_DOWNSAMPLE_BIT_ANDROID;
enum VK_RESOLVE_MODE_RESERVED_5_BIT_EXT = VkResolveModeFlagBits.RESERVED_5_BIT_EXT;

alias VkResolveModeFlags = VkFlags;

// Promoted from VK_EXT_scalar_block_layout (extension 222))

struct VkPhysicalDeviceScalarBlockLayoutFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES;
    void* pNext;
    VkBool32 scalarBlockLayout;
}

// Promoted from VK_EXT_separate_stencil_usage (extension 247)

struct VkImageStencilUsageCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO;
    const(void)* pNext;
    VkFlags stencilUsage;
}

// Promoted from VK_EXT_sampler_filter_minmax (extension 131)

enum VkSamplerReductionMode {
    WEIGHTED_AVERAGE = 0,
    MIN = 1,
    MAX = 2,
    WEIGHTED_AVERAGE_EXT = WEIGHTED_AVERAGE,
    MIN_EXT = MIN,
    MAX_EXT = MAX,
    WEIGHTED_AVERAGE_RANGECLAMP_QCOM = 1000521000,
}

enum VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE = VkSamplerReductionMode.WEIGHTED_AVERAGE;
enum VK_SAMPLER_REDUCTION_MODE_MIN = VkSamplerReductionMode.MIN;
enum VK_SAMPLER_REDUCTION_MODE_MAX = VkSamplerReductionMode.MAX;
enum VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT = VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE;
enum VK_SAMPLER_REDUCTION_MODE_MIN_EXT = VK_SAMPLER_REDUCTION_MODE_MIN;
enum VK_SAMPLER_REDUCTION_MODE_MAX_EXT = VK_SAMPLER_REDUCTION_MODE_MAX;
enum VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_RANGECLAMP_QCOM = VkSamplerReductionMode.WEIGHTED_AVERAGE_RANGECLAMP_QCOM;

struct VkSamplerReductionModeCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO;
    const(void)* pNext;
    VkSamplerReductionMode reductionMode;
}

struct VkPhysicalDeviceSamplerFilterMinmaxProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES;
    void* pNext;
    VkBool32 filterMinmaxSingleComponentFormats;
    VkBool32 filterMinmaxImageComponentMapping;
}

// Promoted from VK_KHR_vulkan_memory_model (extension 212)

struct VkPhysicalDeviceVulkanMemoryModelFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES;
    void* pNext;
    VkBool32 vulkanMemoryModel;
    VkBool32 vulkanMemoryModelDeviceScope;
    VkBool32 vulkanMemoryModelAvailabilityVisibilityChains;
}

// Promoted from VK_KHR_imageless_framebuffer (extension 109)

struct VkPhysicalDeviceImagelessFramebufferFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES;
    void* pNext;
    VkBool32 imagelessFramebuffer;
}

struct VkFramebufferAttachmentsCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO;
    const(void)* pNext;
    uint attachmentImageInfoCount;
    const(VkFramebufferAttachmentImageInfo)* pAttachmentImageInfos;
}

struct VkFramebufferAttachmentImageInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkFlags usage;
    uint width;
    uint height;
    uint layerCount;
    uint viewFormatCount;
    const(VkFormat)* pViewFormats;
}

struct VkRenderPassAttachmentBeginInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO;
    const(void)* pNext;
    uint attachmentCount;
    const(VkImageView)* pAttachments;
}

// Promoted from VK_KHR_uniform_buffer_standard_layout (extension 254)

struct VkPhysicalDeviceUniformBufferStandardLayoutFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES;
    void* pNext;
    VkBool32 uniformBufferStandardLayout;
}

// Promoted from VK_KHR_shader_subgroup_extended_types (extension 176)

struct VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES;
    void* pNext;
    VkBool32 shaderSubgroupExtendedTypes;
}

// Promoted from VK_KHR_separate_depth_stencil_layouts (extension 242)

struct VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES;
    void* pNext;
    VkBool32 separateDepthStencilLayouts;
}

struct VkAttachmentReferenceStencilLayout {
    VkStructureType sType = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT;
    void* pNext;
    VkImageLayout stencilLayout;
}

struct VkAttachmentDescriptionStencilLayout {
    VkStructureType sType = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT;
    void* pNext;
    VkImageLayout stencilInitialLayout;
    VkImageLayout stencilFinalLayout;
}

// Promoted from VK_EXT_host_query_reset (extension 262)

struct VkPhysicalDeviceHostQueryResetFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES;
    void* pNext;
    VkBool32 hostQueryReset;
}

version (VK_VERSION_1_2) {
    extern void vkResetQueryPool(
        VkDevice device,
        VkQueryPool queryPool,
        uint firstQuery,
        uint queryCount,
    );
}

// Promoted from VK_KHR_timeline_semaphore (extension 208)

enum VkSemaphoreType {
    BINARY = 0,
    TIMELINE = 1,
    BINARY_KHR = BINARY,
    TIMELINE_KHR = TIMELINE,
}

enum VK_SEMAPHORE_TYPE_BINARY = VkSemaphoreType.BINARY;
enum VK_SEMAPHORE_TYPE_TIMELINE = VkSemaphoreType.TIMELINE;
enum VK_SEMAPHORE_TYPE_BINARY_KHR = VK_SEMAPHORE_TYPE_BINARY;
enum VK_SEMAPHORE_TYPE_TIMELINE_KHR = VK_SEMAPHORE_TYPE_TIMELINE;

struct VkPhysicalDeviceTimelineSemaphoreFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES;
    void* pNext;
    VkBool32 timelineSemaphore;
}

struct VkPhysicalDeviceTimelineSemaphoreProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES;
    void* pNext;
    ulong maxTimelineSemaphoreValueDifference;
}

struct VkSemaphoreTypeCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO;
    const(void)* pNext;
    VkSemaphoreType semaphoreType;
    ulong initialValue;
}

struct VkTimelineSemaphoreSubmitInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO;
    const(void)* pNext;
    uint waitSemaphoreValueCount;
    const(ulong)* pWaitSemaphoreValues;
    uint signalSemaphoreValueCount;
    const(ulong)* pSignalSemaphoreValues;
}

enum VkSemaphoreWaitFlagBits : uint {
    ANY_BIT = 1,
    ANY_BIT_KHR = ANY_BIT,
}

enum VK_SEMAPHORE_WAIT_ANY_BIT = VkSemaphoreWaitFlagBits.ANY_BIT;
enum VK_SEMAPHORE_WAIT_ANY_BIT_KHR = VK_SEMAPHORE_WAIT_ANY_BIT;

alias VkSemaphoreWaitFlags = VkFlags;

struct VkSemaphoreWaitInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint semaphoreCount;
    const(VkSemaphore)* pSemaphores;
    const(ulong)* pValues;
}

struct VkSemaphoreSignalInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO;
    const(void)* pNext;
    VkSemaphore semaphore;
    ulong value;
}

version (VK_VERSION_1_2) {
    extern VkResult vkGetSemaphoreCounterValue(
        VkDevice device,
        VkSemaphore semaphore,
        ulong* pValue,
    );
    
    extern VkResult vkWaitSemaphores(
        VkDevice device,
        const(VkSemaphoreWaitInfo)* pWaitInfo,
        ulong timeout,
    );
    
    extern VkResult vkSignalSemaphore(
        VkDevice device,
        const(VkSemaphoreSignalInfo)* pSignalInfo,
    );
}

// Promoted from VK_KHR_buffer_device_address (extension 258)

struct VkPhysicalDeviceBufferDeviceAddressFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES;
    void* pNext;
    VkBool32 bufferDeviceAddress;
    VkBool32 bufferDeviceAddressCaptureReplay;
    VkBool32 bufferDeviceAddressMultiDevice;
}

struct VkBufferDeviceAddressInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO;
    const(void)* pNext;
    VkBuffer buffer;
}

struct VkBufferOpaqueCaptureAddressCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO;
    const(void)* pNext;
    ulong opaqueCaptureAddress;
}

struct VkMemoryOpaqueCaptureAddressAllocateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO;
    const(void)* pNext;
    ulong opaqueCaptureAddress;
}

struct VkDeviceMemoryOpaqueCaptureAddressInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO;
    const(void)* pNext;
    VkDeviceMemory memory;
}

version (VK_VERSION_1_2) {
    extern VkDeviceAddress vkGetBufferDeviceAddress(
        VkDevice device,
        const(VkBufferDeviceAddressInfo)* pInfo,
    );
    
    extern ulong vkGetBufferOpaqueCaptureAddress(
        VkDevice device,
        const(VkBufferDeviceAddressInfo)* pInfo,
    );
    
    extern ulong vkGetDeviceMemoryOpaqueCaptureAddress(
        VkDevice device,
        const(VkDeviceMemoryOpaqueCaptureAddressInfo)* pInfo,
    );
}


enum VK_API_VERSION_1_3 = VK_MAKE_API_VERSION(0, 1, 3, 0);

alias VkFlags64 = ulong;

struct VkPhysicalDeviceVulkan13Features {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES;
    void* pNext;
    VkBool32 robustImageAccess;
    VkBool32 inlineUniformBlock;
    VkBool32 descriptorBindingInlineUniformBlockUpdateAfterBind;
    VkBool32 pipelineCreationCacheControl;
    VkBool32 privateData;
    VkBool32 shaderDemoteToHelperInvocation;
    VkBool32 shaderTerminateInvocation;
    VkBool32 subgroupSizeControl;
    VkBool32 computeFullSubgroups;
    VkBool32 synchronization2;
    VkBool32 textureCompressionASTC_HDR;
    VkBool32 shaderZeroInitializeWorkgroupMemory;
    VkBool32 dynamicRendering;
    VkBool32 shaderIntegerDotProduct;
    VkBool32 maintenance4;
}

struct VkPhysicalDeviceVulkan13Properties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
    void* pNext;
    uint minSubgroupSize;
    uint maxSubgroupSize;
    uint maxComputeWorkgroupSubgroups;
    VkFlags requiredSubgroupSizeStages;
    uint maxInlineUniformBlockSize;
    uint maxPerStageDescriptorInlineUniformBlocks;
    uint maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks;
    uint maxDescriptorSetInlineUniformBlocks;
    uint maxDescriptorSetUpdateAfterBindInlineUniformBlocks;
    uint maxInlineUniformTotalSize;
    VkBool32 integerDotProduct8BitUnsignedAccelerated;
    VkBool32 integerDotProduct8BitSignedAccelerated;
    VkBool32 integerDotProduct8BitMixedSignednessAccelerated;
    VkBool32 integerDotProduct4x8BitPackedUnsignedAccelerated;
    VkBool32 integerDotProduct4x8BitPackedSignedAccelerated;
    VkBool32 integerDotProduct4x8BitPackedMixedSignednessAccelerated;
    VkBool32 integerDotProduct16BitUnsignedAccelerated;
    VkBool32 integerDotProduct16BitSignedAccelerated;
    VkBool32 integerDotProduct16BitMixedSignednessAccelerated;
    VkBool32 integerDotProduct32BitUnsignedAccelerated;
    VkBool32 integerDotProduct32BitSignedAccelerated;
    VkBool32 integerDotProduct32BitMixedSignednessAccelerated;
    VkBool32 integerDotProduct64BitUnsignedAccelerated;
    VkBool32 integerDotProduct64BitSignedAccelerated;
    VkBool32 integerDotProduct64BitMixedSignednessAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating8BitUnsignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating8BitSignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating16BitUnsignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating16BitSignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating32BitUnsignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating32BitSignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating64BitUnsignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating64BitSignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated;
    VkDeviceSize storageTexelBufferOffsetAlignmentBytes;
    VkBool32 storageTexelBufferOffsetSingleTexelAlignment;
    VkDeviceSize uniformTexelBufferOffsetAlignmentBytes;
    VkBool32 uniformTexelBufferOffsetSingleTexelAlignment;
    VkDeviceSize maxBufferSize;
}

// Promoted from VK_EXT_pipeline_creation_feedback (extension 193)

enum VkPipelineCreationFeedbackFlagBits : uint {
    VALID_BIT = 1,
    APPLICATION_PIPELINE_CACHE_HIT_BIT = 2,
    BASE_PIPELINE_ACCELERATION_BIT = 4,
    VALID_BIT_EXT = VALID_BIT,
    APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT = APPLICATION_PIPELINE_CACHE_HIT_BIT,
    BASE_PIPELINE_ACCELERATION_BIT_EXT = BASE_PIPELINE_ACCELERATION_BIT,
}

enum VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT = VkPipelineCreationFeedbackFlagBits.VALID_BIT;
enum VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT = VkPipelineCreationFeedbackFlagBits.APPLICATION_PIPELINE_CACHE_HIT_BIT;
enum VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT = VkPipelineCreationFeedbackFlagBits.BASE_PIPELINE_ACCELERATION_BIT;
enum VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT = VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT;
enum VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT = VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT;
enum VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT = VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT;

alias VkPipelineCreationFeedbackFlags = VkFlags;

struct VkPipelineCreationFeedbackCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO;
    const(void)* pNext;
    VkPipelineCreationFeedback* pPipelineCreationFeedback;
    uint pipelineStageCreationFeedbackCount;
    VkPipelineCreationFeedback* pPipelineStageCreationFeedbacks;
}

struct VkPipelineCreationFeedback {
    VkFlags flags;
    ulong duration;
}

// Promoted from VK_KHR_shader_terminate_invocation (extension 216)

struct VkPhysicalDeviceShaderTerminateInvocationFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES;
    void* pNext;
    VkBool32 shaderTerminateInvocation;
}

// Promoted from VK_EXT_tooling_info (extension 246)

enum VkToolPurposeFlagBits : uint {
    VALIDATION_BIT = 1,
    PROFILING_BIT = 2,
    TRACING_BIT = 4,
    ADDITIONAL_FEATURES_BIT = 8,
    MODIFYING_FEATURES_BIT = 16,
    VALIDATION_BIT_EXT = VALIDATION_BIT,
    PROFILING_BIT_EXT = PROFILING_BIT,
    TRACING_BIT_EXT = TRACING_BIT,
    ADDITIONAL_FEATURES_BIT_EXT = ADDITIONAL_FEATURES_BIT,
    MODIFYING_FEATURES_BIT_EXT = MODIFYING_FEATURES_BIT,
    DEBUG_REPORTING_BIT_EXT = 32,
    DEBUG_MARKERS_BIT_EXT = 64,
}

enum VK_TOOL_PURPOSE_VALIDATION_BIT = VkToolPurposeFlagBits.VALIDATION_BIT;
enum VK_TOOL_PURPOSE_PROFILING_BIT = VkToolPurposeFlagBits.PROFILING_BIT;
enum VK_TOOL_PURPOSE_TRACING_BIT = VkToolPurposeFlagBits.TRACING_BIT;
enum VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT = VkToolPurposeFlagBits.ADDITIONAL_FEATURES_BIT;
enum VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT = VkToolPurposeFlagBits.MODIFYING_FEATURES_BIT;
enum VK_TOOL_PURPOSE_VALIDATION_BIT_EXT = VK_TOOL_PURPOSE_VALIDATION_BIT;
enum VK_TOOL_PURPOSE_PROFILING_BIT_EXT = VK_TOOL_PURPOSE_PROFILING_BIT;
enum VK_TOOL_PURPOSE_TRACING_BIT_EXT = VK_TOOL_PURPOSE_TRACING_BIT;
enum VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT = VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT;
enum VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT = VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT;
enum VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT = VkToolPurposeFlagBits.DEBUG_REPORTING_BIT_EXT;
enum VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT = VkToolPurposeFlagBits.DEBUG_MARKERS_BIT_EXT;

alias VkToolPurposeFlags = VkFlags;

struct VkPhysicalDeviceToolProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES;
    void* pNext;
    char[VK_MAX_EXTENSION_NAME_SIZE] name;
    char[VK_MAX_EXTENSION_NAME_SIZE] version_;
    VkFlags purposes;
    char[VK_MAX_DESCRIPTION_SIZE] description;
    char[VK_MAX_EXTENSION_NAME_SIZE] layer;
}

version (VK_VERSION_1_3) {
    extern VkResult vkGetPhysicalDeviceToolProperties(
        VkPhysicalDevice physicalDevice,
        uint* pToolCount,
        VkPhysicalDeviceToolProperties* pToolProperties,
    );
}

// Promoted from VK_EXT_shader_demote_to_helper_invocation (extension 277)

struct VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES;
    void* pNext;
    VkBool32 shaderDemoteToHelperInvocation;
}

// Promoted from VK_EXT_private_data (extension 296)

struct VkPhysicalDevicePrivateDataFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES;
    void* pNext;
    VkBool32 privateData;
}

struct VkDevicePrivateDataCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO;
    const(void)* pNext;
    uint privateDataSlotRequestCount;
}

struct VkPrivateDataSlotCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO;
    const(void)* pNext;
    VkFlags flags;
}

alias VkPrivateDataSlot = OpaqueHandle!("VkPrivateDataSlot");

alias VkPrivateDataSlotCreateFlags = VkFlags;

version (VK_VERSION_1_3) {
    extern VkResult vkCreatePrivateDataSlot(
        VkDevice device,
        const(VkPrivateDataSlotCreateInfo)* pCreateInfo,
        const(VkAllocationCallbacks)* pAllocator,
        VkPrivateDataSlot* pPrivateDataSlot,
    );
    
    extern void vkDestroyPrivateDataSlot(
        VkDevice device,
        VkPrivateDataSlot privateDataSlot,
        const(VkAllocationCallbacks)* pAllocator,
    );
    
    extern VkResult vkSetPrivateData(
        VkDevice device,
        VkObjectType objectType,
        ulong objectHandle,
        VkPrivateDataSlot privateDataSlot,
        ulong data,
    );
    
    extern void vkGetPrivateData(
        VkDevice device,
        VkObjectType objectType,
        ulong objectHandle,
        VkPrivateDataSlot privateDataSlot,
        ulong* pData,
    );
}

// Promoted from VK_EXT_pipeline_creation_cache_control (extension 298)

struct VkPhysicalDevicePipelineCreationCacheControlFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES;
    void* pNext;
    VkBool32 pipelineCreationCacheControl;
}

enum VkPipelineCacheCreateFlagBits : uint {
    EXTERNALLY_SYNCHRONIZED_BIT = 1,
    READ_ONLY_BIT = 2,
    USE_APPLICATION_STORAGE_BIT = 4,
    EXTERNALLY_SYNCHRONIZED_BIT_EXT = EXTERNALLY_SYNCHRONIZED_BIT,
    INTERNALLY_SYNCHRONIZED_MERGE_BIT_KHR = 8,
}

enum VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT = VkPipelineCacheCreateFlagBits.EXTERNALLY_SYNCHRONIZED_BIT;
enum VK_PIPELINE_CACHE_CREATE_READ_ONLY_BIT = VkPipelineCacheCreateFlagBits.READ_ONLY_BIT;
enum VK_PIPELINE_CACHE_CREATE_USE_APPLICATION_STORAGE_BIT = VkPipelineCacheCreateFlagBits.USE_APPLICATION_STORAGE_BIT;
enum VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT = VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT;
enum VK_PIPELINE_CACHE_CREATE_INTERNALLY_SYNCHRONIZED_MERGE_BIT_KHR = VkPipelineCacheCreateFlagBits.INTERNALLY_SYNCHRONIZED_MERGE_BIT_KHR;

// Promoted from VK_KHR_synchronization2 (extension 315)

alias VkPipelineStageFlags2 = VkFlags64;

enum VkPipelineStageFlagBits2 : ulong {
    VK_PIPELINE_STAGE_2_NONE = 0,
    VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT = 1,
    VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT = 2,
    VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT = 4,
    VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT = 8,
    VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT = 16,
    VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT = 32,
    VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT = 64,
    VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT = 128,
    VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT = 256,
    VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT = 512,
    VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT = 1024,
    VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT = 2048,
    VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT = 4096,
    VK_PIPELINE_STAGE_2_TRANSFER_BIT = VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT,
    VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT = 8192,
    VK_PIPELINE_STAGE_2_HOST_BIT = 16384,
    VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT = 32768,
    VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT = 65536,
    VK_PIPELINE_STAGE_2_COPY_BIT = 1,
    VK_PIPELINE_STAGE_2_RESOLVE_BIT = 2,
    VK_PIPELINE_STAGE_2_BLIT_BIT = 4,
    VK_PIPELINE_STAGE_2_CLEAR_BIT = 8,
    VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT = 16,
    VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT = 32,
    VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT = 64,
    VK_PIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHR = 67108864,
    VK_PIPELINE_STAGE_2_VIDEO_ENCODE_BIT_KHR = 134217728,
    VK_PIPELINE_STAGE_2_NONE_KHR = VK_PIPELINE_STAGE_2_NONE,
    VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR = VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT,
    VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR = VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT,
    VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR = VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT,
    VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT,
    VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT,
    VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT,
    VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT,
    VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT,
    VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR = VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT,
    VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR = VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT,
    VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR = VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT,
    VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT,
    VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR = VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT,
    VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR = VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT,
    VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR = VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT,
    VK_PIPELINE_STAGE_2_HOST_BIT_KHR = VK_PIPELINE_STAGE_2_HOST_BIT,
    VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR = VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT,
    VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR = VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT,
    VK_PIPELINE_STAGE_2_COPY_BIT_KHR = VK_PIPELINE_STAGE_2_COPY_BIT,
    VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR = VK_PIPELINE_STAGE_2_RESOLVE_BIT,
    VK_PIPELINE_STAGE_2_BLIT_BIT_KHR = VK_PIPELINE_STAGE_2_BLIT_BIT,
    VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR = VK_PIPELINE_STAGE_2_CLEAR_BIT,
    VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR = VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT,
    VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR = VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT,
    VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR = VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT,
    VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT = 16777216,
    VK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT = 262144,
    VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV = VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_EXT,
    VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_EXT = 131072,
    VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 4194304,
    VK_PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV = VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,
    VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR = 33554432,
    VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR = 2097152,
    VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV = VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR,
    VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV = VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR,
    VK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT = 8388608,
    VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_NV = VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_EXT,
    VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_NV = VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_EXT,
    VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_EXT = 524288,
    VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_EXT = 1048576,
    VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI = 128,
    VK_PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI = VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI,
    VK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI = 256,
    VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_COPY_BIT_KHR = 268435456,
    VK_PIPELINE_STAGE_2_MICROMAP_BUILD_BIT_EXT = 1073741824,
    VK_PIPELINE_STAGE_2_CLUSTER_CULLING_SHADER_BIT_HUAWEI = 512,
    VK_PIPELINE_STAGE_2_OPTICAL_FLOW_BIT_NV = 536870912,
    VK_PIPELINE_STAGE_2_CONVERT_COOPERATIVE_VECTOR_MATRIX_BIT_NV = 4096,
    VK_PIPELINE_STAGE_2_DATA_GRAPH_BIT_ARM = 1024,
    VK_PIPELINE_STAGE_2_COPY_INDIRECT_BIT_KHR = 16384,
    VK_PIPELINE_STAGE_2_RESERVED_45_BIT_NV = 8192,
    VK_PIPELINE_STAGE_2_RESERVED_47_BIT_KHR = 32768,
    VK_PIPELINE_STAGE_2_RESERVED_43_BIT_ARM = 2048,
}

enum VK_PIPELINE_STAGE_2_NONE = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_NONE;
enum VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT;
enum VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT;
enum VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT;
enum VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT;
enum VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT;
enum VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT;
enum VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT;
enum VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT;
enum VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT;
enum VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT;
enum VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT;
enum VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT;
enum VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT;
enum VK_PIPELINE_STAGE_2_TRANSFER_BIT = VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT;
enum VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT;
enum VK_PIPELINE_STAGE_2_HOST_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_HOST_BIT;
enum VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT;
enum VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT;
enum VK_PIPELINE_STAGE_2_COPY_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_COPY_BIT;
enum VK_PIPELINE_STAGE_2_RESOLVE_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_RESOLVE_BIT;
enum VK_PIPELINE_STAGE_2_BLIT_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_BLIT_BIT;
enum VK_PIPELINE_STAGE_2_CLEAR_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_CLEAR_BIT;
enum VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT;
enum VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT;
enum VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT;
enum VK_PIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHR = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHR;
enum VK_PIPELINE_STAGE_2_VIDEO_ENCODE_BIT_KHR = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_VIDEO_ENCODE_BIT_KHR;
enum VK_PIPELINE_STAGE_2_NONE_KHR = VK_PIPELINE_STAGE_2_NONE;
enum VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR = VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT;
enum VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR = VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT;
enum VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR = VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT;
enum VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT;
enum VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT;
enum VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT;
enum VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT;
enum VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT;
enum VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR = VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT;
enum VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR = VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT;
enum VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR = VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT;
enum VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT;
enum VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR = VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT;
enum VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR = VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT;
enum VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR = VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT;
enum VK_PIPELINE_STAGE_2_HOST_BIT_KHR = VK_PIPELINE_STAGE_2_HOST_BIT;
enum VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR = VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT;
enum VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR = VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT;
enum VK_PIPELINE_STAGE_2_COPY_BIT_KHR = VK_PIPELINE_STAGE_2_COPY_BIT;
enum VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR = VK_PIPELINE_STAGE_2_RESOLVE_BIT;
enum VK_PIPELINE_STAGE_2_BLIT_BIT_KHR = VK_PIPELINE_STAGE_2_BLIT_BIT;
enum VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR = VK_PIPELINE_STAGE_2_CLEAR_BIT;
enum VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR = VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT;
enum VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR = VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT;
enum VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR = VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT;
enum VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT;
enum VK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT;
enum VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV = VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_EXT;
enum VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_EXT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_EXT;
enum VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR;
enum VK_PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV = VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR;
enum VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR;
enum VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR;
enum VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV = VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR;
enum VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV = VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR;
enum VK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT;
enum VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_NV = VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_EXT;
enum VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_NV = VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_EXT;
enum VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_EXT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_EXT;
enum VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_EXT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_EXT;
enum VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI;
deprecated("aliased")
enum VK_PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI = VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI;
enum VK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI;
enum VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_COPY_BIT_KHR = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_COPY_BIT_KHR;
enum VK_PIPELINE_STAGE_2_MICROMAP_BUILD_BIT_EXT = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_MICROMAP_BUILD_BIT_EXT;
enum VK_PIPELINE_STAGE_2_CLUSTER_CULLING_SHADER_BIT_HUAWEI = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_CLUSTER_CULLING_SHADER_BIT_HUAWEI;
enum VK_PIPELINE_STAGE_2_OPTICAL_FLOW_BIT_NV = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_OPTICAL_FLOW_BIT_NV;
enum VK_PIPELINE_STAGE_2_CONVERT_COOPERATIVE_VECTOR_MATRIX_BIT_NV = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_CONVERT_COOPERATIVE_VECTOR_MATRIX_BIT_NV;
enum VK_PIPELINE_STAGE_2_DATA_GRAPH_BIT_ARM = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_DATA_GRAPH_BIT_ARM;
enum VK_PIPELINE_STAGE_2_COPY_INDIRECT_BIT_KHR = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_COPY_INDIRECT_BIT_KHR;
enum VK_PIPELINE_STAGE_2_RESERVED_45_BIT_NV = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_RESERVED_45_BIT_NV;
enum VK_PIPELINE_STAGE_2_RESERVED_47_BIT_KHR = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_RESERVED_47_BIT_KHR;
enum VK_PIPELINE_STAGE_2_RESERVED_43_BIT_ARM = VkPipelineStageFlagBits2.VK_PIPELINE_STAGE_2_RESERVED_43_BIT_ARM;

alias VkAccessFlags2 = VkFlags64;

enum VkAccessFlagBits2 : ulong {
    VK_ACCESS_2_NONE = 0,
    VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT = 1,
    VK_ACCESS_2_INDEX_READ_BIT = 2,
    VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT = 4,
    VK_ACCESS_2_UNIFORM_READ_BIT = 8,
    VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT = 16,
    VK_ACCESS_2_SHADER_READ_BIT = 32,
    VK_ACCESS_2_SHADER_WRITE_BIT = 64,
    VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT = 128,
    VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT = 256,
    VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT = 512,
    VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = 1024,
    VK_ACCESS_2_TRANSFER_READ_BIT = 2048,
    VK_ACCESS_2_TRANSFER_WRITE_BIT = 4096,
    VK_ACCESS_2_HOST_READ_BIT = 8192,
    VK_ACCESS_2_HOST_WRITE_BIT = 16384,
    VK_ACCESS_2_MEMORY_READ_BIT = 32768,
    VK_ACCESS_2_MEMORY_WRITE_BIT = 65536,
    VK_ACCESS_2_SHADER_SAMPLED_READ_BIT = 1,
    VK_ACCESS_2_SHADER_STORAGE_READ_BIT = 2,
    VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT = 4,
    VK_ACCESS_2_VIDEO_DECODE_READ_BIT_KHR = 8,
    VK_ACCESS_2_VIDEO_DECODE_WRITE_BIT_KHR = 16,
    VK_ACCESS_2_RESERVED_57_BIT_KHR = 33554432,
    VK_ACCESS_2_RESERVED_58_BIT_KHR = 67108864,
    VK_ACCESS_2_RESERVED_59_BIT_KHR = 134217728,
    VK_ACCESS_2_RESERVED_46_BIT_INTEL = 16384,
    VK_ACCESS_2_VIDEO_ENCODE_READ_BIT_KHR = 32,
    VK_ACCESS_2_VIDEO_ENCODE_WRITE_BIT_KHR = 64,
    VK_ACCESS_2_SHADER_TILE_ATTACHMENT_READ_BIT_QCOM = 524288,
    VK_ACCESS_2_SHADER_TILE_ATTACHMENT_WRITE_BIT_QCOM = 1048576,
    VK_ACCESS_2_NONE_KHR = VK_ACCESS_2_NONE,
    VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR = VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT,
    VK_ACCESS_2_INDEX_READ_BIT_KHR = VK_ACCESS_2_INDEX_READ_BIT,
    VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR = VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT,
    VK_ACCESS_2_UNIFORM_READ_BIT_KHR = VK_ACCESS_2_UNIFORM_READ_BIT,
    VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR = VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT,
    VK_ACCESS_2_SHADER_READ_BIT_KHR = VK_ACCESS_2_SHADER_READ_BIT,
    VK_ACCESS_2_SHADER_WRITE_BIT_KHR = VK_ACCESS_2_SHADER_WRITE_BIT,
    VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR = VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT,
    VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR = VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT,
    VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR = VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT,
    VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR = VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT,
    VK_ACCESS_2_TRANSFER_READ_BIT_KHR = VK_ACCESS_2_TRANSFER_READ_BIT,
    VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR = VK_ACCESS_2_TRANSFER_WRITE_BIT,
    VK_ACCESS_2_HOST_READ_BIT_KHR = VK_ACCESS_2_HOST_READ_BIT,
    VK_ACCESS_2_HOST_WRITE_BIT_KHR = VK_ACCESS_2_HOST_WRITE_BIT,
    VK_ACCESS_2_MEMORY_READ_BIT_KHR = VK_ACCESS_2_MEMORY_READ_BIT,
    VK_ACCESS_2_MEMORY_WRITE_BIT_KHR = VK_ACCESS_2_MEMORY_WRITE_BIT,
    VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR = VK_ACCESS_2_SHADER_SAMPLED_READ_BIT,
    VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR = VK_ACCESS_2_SHADER_STORAGE_READ_BIT,
    VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR = VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT,
    VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT = 33554432,
    VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT = 67108864,
    VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT = 134217728,
    VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT = 1048576,
    VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_NV = VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_EXT,
    VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_NV = VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_EXT,
    VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_EXT = 131072,
    VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_EXT = 262144,
    VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR = 8388608,
    VK_ACCESS_2_SHADING_RATE_IMAGE_READ_BIT_NV = VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR,
    VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR = 2097152,
    VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR = 4194304,
    VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_NV = VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR,
    VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_NV = VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR,
    VK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT = 16777216,
    VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT = 524288,
    VK_ACCESS_2_DESCRIPTOR_BUFFER_READ_BIT_EXT = 512,
    VK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI = 128,
    VK_ACCESS_2_SHADER_BINDING_TABLE_READ_BIT_KHR = 256,
    VK_ACCESS_2_MICROMAP_READ_BIT_EXT = 4096,
    VK_ACCESS_2_MICROMAP_WRITE_BIT_EXT = 8192,
    VK_ACCESS_2_OPTICAL_FLOW_READ_BIT_NV = 1024,
    VK_ACCESS_2_OPTICAL_FLOW_WRITE_BIT_NV = 2048,
    VK_ACCESS_2_DATA_GRAPH_READ_BIT_ARM = 32768,
    VK_ACCESS_2_DATA_GRAPH_WRITE_BIT_ARM = 65536,
    VK_ACCESS_2_RESERVED_55_BIT_NV = 8388608,
    VK_ACCESS_2_RESERVED_56_BIT_NV = 16777216,
    VK_ACCESS_2_RESERVED_60_BIT_KHR = 268435456,
    VK_ACCESS_2_RESERVED_61_BIT_KHR = 536870912,
    VK_ACCESS_2_RESERVED_49_BIT_ARM = 131072,
    VK_ACCESS_2_RESERVED_50_BIT_ARM = 262144,
}

enum VK_ACCESS_2_NONE = VkAccessFlagBits2.VK_ACCESS_2_NONE;
enum VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT;
enum VK_ACCESS_2_INDEX_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_INDEX_READ_BIT;
enum VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT;
enum VK_ACCESS_2_UNIFORM_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_UNIFORM_READ_BIT;
enum VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT;
enum VK_ACCESS_2_SHADER_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_SHADER_READ_BIT;
enum VK_ACCESS_2_SHADER_WRITE_BIT = VkAccessFlagBits2.VK_ACCESS_2_SHADER_WRITE_BIT;
enum VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT;
enum VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT = VkAccessFlagBits2.VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT;
enum VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT;
enum VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = VkAccessFlagBits2.VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT;
enum VK_ACCESS_2_TRANSFER_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_TRANSFER_READ_BIT;
enum VK_ACCESS_2_TRANSFER_WRITE_BIT = VkAccessFlagBits2.VK_ACCESS_2_TRANSFER_WRITE_BIT;
enum VK_ACCESS_2_HOST_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_HOST_READ_BIT;
enum VK_ACCESS_2_HOST_WRITE_BIT = VkAccessFlagBits2.VK_ACCESS_2_HOST_WRITE_BIT;
enum VK_ACCESS_2_MEMORY_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_MEMORY_READ_BIT;
enum VK_ACCESS_2_MEMORY_WRITE_BIT = VkAccessFlagBits2.VK_ACCESS_2_MEMORY_WRITE_BIT;
enum VK_ACCESS_2_SHADER_SAMPLED_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_SHADER_SAMPLED_READ_BIT;
enum VK_ACCESS_2_SHADER_STORAGE_READ_BIT = VkAccessFlagBits2.VK_ACCESS_2_SHADER_STORAGE_READ_BIT;
enum VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT = VkAccessFlagBits2.VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT;
enum VK_ACCESS_2_VIDEO_DECODE_READ_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_VIDEO_DECODE_READ_BIT_KHR;
enum VK_ACCESS_2_VIDEO_DECODE_WRITE_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_VIDEO_DECODE_WRITE_BIT_KHR;
enum VK_ACCESS_2_RESERVED_57_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_RESERVED_57_BIT_KHR;
enum VK_ACCESS_2_RESERVED_58_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_RESERVED_58_BIT_KHR;
enum VK_ACCESS_2_RESERVED_59_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_RESERVED_59_BIT_KHR;
enum VK_ACCESS_2_RESERVED_46_BIT_INTEL = VkAccessFlagBits2.VK_ACCESS_2_RESERVED_46_BIT_INTEL;
enum VK_ACCESS_2_VIDEO_ENCODE_READ_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_VIDEO_ENCODE_READ_BIT_KHR;
enum VK_ACCESS_2_VIDEO_ENCODE_WRITE_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_VIDEO_ENCODE_WRITE_BIT_KHR;
enum VK_ACCESS_2_SHADER_TILE_ATTACHMENT_READ_BIT_QCOM = VkAccessFlagBits2.VK_ACCESS_2_SHADER_TILE_ATTACHMENT_READ_BIT_QCOM;
enum VK_ACCESS_2_SHADER_TILE_ATTACHMENT_WRITE_BIT_QCOM = VkAccessFlagBits2.VK_ACCESS_2_SHADER_TILE_ATTACHMENT_WRITE_BIT_QCOM;
enum VK_ACCESS_2_NONE_KHR = VK_ACCESS_2_NONE;
enum VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR = VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT;
enum VK_ACCESS_2_INDEX_READ_BIT_KHR = VK_ACCESS_2_INDEX_READ_BIT;
enum VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR = VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT;
enum VK_ACCESS_2_UNIFORM_READ_BIT_KHR = VK_ACCESS_2_UNIFORM_READ_BIT;
enum VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR = VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT;
enum VK_ACCESS_2_SHADER_READ_BIT_KHR = VK_ACCESS_2_SHADER_READ_BIT;
enum VK_ACCESS_2_SHADER_WRITE_BIT_KHR = VK_ACCESS_2_SHADER_WRITE_BIT;
enum VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR = VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT;
enum VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR = VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT;
enum VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR = VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT;
enum VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR = VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT;
enum VK_ACCESS_2_TRANSFER_READ_BIT_KHR = VK_ACCESS_2_TRANSFER_READ_BIT;
enum VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR = VK_ACCESS_2_TRANSFER_WRITE_BIT;
enum VK_ACCESS_2_HOST_READ_BIT_KHR = VK_ACCESS_2_HOST_READ_BIT;
enum VK_ACCESS_2_HOST_WRITE_BIT_KHR = VK_ACCESS_2_HOST_WRITE_BIT;
enum VK_ACCESS_2_MEMORY_READ_BIT_KHR = VK_ACCESS_2_MEMORY_READ_BIT;
enum VK_ACCESS_2_MEMORY_WRITE_BIT_KHR = VK_ACCESS_2_MEMORY_WRITE_BIT;
enum VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR = VK_ACCESS_2_SHADER_SAMPLED_READ_BIT;
enum VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR = VK_ACCESS_2_SHADER_STORAGE_READ_BIT;
enum VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR = VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT;
enum VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT = VkAccessFlagBits2.VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT;
enum VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT = VkAccessFlagBits2.VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT;
enum VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT = VkAccessFlagBits2.VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT;
enum VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT = VkAccessFlagBits2.VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT;
enum VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_NV = VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_EXT;
enum VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_NV = VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_EXT;
enum VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_EXT = VkAccessFlagBits2.VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_EXT;
enum VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_EXT = VkAccessFlagBits2.VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_EXT;
enum VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR;
enum VK_ACCESS_2_SHADING_RATE_IMAGE_READ_BIT_NV = VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR;
enum VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR;
enum VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR;
enum VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_NV = VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR;
enum VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_NV = VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR;
enum VK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT = VkAccessFlagBits2.VK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT;
enum VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT = VkAccessFlagBits2.VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT;
enum VK_ACCESS_2_DESCRIPTOR_BUFFER_READ_BIT_EXT = VkAccessFlagBits2.VK_ACCESS_2_DESCRIPTOR_BUFFER_READ_BIT_EXT;
enum VK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI = VkAccessFlagBits2.VK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI;
enum VK_ACCESS_2_SHADER_BINDING_TABLE_READ_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_SHADER_BINDING_TABLE_READ_BIT_KHR;
enum VK_ACCESS_2_MICROMAP_READ_BIT_EXT = VkAccessFlagBits2.VK_ACCESS_2_MICROMAP_READ_BIT_EXT;
enum VK_ACCESS_2_MICROMAP_WRITE_BIT_EXT = VkAccessFlagBits2.VK_ACCESS_2_MICROMAP_WRITE_BIT_EXT;
enum VK_ACCESS_2_OPTICAL_FLOW_READ_BIT_NV = VkAccessFlagBits2.VK_ACCESS_2_OPTICAL_FLOW_READ_BIT_NV;
enum VK_ACCESS_2_OPTICAL_FLOW_WRITE_BIT_NV = VkAccessFlagBits2.VK_ACCESS_2_OPTICAL_FLOW_WRITE_BIT_NV;
enum VK_ACCESS_2_DATA_GRAPH_READ_BIT_ARM = VkAccessFlagBits2.VK_ACCESS_2_DATA_GRAPH_READ_BIT_ARM;
enum VK_ACCESS_2_DATA_GRAPH_WRITE_BIT_ARM = VkAccessFlagBits2.VK_ACCESS_2_DATA_GRAPH_WRITE_BIT_ARM;
enum VK_ACCESS_2_RESERVED_55_BIT_NV = VkAccessFlagBits2.VK_ACCESS_2_RESERVED_55_BIT_NV;
enum VK_ACCESS_2_RESERVED_56_BIT_NV = VkAccessFlagBits2.VK_ACCESS_2_RESERVED_56_BIT_NV;
enum VK_ACCESS_2_RESERVED_60_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_RESERVED_60_BIT_KHR;
enum VK_ACCESS_2_RESERVED_61_BIT_KHR = VkAccessFlagBits2.VK_ACCESS_2_RESERVED_61_BIT_KHR;
enum VK_ACCESS_2_RESERVED_49_BIT_ARM = VkAccessFlagBits2.VK_ACCESS_2_RESERVED_49_BIT_ARM;
enum VK_ACCESS_2_RESERVED_50_BIT_ARM = VkAccessFlagBits2.VK_ACCESS_2_RESERVED_50_BIT_ARM;

struct VkMemoryBarrier2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_MEMORY_BARRIER_2;
    const(void)* pNext;
    VkFlags64 srcStageMask;
    VkFlags64 srcAccessMask;
    VkFlags64 dstStageMask;
    VkFlags64 dstAccessMask;
}

struct VkBufferMemoryBarrier2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2;
    const(void)* pNext;
    VkFlags64 srcStageMask;
    VkFlags64 srcAccessMask;
    VkFlags64 dstStageMask;
    VkFlags64 dstAccessMask;
    uint srcQueueFamilyIndex;
    uint dstQueueFamilyIndex;
    VkBuffer buffer;
    VkDeviceSize offset;
    VkDeviceSize size;
}

struct VkImageMemoryBarrier2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2;
    const(void)* pNext;
    VkFlags64 srcStageMask;
    VkFlags64 srcAccessMask;
    VkFlags64 dstStageMask;
    VkFlags64 dstAccessMask;
    VkImageLayout oldLayout;
    VkImageLayout newLayout;
    uint srcQueueFamilyIndex;
    uint dstQueueFamilyIndex;
    VkImage image;
    VkImageSubresourceRange subresourceRange;
}

struct VkDependencyInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO;
    const(void)* pNext;
    VkFlags dependencyFlags;
    uint memoryBarrierCount;
    const(VkMemoryBarrier2)* pMemoryBarriers;
    uint bufferMemoryBarrierCount;
    const(VkBufferMemoryBarrier2)* pBufferMemoryBarriers;
    uint imageMemoryBarrierCount;
    const(VkImageMemoryBarrier2)* pImageMemoryBarriers;
}

struct VkSubmitInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2;
    const(void)* pNext;
    VkFlags flags;
    uint waitSemaphoreInfoCount;
    const(VkSemaphoreSubmitInfo)* pWaitSemaphoreInfos;
    uint commandBufferInfoCount;
    const(VkCommandBufferSubmitInfo)* pCommandBufferInfos;
    uint signalSemaphoreInfoCount;
    const(VkSemaphoreSubmitInfo)* pSignalSemaphoreInfos;
}

struct VkSemaphoreSubmitInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO;
    const(void)* pNext;
    VkSemaphore semaphore;
    ulong value;
    VkFlags64 stageMask;
    uint deviceIndex;
}

struct VkCommandBufferSubmitInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO;
    const(void)* pNext;
    VkCommandBuffer commandBuffer;
    uint deviceMask;
}

enum VkSubmitFlagBits : uint {
    PROTECTED_BIT = 1,
    PROTECTED_BIT_KHR = PROTECTED_BIT,
}

enum VK_SUBMIT_PROTECTED_BIT = VkSubmitFlagBits.PROTECTED_BIT;
enum VK_SUBMIT_PROTECTED_BIT_KHR = VK_SUBMIT_PROTECTED_BIT;

alias VkSubmitFlags = VkFlags;

struct VkPhysicalDeviceSynchronization2Features {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES;
    void* pNext;
    VkBool32 synchronization2;
}

version (VK_VERSION_1_3) {
    extern void vkCmdSetEvent2(
        VkCommandBuffer commandBuffer,
        VkEvent event,
        const(VkDependencyInfo)* pDependencyInfo,
    );
    
    extern void vkCmdResetEvent2(
        VkCommandBuffer commandBuffer,
        VkEvent event,
        VkPipelineStageFlags2 stageMask,
    );
    
    extern void vkCmdWaitEvents2(
        VkCommandBuffer commandBuffer,
        uint eventCount,
        const(VkEvent)* pEvents,
        const(VkDependencyInfo)* pDependencyInfos,
    );
    
    extern void vkCmdPipelineBarrier2(
        VkCommandBuffer commandBuffer,
        const(VkDependencyInfo)* pDependencyInfo,
    );
    
    extern void vkCmdWriteTimestamp2(
        VkCommandBuffer commandBuffer,
        VkPipelineStageFlags2 stage,
        VkQueryPool queryPool,
        uint query,
    );
    
    extern VkResult vkQueueSubmit2(
        VkQueue queue,
        uint submitCount,
        const(VkSubmitInfo2)* pSubmits,
        VkFence fence,
    );
}

// Promoted from VK_KHR_zero_initialize_workgroup_memory (extension 326)

struct VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES;
    void* pNext;
    VkBool32 shaderZeroInitializeWorkgroupMemory;
}

// Promoted from VK_EXT_image_robustness (extension 336)

struct VkPhysicalDeviceImageRobustnessFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES;
    void* pNext;
    VkBool32 robustImageAccess;
}

// Promoted from VK_KHR_copy_commands2 (extension 338)

struct VkCopyBufferInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2;
    const(void)* pNext;
    VkBuffer srcBuffer;
    VkBuffer dstBuffer;
    uint regionCount;
    const(VkBufferCopy2)* pRegions;
}

struct VkCopyImageInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2;
    const(void)* pNext;
    VkImage srcImage;
    VkImageLayout srcImageLayout;
    VkImage dstImage;
    VkImageLayout dstImageLayout;
    uint regionCount;
    const(VkImageCopy2)* pRegions;
}

struct VkCopyBufferToImageInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2;
    const(void)* pNext;
    VkBuffer srcBuffer;
    VkImage dstImage;
    VkImageLayout dstImageLayout;
    uint regionCount;
    const(VkBufferImageCopy2)* pRegions;
}

struct VkCopyImageToBufferInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2;
    const(void)* pNext;
    VkImage srcImage;
    VkImageLayout srcImageLayout;
    VkBuffer dstBuffer;
    uint regionCount;
    const(VkBufferImageCopy2)* pRegions;
}

struct VkBlitImageInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2;
    const(void)* pNext;
    VkImage srcImage;
    VkImageLayout srcImageLayout;
    VkImage dstImage;
    VkImageLayout dstImageLayout;
    uint regionCount;
    const(VkImageBlit2)* pRegions;
    VkFilter filter;
}

struct VkResolveImageInfo2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2;
    const(void)* pNext;
    VkImage srcImage;
    VkImageLayout srcImageLayout;
    VkImage dstImage;
    VkImageLayout dstImageLayout;
    uint regionCount;
    const(VkImageResolve2)* pRegions;
}

struct VkBufferCopy2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_BUFFER_COPY_2;
    const(void)* pNext;
    VkDeviceSize srcOffset;
    VkDeviceSize dstOffset;
    VkDeviceSize size;
}

struct VkImageCopy2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_COPY_2;
    const(void)* pNext;
    VkImageSubresourceLayers srcSubresource;
    VkOffset3D srcOffset;
    VkImageSubresourceLayers dstSubresource;
    VkOffset3D dstOffset;
    VkExtent3D extent;
}

struct VkImageBlit2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2;
    const(void)* pNext;
    VkImageSubresourceLayers srcSubresource;
    VkOffset3D srcOffsets;
    VkImageSubresourceLayers dstSubresource;
    VkOffset3D dstOffsets;
}

struct VkBufferImageCopy2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2;
    const(void)* pNext;
    VkDeviceSize bufferOffset;
    uint bufferRowLength;
    uint bufferImageHeight;
    VkImageSubresourceLayers imageSubresource;
    VkOffset3D imageOffset;
    VkExtent3D imageExtent;
}

struct VkImageResolve2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2;
    const(void)* pNext;
    VkImageSubresourceLayers srcSubresource;
    VkOffset3D srcOffset;
    VkImageSubresourceLayers dstSubresource;
    VkOffset3D dstOffset;
    VkExtent3D extent;
}

version (VK_VERSION_1_3) {
    extern void vkCmdCopyBuffer2(
        VkCommandBuffer commandBuffer,
        const(VkCopyBufferInfo2)* pCopyBufferInfo,
    );
    
    extern void vkCmdCopyImage2(
        VkCommandBuffer commandBuffer,
        const(VkCopyImageInfo2)* pCopyImageInfo,
    );
    
    extern void vkCmdCopyBufferToImage2(
        VkCommandBuffer commandBuffer,
        const(VkCopyBufferToImageInfo2)* pCopyBufferToImageInfo,
    );
    
    extern void vkCmdCopyImageToBuffer2(
        VkCommandBuffer commandBuffer,
        const(VkCopyImageToBufferInfo2)* pCopyImageToBufferInfo,
    );
    
    extern void vkCmdBlitImage2(
        VkCommandBuffer commandBuffer,
        const(VkBlitImageInfo2)* pBlitImageInfo,
    );
    
    extern void vkCmdResolveImage2(
        VkCommandBuffer commandBuffer,
        const(VkResolveImageInfo2)* pResolveImageInfo,
    );
}

// Promoted from VK_EXT_subgroup_size_control (STDPROMOTE/PROPLIMCHANGE) (extension 226)

struct VkPhysicalDeviceSubgroupSizeControlFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES;
    void* pNext;
    VkBool32 subgroupSizeControl;
    VkBool32 computeFullSubgroups;
}

struct VkPhysicalDeviceSubgroupSizeControlProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES;
    void* pNext;
    uint minSubgroupSize;
    uint maxSubgroupSize;
    uint maxComputeWorkgroupSubgroups;
    VkFlags requiredSubgroupSizeStages;
}

struct VkPipelineShaderStageRequiredSubgroupSizeCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO;
    const(void)* pNext;
    uint requiredSubgroupSize;
}

// Promoted from VK_EXT_inline_uniform_block (STDPROMOTE/PROPLIMCHANGE) (extension 139)

struct VkPhysicalDeviceInlineUniformBlockFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES;
    void* pNext;
    VkBool32 inlineUniformBlock;
    VkBool32 descriptorBindingInlineUniformBlockUpdateAfterBind;
}

struct VkPhysicalDeviceInlineUniformBlockProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES;
    void* pNext;
    uint maxInlineUniformBlockSize;
    uint maxPerStageDescriptorInlineUniformBlocks;
    uint maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks;
    uint maxDescriptorSetInlineUniformBlocks;
    uint maxDescriptorSetUpdateAfterBindInlineUniformBlocks;
}

struct VkWriteDescriptorSetInlineUniformBlock {
    VkStructureType sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK;
    const(void)* pNext;
    uint dataSize;
    const(void)* pData;
}

struct VkDescriptorPoolInlineUniformBlockCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO;
    const(void)* pNext;
    uint maxInlineUniformBlockBindings;
}

// Promoted from VK_EXT_texture_compression_astc_hdr (Feature struct is promoted, but becomes optional) (extension 67)

struct VkPhysicalDeviceTextureCompressionASTCHDRFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES;
    void* pNext;
    VkBool32 textureCompressionASTC_HDR;
}

// Promoted from VK_KHR_dynamic_rendering (extension 45)

struct VkRenderingInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_RENDERING_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkRect2D renderArea;
    uint layerCount;
    uint viewMask;
    uint colorAttachmentCount;
    const(VkRenderingAttachmentInfo)* pColorAttachments;
    const(VkRenderingAttachmentInfo)* pDepthAttachment;
    const(VkRenderingAttachmentInfo)* pStencilAttachment;
}

struct VkRenderingAttachmentInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO;
    const(void)* pNext;
    VkImageView imageView;
    VkImageLayout imageLayout;
    VkResolveModeFlagBits resolveMode;
    VkImageView resolveImageView;
    VkImageLayout resolveImageLayout;
    VkAttachmentLoadOp loadOp;
    VkAttachmentStoreOp storeOp;
    VkClearValue clearValue;
}

struct VkPipelineRenderingCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO;
    const(void)* pNext;
    uint viewMask;
    uint colorAttachmentCount;
    const(VkFormat)* pColorAttachmentFormats;
    VkFormat depthAttachmentFormat;
    VkFormat stencilAttachmentFormat;
}

struct VkPhysicalDeviceDynamicRenderingFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES;
    void* pNext;
    VkBool32 dynamicRendering;
}

struct VkCommandBufferInheritanceRenderingInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO;
    const(void)* pNext;
    VkFlags flags;
    uint viewMask;
    uint colorAttachmentCount;
    const(VkFormat)* pColorAttachmentFormats;
    VkFormat depthAttachmentFormat;
    VkFormat stencilAttachmentFormat;
    VkSampleCountFlagBits rasterizationSamples;
}

alias VkRenderingFlags = VkFlags;

enum VkRenderingFlagBits : uint {
    CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT = 1,
    SUSPENDING_BIT = 2,
    RESUMING_BIT = 4,
    CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR = CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT,
    SUSPENDING_BIT_KHR = SUSPENDING_BIT,
    RESUMING_BIT_KHR = RESUMING_BIT,
    RESERVED_9_BIT_IMG = 512,
    CONTENTS_INLINE_BIT_EXT = CONTENTS_INLINE_BIT_KHR,
    ENABLE_LEGACY_DITHERING_BIT_EXT = 8,
    CONTENTS_INLINE_BIT_KHR = 16,
    PER_LAYER_FRAGMENT_DENSITY_BIT_VALVE = 32,
    RESERVED_6_BIT_EXT = 64,
    RESERVED_7_BIT_EXT = 128,
    RESERVED_8_BIT_KHR = 256,
}

enum VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT = VkRenderingFlagBits.CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT;
enum VK_RENDERING_SUSPENDING_BIT = VkRenderingFlagBits.SUSPENDING_BIT;
enum VK_RENDERING_RESUMING_BIT = VkRenderingFlagBits.RESUMING_BIT;
enum VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR = VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT;
enum VK_RENDERING_SUSPENDING_BIT_KHR = VK_RENDERING_SUSPENDING_BIT;
enum VK_RENDERING_RESUMING_BIT_KHR = VK_RENDERING_RESUMING_BIT;
enum VK_RENDERING_RESERVED_9_BIT_IMG = VkRenderingFlagBits.RESERVED_9_BIT_IMG;
enum VK_RENDERING_CONTENTS_INLINE_BIT_EXT = VK_RENDERING_CONTENTS_INLINE_BIT_KHR;
enum VK_RENDERING_ENABLE_LEGACY_DITHERING_BIT_EXT = VkRenderingFlagBits.ENABLE_LEGACY_DITHERING_BIT_EXT;
enum VK_RENDERING_CONTENTS_INLINE_BIT_KHR = VkRenderingFlagBits.CONTENTS_INLINE_BIT_KHR;
enum VK_RENDERING_PER_LAYER_FRAGMENT_DENSITY_BIT_VALVE = VkRenderingFlagBits.PER_LAYER_FRAGMENT_DENSITY_BIT_VALVE;
enum VK_RENDERING_RESERVED_6_BIT_EXT = VkRenderingFlagBits.RESERVED_6_BIT_EXT;
enum VK_RENDERING_RESERVED_7_BIT_EXT = VkRenderingFlagBits.RESERVED_7_BIT_EXT;
enum VK_RENDERING_RESERVED_8_BIT_KHR = VkRenderingFlagBits.RESERVED_8_BIT_KHR;

version (VK_VERSION_1_3) {
    extern void vkCmdBeginRendering(
        VkCommandBuffer commandBuffer,
        const(VkRenderingInfo)* pRenderingInfo,
    );
    
    extern void vkCmdEndRendering(
        VkCommandBuffer commandBuffer,
    );
}

// Promoted from VK_EXT_extended_dynamic_state (Feature struct is not promoted) (extension 268)

version (VK_VERSION_1_3) {
    extern void vkCmdSetCullMode(
        VkCommandBuffer commandBuffer,
        VkCullModeFlags cullMode,
    );
    
    extern void vkCmdSetFrontFace(
        VkCommandBuffer commandBuffer,
        VkFrontFace frontFace,
    );
    
    extern void vkCmdSetPrimitiveTopology(
        VkCommandBuffer commandBuffer,
        VkPrimitiveTopology primitiveTopology,
    );
    
    extern void vkCmdSetViewportWithCount(
        VkCommandBuffer commandBuffer,
        uint viewportCount,
        const(VkViewport)* pViewports,
    );
    
    extern void vkCmdSetScissorWithCount(
        VkCommandBuffer commandBuffer,
        uint scissorCount,
        const(VkRect2D)* pScissors,
    );
    
    extern void vkCmdBindVertexBuffers2(
        VkCommandBuffer commandBuffer,
        uint firstBinding,
        uint bindingCount,
        const(VkBuffer)* pBuffers,
        const(VkDeviceSize)* pOffsets,
        const(VkDeviceSize)* pSizes,
        const(VkDeviceSize)* pStrides,
    );
    
    extern void vkCmdSetDepthTestEnable(
        VkCommandBuffer commandBuffer,
        VkBool32 depthTestEnable,
    );
    
    extern void vkCmdSetDepthWriteEnable(
        VkCommandBuffer commandBuffer,
        VkBool32 depthWriteEnable,
    );
    
    extern void vkCmdSetDepthCompareOp(
        VkCommandBuffer commandBuffer,
        VkCompareOp depthCompareOp,
    );
    
    extern void vkCmdSetDepthBoundsTestEnable(
        VkCommandBuffer commandBuffer,
        VkBool32 depthBoundsTestEnable,
    );
    
    extern void vkCmdSetStencilTestEnable(
        VkCommandBuffer commandBuffer,
        VkBool32 stencilTestEnable,
    );
    
    extern void vkCmdSetStencilOp(
        VkCommandBuffer commandBuffer,
        VkStencilFaceFlags faceMask,
        VkStencilOp failOp,
        VkStencilOp passOp,
        VkStencilOp depthFailOp,
        VkCompareOp compareOp,
    );
}

// Promoted from VK_KHR_shader_integer_dot_product (extension 281)

struct VkPhysicalDeviceShaderIntegerDotProductFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES;
    void* pNext;
    VkBool32 shaderIntegerDotProduct;
}

struct VkPhysicalDeviceShaderIntegerDotProductProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES;
    void* pNext;
    VkBool32 integerDotProduct8BitUnsignedAccelerated;
    VkBool32 integerDotProduct8BitSignedAccelerated;
    VkBool32 integerDotProduct8BitMixedSignednessAccelerated;
    VkBool32 integerDotProduct4x8BitPackedUnsignedAccelerated;
    VkBool32 integerDotProduct4x8BitPackedSignedAccelerated;
    VkBool32 integerDotProduct4x8BitPackedMixedSignednessAccelerated;
    VkBool32 integerDotProduct16BitUnsignedAccelerated;
    VkBool32 integerDotProduct16BitSignedAccelerated;
    VkBool32 integerDotProduct16BitMixedSignednessAccelerated;
    VkBool32 integerDotProduct32BitUnsignedAccelerated;
    VkBool32 integerDotProduct32BitSignedAccelerated;
    VkBool32 integerDotProduct32BitMixedSignednessAccelerated;
    VkBool32 integerDotProduct64BitUnsignedAccelerated;
    VkBool32 integerDotProduct64BitSignedAccelerated;
    VkBool32 integerDotProduct64BitMixedSignednessAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating8BitUnsignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating8BitSignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating16BitUnsignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating16BitSignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating32BitUnsignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating32BitSignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating64BitUnsignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating64BitSignedAccelerated;
    VkBool32 integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated;
}

// Promoted from VK_EXT_texel_buffer_alignment (extension 282)

struct VkPhysicalDeviceTexelBufferAlignmentProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES;
    void* pNext;
    VkDeviceSize storageTexelBufferOffsetAlignmentBytes;
    VkBool32 storageTexelBufferOffsetSingleTexelAlignment;
    VkDeviceSize uniformTexelBufferOffsetAlignmentBytes;
    VkBool32 uniformTexelBufferOffsetSingleTexelAlignment;
}

// Promoted from VK_KHR_format_feature_flags2 (extension 361)

alias VkFormatFeatureFlags2 = VkFlags64;

enum VkFormatFeatureFlagBits2 : ulong {
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT = 1,
    VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT = 2,
    VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT = 4,
    VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT = 8,
    VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT = 16,
    VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT = 32,
    VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT = 64,
    VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT = 128,
    VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT = 256,
    VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT = 512,
    VK_FORMAT_FEATURE_2_BLIT_SRC_BIT = 1024,
    VK_FORMAT_FEATURE_2_BLIT_DST_BIT = 2048,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT = 4096,
    VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT = 16384,
    VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT = 32768,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT = 65536,
    VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT = 131072,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT = 262144,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT = 524288,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT = 1048576,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT = 2097152,
    VK_FORMAT_FEATURE_2_DISJOINT_BIT = 4194304,
    VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT = 8388608,
    VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT = -2147483648,
    VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT = 1,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT = 2,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT = 8192,
    VK_FORMAT_FEATURE_2_HOST_IMAGE_TRANSFER_BIT = 16384,
    VK_FORMAT_FEATURE_2_VIDEO_DECODE_OUTPUT_BIT_KHR = 33554432,
    VK_FORMAT_FEATURE_2_VIDEO_DECODE_DPB_BIT_KHR = 67108864,
    VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR = 536870912,
    VK_FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT = 16777216,
    VK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 1073741824,
    VK_FORMAT_FEATURE_2_HOST_IMAGE_TRANSFER_BIT_EXT = VK_FORMAT_FEATURE_2_HOST_IMAGE_TRANSFER_BIT,
    VK_FORMAT_FEATURE_2_VIDEO_ENCODE_INPUT_BIT_KHR = 134217728,
    VK_FORMAT_FEATURE_2_VIDEO_ENCODE_DPB_BIT_KHR = 268435456,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT,
    VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT,
    VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT,
    VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR = VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT,
    VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT,
    VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT,
    VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR = VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT,
    VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR = VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT,
    VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR = VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT,
    VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR = VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT,
    VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR = VK_FORMAT_FEATURE_2_BLIT_SRC_BIT,
    VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR = VK_FORMAT_FEATURE_2_BLIT_DST_BIT,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT,
    VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR = VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT,
    VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR = VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT,
    VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR = VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT,
    VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR = VK_FORMAT_FEATURE_2_DISJOINT_BIT,
    VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR = VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT,
    VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT,
    VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT,
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT,
    VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_RADIUS_BUFFER_BIT_NV = 524288,
    VK_FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV = 64,
    VK_FORMAT_FEATURE_2_WEIGHT_IMAGE_BIT_QCOM = 4,
    VK_FORMAT_FEATURE_2_WEIGHT_SAMPLED_IMAGE_BIT_QCOM = 8,
    VK_FORMAT_FEATURE_2_BLOCK_MATCHING_BIT_QCOM = 16,
    VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM = 32,
    VK_FORMAT_FEATURE_2_TENSOR_SHADER_BIT_ARM = 128,
    VK_FORMAT_FEATURE_2_TENSOR_IMAGE_ALIASING_BIT_ARM = 2048,
    VK_FORMAT_FEATURE_2_OPTICAL_FLOW_IMAGE_BIT_NV = 256,
    VK_FORMAT_FEATURE_2_OPTICAL_FLOW_VECTOR_BIT_NV = 512,
    VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV = 1024,
    VK_FORMAT_FEATURE_2_TENSOR_DATA_GRAPH_BIT_ARM = 65536,
    VK_FORMAT_FEATURE_2_RESERVED_60_BIT_EXT = 268435456,
    VK_FORMAT_FEATURE_2_COPY_IMAGE_INDIRECT_DST_BIT_KHR = 134217728,
    VK_FORMAT_FEATURE_2_VIDEO_ENCODE_QUANTIZATION_DELTA_MAP_BIT_KHR = 131072,
    VK_FORMAT_FEATURE_2_VIDEO_ENCODE_EMPHASIS_MAP_BIT_KHR = 262144,
    VK_FORMAT_FEATURE_2_RESERVED_52_BIT_KHR = 1048576,
    VK_FORMAT_FEATURE_2_RESERVED_53_BIT_KHR = 2097152,
    VK_FORMAT_FEATURE_2_RESERVED_54_BIT_KHR = 4194304,
    VK_FORMAT_FEATURE_2_RESERVED_55_BIT_KHR = 8388608,
    VK_FORMAT_FEATURE_2_RESERVED_56_BIT_ARM = 16777216,
    VK_FORMAT_FEATURE_2_RESERVED_57_BIT_ARM = 33554432,
    VK_FORMAT_FEATURE_2_RESERVED_58_BIT_ARM = 67108864,
    VK_FORMAT_FEATURE_2_RESERVED_47_BIT_ARM = 32768,
}

enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT;
enum VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT;
enum VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT;
enum VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT;
enum VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT;
enum VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT;
enum VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT;
enum VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT;
enum VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT;
enum VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT;
enum VK_FORMAT_FEATURE_2_BLIT_SRC_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_BLIT_SRC_BIT;
enum VK_FORMAT_FEATURE_2_BLIT_DST_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_BLIT_DST_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT;
enum VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT;
enum VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT;
enum VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT;
enum VK_FORMAT_FEATURE_2_DISJOINT_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_DISJOINT_BIT;
enum VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT;
enum VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT;
enum VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT;
enum VK_FORMAT_FEATURE_2_HOST_IMAGE_TRANSFER_BIT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_HOST_IMAGE_TRANSFER_BIT;
enum VK_FORMAT_FEATURE_2_VIDEO_DECODE_OUTPUT_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_VIDEO_DECODE_OUTPUT_BIT_KHR;
enum VK_FORMAT_FEATURE_2_VIDEO_DECODE_DPB_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_VIDEO_DECODE_DPB_BIT_KHR;
enum VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR;
enum VK_FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT;
enum VK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR;
enum VK_FORMAT_FEATURE_2_HOST_IMAGE_TRANSFER_BIT_EXT = VK_FORMAT_FEATURE_2_HOST_IMAGE_TRANSFER_BIT;
enum VK_FORMAT_FEATURE_2_VIDEO_ENCODE_INPUT_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_VIDEO_ENCODE_INPUT_BIT_KHR;
enum VK_FORMAT_FEATURE_2_VIDEO_ENCODE_DPB_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_VIDEO_ENCODE_DPB_BIT_KHR;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT;
enum VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT;
enum VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT;
enum VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR = VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT;
enum VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT;
enum VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT;
enum VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR = VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT;
enum VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR = VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT;
enum VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR = VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT;
enum VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR = VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT;
enum VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR = VK_FORMAT_FEATURE_2_BLIT_SRC_BIT;
enum VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR = VK_FORMAT_FEATURE_2_BLIT_DST_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT;
enum VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR = VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT;
enum VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR = VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT;
enum VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR = VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT;
enum VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR = VK_FORMAT_FEATURE_2_DISJOINT_BIT;
enum VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR = VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT;
enum VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT;
enum VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT;
enum VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT;
enum VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_RADIUS_BUFFER_BIT_NV = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_RADIUS_BUFFER_BIT_NV;
enum VK_FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV;
enum VK_FORMAT_FEATURE_2_WEIGHT_IMAGE_BIT_QCOM = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_WEIGHT_IMAGE_BIT_QCOM;
enum VK_FORMAT_FEATURE_2_WEIGHT_SAMPLED_IMAGE_BIT_QCOM = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_WEIGHT_SAMPLED_IMAGE_BIT_QCOM;
enum VK_FORMAT_FEATURE_2_BLOCK_MATCHING_BIT_QCOM = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_BLOCK_MATCHING_BIT_QCOM;
enum VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM;
enum VK_FORMAT_FEATURE_2_TENSOR_SHADER_BIT_ARM = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_TENSOR_SHADER_BIT_ARM;
enum VK_FORMAT_FEATURE_2_TENSOR_IMAGE_ALIASING_BIT_ARM = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_TENSOR_IMAGE_ALIASING_BIT_ARM;
enum VK_FORMAT_FEATURE_2_OPTICAL_FLOW_IMAGE_BIT_NV = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_OPTICAL_FLOW_IMAGE_BIT_NV;
enum VK_FORMAT_FEATURE_2_OPTICAL_FLOW_VECTOR_BIT_NV = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_OPTICAL_FLOW_VECTOR_BIT_NV;
enum VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV;
enum VK_FORMAT_FEATURE_2_TENSOR_DATA_GRAPH_BIT_ARM = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_TENSOR_DATA_GRAPH_BIT_ARM;
enum VK_FORMAT_FEATURE_2_RESERVED_60_BIT_EXT = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_RESERVED_60_BIT_EXT;
enum VK_FORMAT_FEATURE_2_COPY_IMAGE_INDIRECT_DST_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_COPY_IMAGE_INDIRECT_DST_BIT_KHR;
enum VK_FORMAT_FEATURE_2_VIDEO_ENCODE_QUANTIZATION_DELTA_MAP_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_VIDEO_ENCODE_QUANTIZATION_DELTA_MAP_BIT_KHR;
enum VK_FORMAT_FEATURE_2_VIDEO_ENCODE_EMPHASIS_MAP_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_VIDEO_ENCODE_EMPHASIS_MAP_BIT_KHR;
enum VK_FORMAT_FEATURE_2_RESERVED_52_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_RESERVED_52_BIT_KHR;
enum VK_FORMAT_FEATURE_2_RESERVED_53_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_RESERVED_53_BIT_KHR;
enum VK_FORMAT_FEATURE_2_RESERVED_54_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_RESERVED_54_BIT_KHR;
enum VK_FORMAT_FEATURE_2_RESERVED_55_BIT_KHR = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_RESERVED_55_BIT_KHR;
enum VK_FORMAT_FEATURE_2_RESERVED_56_BIT_ARM = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_RESERVED_56_BIT_ARM;
enum VK_FORMAT_FEATURE_2_RESERVED_57_BIT_ARM = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_RESERVED_57_BIT_ARM;
enum VK_FORMAT_FEATURE_2_RESERVED_58_BIT_ARM = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_RESERVED_58_BIT_ARM;
enum VK_FORMAT_FEATURE_2_RESERVED_47_BIT_ARM = VkFormatFeatureFlagBits2.VK_FORMAT_FEATURE_2_RESERVED_47_BIT_ARM;

struct VkFormatProperties3 {
    VkStructureType sType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3;
    void* pNext;
    VkFlags64 linearTilingFeatures;
    VkFlags64 optimalTilingFeatures;
    VkFlags64 bufferFeatures;
}

// Promoted from VK_EXT_extended_dynamic_state2 (Feature struct and optional state are not promoted) (extension 378)

version (VK_VERSION_1_3) {
    extern void vkCmdSetRasterizerDiscardEnable(
        VkCommandBuffer commandBuffer,
        VkBool32 rasterizerDiscardEnable,
    );
    
    extern void vkCmdSetDepthBiasEnable(
        VkCommandBuffer commandBuffer,
        VkBool32 depthBiasEnable,
    );
    
    extern void vkCmdSetPrimitiveRestartEnable(
        VkCommandBuffer commandBuffer,
        VkBool32 primitiveRestartEnable,
    );
}

// Promoted from VK_KHR_maintenance4 (extension 414)

struct VkPhysicalDeviceMaintenance4Features {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES;
    void* pNext;
    VkBool32 maintenance4;
}

struct VkPhysicalDeviceMaintenance4Properties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES;
    void* pNext;
    VkDeviceSize maxBufferSize;
}

struct VkDeviceBufferMemoryRequirements {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS;
    const(void)* pNext;
    const(VkBufferCreateInfo)* pCreateInfo;
}

struct VkDeviceImageMemoryRequirements {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS;
    const(void)* pNext;
    const(VkImageCreateInfo)* pCreateInfo;
    VkImageAspectFlagBits planeAspect;
}

version (VK_VERSION_1_3) {
    extern void vkGetDeviceBufferMemoryRequirements(
        VkDevice device,
        const(VkDeviceBufferMemoryRequirements)* pInfo,
        VkMemoryRequirements2* pMemoryRequirements,
    );
    
    extern void vkGetDeviceImageMemoryRequirements(
        VkDevice device,
        const(VkDeviceImageMemoryRequirements)* pInfo,
        VkMemoryRequirements2* pMemoryRequirements,
    );
    
    extern void vkGetDeviceImageSparseMemoryRequirements(
        VkDevice device,
        const(VkDeviceImageMemoryRequirements)* pInfo,
        uint* pSparseMemoryRequirementCount,
        VkSparseImageMemoryRequirements2* pSparseMemoryRequirements,
    );
}


enum VK_API_VERSION_1_4 = VK_MAKE_API_VERSION(0, 1, 4, 0);

struct VkPhysicalDeviceVulkan14Features {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_4_FEATURES;
    void* pNext;
    VkBool32 globalPriorityQuery;
    VkBool32 shaderSubgroupRotate;
    VkBool32 shaderSubgroupRotateClustered;
    VkBool32 shaderFloatControls2;
    VkBool32 shaderExpectAssume;
    VkBool32 rectangularLines;
    VkBool32 bresenhamLines;
    VkBool32 smoothLines;
    VkBool32 stippledRectangularLines;
    VkBool32 stippledBresenhamLines;
    VkBool32 stippledSmoothLines;
    VkBool32 vertexAttributeInstanceRateDivisor;
    VkBool32 vertexAttributeInstanceRateZeroDivisor;
    VkBool32 indexTypeUint8;
    VkBool32 dynamicRenderingLocalRead;
    VkBool32 maintenance5;
    VkBool32 maintenance6;
    VkBool32 pipelineProtectedAccess;
    VkBool32 pipelineRobustness;
    VkBool32 hostImageCopy;
    VkBool32 pushDescriptor;
}

struct VkPhysicalDeviceVulkan14Properties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_4_PROPERTIES;
    void* pNext;
    uint lineSubPixelPrecisionBits;
    uint maxVertexAttribDivisor;
    VkBool32 supportsNonZeroFirstInstance;
    uint maxPushDescriptors;
    VkBool32 dynamicRenderingLocalReadDepthStencilAttachments;
    VkBool32 dynamicRenderingLocalReadMultisampledAttachments;
    VkBool32 earlyFragmentMultisampleCoverageAfterSampleCounting;
    VkBool32 earlyFragmentSampleMaskTestBeforeSampleCounting;
    VkBool32 depthStencilSwizzleOneSupport;
    VkBool32 polygonModePointSize;
    VkBool32 nonStrictSinglePixelWideLinesUseParallelogram;
    VkBool32 nonStrictWideLinesUseParallelogram;
    VkBool32 blockTexelViewCompatibleMultipleLayers;
    uint maxCombinedImageSamplerDescriptorCount;
    VkBool32 fragmentShadingRateClampCombinerInputs;
    VkPipelineRobustnessBufferBehavior defaultRobustnessStorageBuffers;
    VkPipelineRobustnessBufferBehavior defaultRobustnessUniformBuffers;
    VkPipelineRobustnessBufferBehavior defaultRobustnessVertexInputs;
    VkPipelineRobustnessImageBehavior defaultRobustnessImages;
    uint copySrcLayoutCount;
    VkImageLayout* pCopySrcLayouts;
    uint copyDstLayoutCount;
    VkImageLayout* pCopyDstLayouts;
    ubyte[VK_UUID_SIZE] optimalTilingLayoutUUID;
    VkBool32 identicalMemoryTypeRequirements;
}

// Promoted from VK_KHR_global_priority (extension 189)

enum uint VK_MAX_GLOBAL_PRIORITY_SIZE = 16;

struct VkDeviceQueueGlobalPriorityCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO;
    const(void)* pNext;
    VkQueueGlobalPriority globalPriority;
}

enum VkQueueGlobalPriority {
    LOW = 128,
    MEDIUM = 256,
    HIGH = 512,
    REALTIME = 1024,
    LOW_EXT = LOW,
    MEDIUM_EXT = MEDIUM,
    HIGH_EXT = HIGH,
    REALTIME_EXT = REALTIME,
    LOW_KHR = LOW,
    MEDIUM_KHR = MEDIUM,
    HIGH_KHR = HIGH,
    REALTIME_KHR = REALTIME,
}

enum VK_QUEUE_GLOBAL_PRIORITY_LOW = VkQueueGlobalPriority.LOW;
enum VK_QUEUE_GLOBAL_PRIORITY_MEDIUM = VkQueueGlobalPriority.MEDIUM;
enum VK_QUEUE_GLOBAL_PRIORITY_HIGH = VkQueueGlobalPriority.HIGH;
enum VK_QUEUE_GLOBAL_PRIORITY_REALTIME = VkQueueGlobalPriority.REALTIME;
enum VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT = VK_QUEUE_GLOBAL_PRIORITY_LOW;
enum VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT = VK_QUEUE_GLOBAL_PRIORITY_MEDIUM;
enum VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT = VK_QUEUE_GLOBAL_PRIORITY_HIGH;
enum VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT = VK_QUEUE_GLOBAL_PRIORITY_REALTIME;
enum VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR = VK_QUEUE_GLOBAL_PRIORITY_LOW;
enum VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR = VK_QUEUE_GLOBAL_PRIORITY_MEDIUM;
enum VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR = VK_QUEUE_GLOBAL_PRIORITY_HIGH;
enum VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR = VK_QUEUE_GLOBAL_PRIORITY_REALTIME;

struct VkPhysicalDeviceGlobalPriorityQueryFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES;
    void* pNext;
    VkBool32 globalPriorityQuery;
}

struct VkQueueFamilyGlobalPriorityProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES;
    void* pNext;
    uint priorityCount;
    VkQueueGlobalPriority[VK_MAX_GLOBAL_PRIORITY_SIZE] priorities;
}

// Promoted from VK_KHR_shader_subgroup_rotate (extension 417) 'Roadmap 2024'

struct VkPhysicalDeviceShaderSubgroupRotateFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES;
    void* pNext;
    VkBool32 shaderSubgroupRotate;
    VkBool32 shaderSubgroupRotateClustered;
}

// Promoted from VK_KHR_shader_float_controls2 (extension 529) 'Roadmap 2024'

struct VkPhysicalDeviceShaderFloatControls2Features {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES;
    void* pNext;
    VkBool32 shaderFloatControls2;
}

// Promoted from VK_KHR_shader_expect_assume (extension 545) 'Roadmap 2024'

struct VkPhysicalDeviceShaderExpectAssumeFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES;
    void* pNext;
    VkBool32 shaderExpectAssume;
}

// Promoted from VK_KHR_line_rasterization (extension 535) 'Roadmap 2024'

struct VkPhysicalDeviceLineRasterizationFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES;
    void* pNext;
    VkBool32 rectangularLines;
    VkBool32 bresenhamLines;
    VkBool32 smoothLines;
    VkBool32 stippledRectangularLines;
    VkBool32 stippledBresenhamLines;
    VkBool32 stippledSmoothLines;
}

struct VkPhysicalDeviceLineRasterizationProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES;
    void* pNext;
    uint lineSubPixelPrecisionBits;
}

struct VkPipelineRasterizationLineStateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO;
    const(void)* pNext;
    VkLineRasterizationMode lineRasterizationMode;
    VkBool32 stippledLineEnable;
    uint lineStippleFactor;
    ushort lineStipplePattern;
}

enum VkLineRasterizationMode {
    DEFAULT = 0,
    RECTANGULAR = 1,
    BRESENHAM = 2,
    RECTANGULAR_SMOOTH = 3,
    DEFAULT_EXT = DEFAULT,
    RECTANGULAR_EXT = RECTANGULAR,
    BRESENHAM_EXT = BRESENHAM,
    RECTANGULAR_SMOOTH_EXT = RECTANGULAR_SMOOTH,
    DEFAULT_KHR = DEFAULT,
    RECTANGULAR_KHR = RECTANGULAR,
    BRESENHAM_KHR = BRESENHAM,
    RECTANGULAR_SMOOTH_KHR = RECTANGULAR_SMOOTH,
}

enum VK_LINE_RASTERIZATION_MODE_DEFAULT = VkLineRasterizationMode.DEFAULT;
enum VK_LINE_RASTERIZATION_MODE_RECTANGULAR = VkLineRasterizationMode.RECTANGULAR;
enum VK_LINE_RASTERIZATION_MODE_BRESENHAM = VkLineRasterizationMode.BRESENHAM;
enum VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH = VkLineRasterizationMode.RECTANGULAR_SMOOTH;
enum VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT = VK_LINE_RASTERIZATION_MODE_DEFAULT;
enum VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT = VK_LINE_RASTERIZATION_MODE_RECTANGULAR;
enum VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT = VK_LINE_RASTERIZATION_MODE_BRESENHAM;
enum VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT = VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH;
enum VK_LINE_RASTERIZATION_MODE_DEFAULT_KHR = VK_LINE_RASTERIZATION_MODE_DEFAULT;
enum VK_LINE_RASTERIZATION_MODE_RECTANGULAR_KHR = VK_LINE_RASTERIZATION_MODE_RECTANGULAR;
enum VK_LINE_RASTERIZATION_MODE_BRESENHAM_KHR = VK_LINE_RASTERIZATION_MODE_BRESENHAM;
enum VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_KHR = VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH;

version (VK_VERSION_1_4) {
    extern void vkCmdSetLineStipple(
        VkCommandBuffer commandBuffer,
        uint lineStippleFactor,
        ushort lineStipplePattern,
    );
}

// Promoted from VK_KHR_vertex_attribute_divisor (extension 526) 'Roadmap 2024'

struct VkPhysicalDeviceVertexAttributeDivisorProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES;
    void* pNext;
    uint maxVertexAttribDivisor;
    VkBool32 supportsNonZeroFirstInstance;
}

struct VkVertexInputBindingDivisorDescription {
    uint binding;
    uint divisor;
}

struct VkPipelineVertexInputDivisorStateCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO;
    const(void)* pNext;
    uint vertexBindingDivisorCount;
    const(VkVertexInputBindingDivisorDescription)* pVertexBindingDivisors;
}

struct VkPhysicalDeviceVertexAttributeDivisorFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES;
    void* pNext;
    VkBool32 vertexAttributeInstanceRateDivisor;
    VkBool32 vertexAttributeInstanceRateZeroDivisor;
}

// Promoted from VK_KHR_index_type_uint8 (extension 534) 'Roadmap 2024'

struct VkPhysicalDeviceIndexTypeUint8Features {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES;
    void* pNext;
    VkBool32 indexTypeUint8;
}

// Promoted from VK_KHR_map_memory2 (extension 272) 'Roadmap 2024'

struct VkMemoryMapInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_MEMORY_MAP_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkDeviceMemory memory;
    VkDeviceSize offset;
    VkDeviceSize size;
}

struct VkMemoryUnmapInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkDeviceMemory memory;
}

enum VkMemoryUnmapFlagBits : uint {
    RESERVE_BIT_EXT = 1,
}

enum VK_MEMORY_UNMAP_RESERVE_BIT_EXT = VkMemoryUnmapFlagBits.RESERVE_BIT_EXT;

alias VkMemoryUnmapFlags = VkFlags;

version (VK_VERSION_1_4) {
    extern VkResult vkMapMemory2(
        VkDevice device,
        const(VkMemoryMapInfo)* pMemoryMapInfo,
        void** ppData,
    );
    
    extern VkResult vkUnmapMemory2(
        VkDevice device,
        const(VkMemoryUnmapInfo)* pMemoryUnmapInfo,
    );
}

// Promoted from VK_KHR_maintenance5 (extension 471) 'Roadmap 2024'

struct VkPhysicalDeviceMaintenance5Features {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES;
    void* pNext;
    VkBool32 maintenance5;
}

struct VkPhysicalDeviceMaintenance5Properties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES;
    void* pNext;
    VkBool32 earlyFragmentMultisampleCoverageAfterSampleCounting;
    VkBool32 earlyFragmentSampleMaskTestBeforeSampleCounting;
    VkBool32 depthStencilSwizzleOneSupport;
    VkBool32 polygonModePointSize;
    VkBool32 nonStrictSinglePixelWideLinesUseParallelogram;
    VkBool32 nonStrictWideLinesUseParallelogram;
}

struct VkRenderingAreaInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_RENDERING_AREA_INFO;
    const(void)* pNext;
    uint viewMask;
    uint colorAttachmentCount;
    const(VkFormat)* pColorAttachmentFormats;
    VkFormat depthAttachmentFormat;
    VkFormat stencilAttachmentFormat;
}

struct VkDeviceImageSubresourceInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO;
    const(void)* pNext;
    const(VkImageCreateInfo)* pCreateInfo;
    const(VkImageSubresource2)* pSubresource;
}

struct VkImageSubresource2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2;
    void* pNext;
    VkImageSubresource imageSubresource;
}

struct VkSubresourceLayout2 {
    VkStructureType sType = VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2;
    void* pNext;
    VkSubresourceLayout subresourceLayout;
}

alias VkPipelineCreateFlags2 = VkFlags64;

enum VkPipelineCreateFlagBits2 : ulong {
    VK_PIPELINE_CREATE_2_DISABLE_OPTIMIZATION_BIT = 1,
    VK_PIPELINE_CREATE_2_ALLOW_DERIVATIVES_BIT = 2,
    VK_PIPELINE_CREATE_2_DERIVATIVE_BIT = 4,
    VK_PIPELINE_CREATE_2_VIEW_INDEX_FROM_DEVICE_INDEX_BIT = 8,
    VK_PIPELINE_CREATE_2_DISPATCH_BASE_BIT = 16,
    VK_PIPELINE_CREATE_2_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT = 256,
    VK_PIPELINE_CREATE_2_EARLY_RETURN_ON_FAILURE_BIT = 512,
    VK_PIPELINE_CREATE_2_NO_PROTECTED_ACCESS_BIT = 134217728,
    VK_PIPELINE_CREATE_2_PROTECTED_ACCESS_ONLY_BIT = 1073741824,
    VK_PIPELINE_CREATE_2_RESERVED_46_BIT_IMG = 16384,
    VK_PIPELINE_CREATE_2_EXECUTION_GRAPH_BIT_AMDX = 1,
    VK_PIPELINE_CREATE_RESERVED_36_BIT_KHR = 16,
    VK_PIPELINE_CREATE_RESERVED_39_BIT_KHR = 128,
    VK_PIPELINE_CREATE_2_RAY_TRACING_SKIP_BUILT_IN_PRIMITIVES_BIT_KHR = VK_PIPELINE_CREATE_2_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR,
    VK_PIPELINE_CREATE_RESERVED_44_BIT_KHR = 4096,
    VK_PIPELINE_CREATE_2_RAY_TRACING_ALLOW_SPHERES_AND_LINEAR_SWEPT_SPHERES_BIT_NV = 2,
    VK_PIPELINE_CREATE_2_ENABLE_LEGACY_DITHERING_BIT_EXT = 4,
    VK_PIPELINE_CREATE_2_DISABLE_OPTIMIZATION_BIT_KHR = VK_PIPELINE_CREATE_2_DISABLE_OPTIMIZATION_BIT,
    VK_PIPELINE_CREATE_2_ALLOW_DERIVATIVES_BIT_KHR = VK_PIPELINE_CREATE_2_ALLOW_DERIVATIVES_BIT,
    VK_PIPELINE_CREATE_2_DERIVATIVE_BIT_KHR = VK_PIPELINE_CREATE_2_DERIVATIVE_BIT,
    VK_PIPELINE_CREATE_2_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR = VK_PIPELINE_CREATE_2_VIEW_INDEX_FROM_DEVICE_INDEX_BIT,
    VK_PIPELINE_CREATE_2_DISPATCH_BASE_BIT_KHR = VK_PIPELINE_CREATE_2_DISPATCH_BASE_BIT,
    VK_PIPELINE_CREATE_2_DEFER_COMPILE_BIT_NV = 32,
    VK_PIPELINE_CREATE_2_CAPTURE_STATISTICS_BIT_KHR = 64,
    VK_PIPELINE_CREATE_2_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR = 128,
    VK_PIPELINE_CREATE_2_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_KHR = VK_PIPELINE_CREATE_2_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT,
    VK_PIPELINE_CREATE_2_EARLY_RETURN_ON_FAILURE_BIT_KHR = VK_PIPELINE_CREATE_2_EARLY_RETURN_ON_FAILURE_BIT,
    VK_PIPELINE_CREATE_2_LINK_TIME_OPTIMIZATION_BIT_EXT = 1024,
    VK_PIPELINE_CREATE_2_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT = 8388608,
    VK_PIPELINE_CREATE_2_LIBRARY_BIT_KHR = 2048,
    VK_PIPELINE_CREATE_2_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR = 4096,
    VK_PIPELINE_CREATE_2_RAY_TRACING_SKIP_AABBS_BIT_KHR = 8192,
    VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR = 16384,
    VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR = 32768,
    VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR = 65536,
    VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR = 131072,
    VK_PIPELINE_CREATE_2_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR = 524288,
    VK_PIPELINE_CREATE_2_INDIRECT_BINDABLE_BIT_NV = 262144,
    VK_PIPELINE_CREATE_2_RAY_TRACING_ALLOW_MOTION_BIT_NV = 1048576,
    VK_PIPELINE_CREATE_2_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 2097152,
    VK_PIPELINE_CREATE_2_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT = 4194304,
    VK_PIPELINE_CREATE_2_RAY_TRACING_OPACITY_MICROMAP_BIT_EXT = 16777216,
    VK_PIPELINE_CREATE_2_COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT = 33554432,
    VK_PIPELINE_CREATE_2_DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT = 67108864,
    VK_PIPELINE_CREATE_2_NO_PROTECTED_ACCESS_BIT_EXT = VK_PIPELINE_CREATE_2_NO_PROTECTED_ACCESS_BIT,
    VK_PIPELINE_CREATE_2_PROTECTED_ACCESS_ONLY_BIT_EXT = VK_PIPELINE_CREATE_2_PROTECTED_ACCESS_ONLY_BIT,
    VK_PIPELINE_CREATE_2_RAY_TRACING_DISPLACEMENT_MICROMAP_BIT_NV = 268435456,
    VK_PIPELINE_CREATE_2_DESCRIPTOR_BUFFER_BIT_EXT = 536870912,
    VK_PIPELINE_CREATE_2_DISALLOW_OPACITY_MICROMAP_BIT_ARM = 32,
    VK_PIPELINE_CREATE_2_CAPTURE_DATA_BIT_KHR = -2147483648,
    VK_PIPELINE_CREATE_2_INDIRECT_BINDABLE_BIT_EXT = 64,
    VK_PIPELINE_CREATE_2_RESERVED_35_BIT_KHR = 8,
    VK_PIPELINE_CREATE_2_PER_LAYER_FRAGMENT_DENSITY_BIT_VALVE = 256,
    VK_PIPELINE_CREATE_2_RESERVED_41_BIT_KHR = 512,
    VK_PIPELINE_CREATE_2_RESERVED_42_BIT_KHR = 1024,
    VK_PIPELINE_CREATE_2_RESERVED_43_BIT_EXT = 2048,
    VK_PIPELINE_CREATE_2_RESERVED_45_BIT_EXT = 8192,
    VK_PIPELINE_CREATE_2_RESERVED_47_BIT_AMD = 32768,
}

enum VK_PIPELINE_CREATE_2_DISABLE_OPTIMIZATION_BIT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_DISABLE_OPTIMIZATION_BIT;
enum VK_PIPELINE_CREATE_2_ALLOW_DERIVATIVES_BIT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_ALLOW_DERIVATIVES_BIT;
enum VK_PIPELINE_CREATE_2_DERIVATIVE_BIT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_DERIVATIVE_BIT;
enum VK_PIPELINE_CREATE_2_VIEW_INDEX_FROM_DEVICE_INDEX_BIT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_VIEW_INDEX_FROM_DEVICE_INDEX_BIT;
enum VK_PIPELINE_CREATE_2_DISPATCH_BASE_BIT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_DISPATCH_BASE_BIT;
enum VK_PIPELINE_CREATE_2_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT;
enum VK_PIPELINE_CREATE_2_EARLY_RETURN_ON_FAILURE_BIT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_EARLY_RETURN_ON_FAILURE_BIT;
enum VK_PIPELINE_CREATE_2_NO_PROTECTED_ACCESS_BIT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_NO_PROTECTED_ACCESS_BIT;
enum VK_PIPELINE_CREATE_2_PROTECTED_ACCESS_ONLY_BIT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_PROTECTED_ACCESS_ONLY_BIT;
enum VK_PIPELINE_CREATE_2_RESERVED_46_BIT_IMG = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RESERVED_46_BIT_IMG;
enum VK_PIPELINE_CREATE_2_EXECUTION_GRAPH_BIT_AMDX = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_EXECUTION_GRAPH_BIT_AMDX;
enum VK_PIPELINE_CREATE_RESERVED_36_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_RESERVED_36_BIT_KHR;
enum VK_PIPELINE_CREATE_RESERVED_39_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_RESERVED_39_BIT_KHR;
enum VK_PIPELINE_CREATE_2_RAY_TRACING_SKIP_BUILT_IN_PRIMITIVES_BIT_KHR = VK_PIPELINE_CREATE_2_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR;
enum VK_PIPELINE_CREATE_RESERVED_44_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_RESERVED_44_BIT_KHR;
enum VK_PIPELINE_CREATE_2_RAY_TRACING_ALLOW_SPHERES_AND_LINEAR_SWEPT_SPHERES_BIT_NV = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RAY_TRACING_ALLOW_SPHERES_AND_LINEAR_SWEPT_SPHERES_BIT_NV;
enum VK_PIPELINE_CREATE_2_ENABLE_LEGACY_DITHERING_BIT_EXT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_ENABLE_LEGACY_DITHERING_BIT_EXT;
enum VK_PIPELINE_CREATE_2_DISABLE_OPTIMIZATION_BIT_KHR = VK_PIPELINE_CREATE_2_DISABLE_OPTIMIZATION_BIT;
enum VK_PIPELINE_CREATE_2_ALLOW_DERIVATIVES_BIT_KHR = VK_PIPELINE_CREATE_2_ALLOW_DERIVATIVES_BIT;
enum VK_PIPELINE_CREATE_2_DERIVATIVE_BIT_KHR = VK_PIPELINE_CREATE_2_DERIVATIVE_BIT;
enum VK_PIPELINE_CREATE_2_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR = VK_PIPELINE_CREATE_2_VIEW_INDEX_FROM_DEVICE_INDEX_BIT;
enum VK_PIPELINE_CREATE_2_DISPATCH_BASE_BIT_KHR = VK_PIPELINE_CREATE_2_DISPATCH_BASE_BIT;
enum VK_PIPELINE_CREATE_2_DEFER_COMPILE_BIT_NV = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_DEFER_COMPILE_BIT_NV;
enum VK_PIPELINE_CREATE_2_CAPTURE_STATISTICS_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_CAPTURE_STATISTICS_BIT_KHR;
enum VK_PIPELINE_CREATE_2_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR;
enum VK_PIPELINE_CREATE_2_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_KHR = VK_PIPELINE_CREATE_2_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT;
enum VK_PIPELINE_CREATE_2_EARLY_RETURN_ON_FAILURE_BIT_KHR = VK_PIPELINE_CREATE_2_EARLY_RETURN_ON_FAILURE_BIT;
enum VK_PIPELINE_CREATE_2_LINK_TIME_OPTIMIZATION_BIT_EXT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_LINK_TIME_OPTIMIZATION_BIT_EXT;
enum VK_PIPELINE_CREATE_2_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT;
enum VK_PIPELINE_CREATE_2_LIBRARY_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_LIBRARY_BIT_KHR;
enum VK_PIPELINE_CREATE_2_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR;
enum VK_PIPELINE_CREATE_2_RAY_TRACING_SKIP_AABBS_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RAY_TRACING_SKIP_AABBS_BIT_KHR;
enum VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR;
enum VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR;
enum VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR;
enum VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR;
enum VK_PIPELINE_CREATE_2_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR;
enum VK_PIPELINE_CREATE_2_INDIRECT_BINDABLE_BIT_NV = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_INDIRECT_BINDABLE_BIT_NV;
enum VK_PIPELINE_CREATE_2_RAY_TRACING_ALLOW_MOTION_BIT_NV = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RAY_TRACING_ALLOW_MOTION_BIT_NV;
enum VK_PIPELINE_CREATE_2_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR;
enum VK_PIPELINE_CREATE_2_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT;
enum VK_PIPELINE_CREATE_2_RAY_TRACING_OPACITY_MICROMAP_BIT_EXT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RAY_TRACING_OPACITY_MICROMAP_BIT_EXT;
enum VK_PIPELINE_CREATE_2_COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT;
enum VK_PIPELINE_CREATE_2_DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT;
enum VK_PIPELINE_CREATE_2_NO_PROTECTED_ACCESS_BIT_EXT = VK_PIPELINE_CREATE_2_NO_PROTECTED_ACCESS_BIT;
enum VK_PIPELINE_CREATE_2_PROTECTED_ACCESS_ONLY_BIT_EXT = VK_PIPELINE_CREATE_2_PROTECTED_ACCESS_ONLY_BIT;
enum VK_PIPELINE_CREATE_2_RAY_TRACING_DISPLACEMENT_MICROMAP_BIT_NV = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RAY_TRACING_DISPLACEMENT_MICROMAP_BIT_NV;
enum VK_PIPELINE_CREATE_2_DESCRIPTOR_BUFFER_BIT_EXT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_DESCRIPTOR_BUFFER_BIT_EXT;
enum VK_PIPELINE_CREATE_2_DISALLOW_OPACITY_MICROMAP_BIT_ARM = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_DISALLOW_OPACITY_MICROMAP_BIT_ARM;
enum VK_PIPELINE_CREATE_2_CAPTURE_DATA_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_CAPTURE_DATA_BIT_KHR;
enum VK_PIPELINE_CREATE_2_INDIRECT_BINDABLE_BIT_EXT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_INDIRECT_BINDABLE_BIT_EXT;
enum VK_PIPELINE_CREATE_2_RESERVED_35_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RESERVED_35_BIT_KHR;
enum VK_PIPELINE_CREATE_2_PER_LAYER_FRAGMENT_DENSITY_BIT_VALVE = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_PER_LAYER_FRAGMENT_DENSITY_BIT_VALVE;
enum VK_PIPELINE_CREATE_2_RESERVED_41_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RESERVED_41_BIT_KHR;
enum VK_PIPELINE_CREATE_2_RESERVED_42_BIT_KHR = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RESERVED_42_BIT_KHR;
enum VK_PIPELINE_CREATE_2_RESERVED_43_BIT_EXT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RESERVED_43_BIT_EXT;
enum VK_PIPELINE_CREATE_2_RESERVED_45_BIT_EXT = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RESERVED_45_BIT_EXT;
enum VK_PIPELINE_CREATE_2_RESERVED_47_BIT_AMD = VkPipelineCreateFlagBits2.VK_PIPELINE_CREATE_2_RESERVED_47_BIT_AMD;

struct VkPipelineCreateFlags2CreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO;
    const(void)* pNext;
    VkFlags64 flags;
}

alias VkBufferUsageFlags2 = VkFlags64;

enum VkBufferUsageFlagBits2 : ulong {
    VK_BUFFER_USAGE_2_TRANSFER_SRC_BIT = 1,
    VK_BUFFER_USAGE_2_TRANSFER_DST_BIT = 2,
    VK_BUFFER_USAGE_2_UNIFORM_TEXEL_BUFFER_BIT = 4,
    VK_BUFFER_USAGE_2_STORAGE_TEXEL_BUFFER_BIT = 8,
    VK_BUFFER_USAGE_2_UNIFORM_BUFFER_BIT = 16,
    VK_BUFFER_USAGE_2_STORAGE_BUFFER_BIT = 32,
    VK_BUFFER_USAGE_2_INDEX_BUFFER_BIT = 64,
    VK_BUFFER_USAGE_2_VERTEX_BUFFER_BIT = 128,
    VK_BUFFER_USAGE_2_INDIRECT_BUFFER_BIT = 256,
    VK_BUFFER_USAGE_2_SHADER_DEVICE_ADDRESS_BIT = 131072,
    VK_BUFFER_USAGE_2_EXECUTION_GRAPH_SCRATCH_BIT_AMDX = 33554432,
    VK_BUFFER_USAGE_2_RESERVED_28_BIT_KHR = 268435456,
    VK_BUFFER_USAGE_2_TRANSFER_SRC_BIT_KHR = VK_BUFFER_USAGE_2_TRANSFER_SRC_BIT,
    VK_BUFFER_USAGE_2_TRANSFER_DST_BIT_KHR = VK_BUFFER_USAGE_2_TRANSFER_DST_BIT,
    VK_BUFFER_USAGE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_UNIFORM_TEXEL_BUFFER_BIT,
    VK_BUFFER_USAGE_2_STORAGE_TEXEL_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_STORAGE_TEXEL_BUFFER_BIT,
    VK_BUFFER_USAGE_2_UNIFORM_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_UNIFORM_BUFFER_BIT,
    VK_BUFFER_USAGE_2_STORAGE_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_STORAGE_BUFFER_BIT,
    VK_BUFFER_USAGE_2_INDEX_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_INDEX_BUFFER_BIT,
    VK_BUFFER_USAGE_2_VERTEX_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_VERTEX_BUFFER_BIT,
    VK_BUFFER_USAGE_2_INDIRECT_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_INDIRECT_BUFFER_BIT,
    VK_BUFFER_USAGE_2_CONDITIONAL_RENDERING_BIT_EXT = 512,
    VK_BUFFER_USAGE_2_SHADER_BINDING_TABLE_BIT_KHR = 1024,
    VK_BUFFER_USAGE_2_RAY_TRACING_BIT_NV = VK_BUFFER_USAGE_2_SHADER_BINDING_TABLE_BIT_KHR,
    VK_BUFFER_USAGE_2_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT = 2048,
    VK_BUFFER_USAGE_2_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT = 4096,
    VK_BUFFER_USAGE_2_VIDEO_DECODE_SRC_BIT_KHR = 8192,
    VK_BUFFER_USAGE_2_VIDEO_DECODE_DST_BIT_KHR = 16384,
    VK_BUFFER_USAGE_2_VIDEO_ENCODE_DST_BIT_KHR = 32768,
    VK_BUFFER_USAGE_2_VIDEO_ENCODE_SRC_BIT_KHR = 65536,
    VK_BUFFER_USAGE_2_SHADER_DEVICE_ADDRESS_BIT_KHR = VK_BUFFER_USAGE_2_SHADER_DEVICE_ADDRESS_BIT,
    VK_BUFFER_USAGE_2_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR = 524288,
    VK_BUFFER_USAGE_2_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR = 1048576,
    VK_BUFFER_USAGE_2_SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT = 2097152,
    VK_BUFFER_USAGE_2_RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT = 4194304,
    VK_BUFFER_USAGE_2_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT = 67108864,
    VK_BUFFER_USAGE_2_MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT = 8388608,
    VK_BUFFER_USAGE_2_MICROMAP_STORAGE_BIT_EXT = 16777216,
    VK_BUFFER_USAGE_2_COMPRESSED_DATA_DGF1_BIT_AMDX = 2,
    VK_BUFFER_USAGE_2_DATA_GRAPH_FOREIGN_DESCRIPTOR_BIT_ARM = 536870912,
    VK_BUFFER_USAGE_2_RESERVED_34_BIT_EXT = 4,
    VK_BUFFER_USAGE_2_TILE_MEMORY_BIT_QCOM = 134217728,
    VK_BUFFER_USAGE_2_RESERVED_32_BIT_NV = 1,
    VK_BUFFER_USAGE_2_PREPROCESS_BUFFER_BIT_EXT = -2147483648,
    VK_BUFFER_USAGE_2_RESERVED_35_BIT_KHR = 8,
    VK_BUFFER_USAGE_2_RESERVED_36_BIT_KHR = 16,
}

enum VK_BUFFER_USAGE_2_TRANSFER_SRC_BIT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_TRANSFER_SRC_BIT;
enum VK_BUFFER_USAGE_2_TRANSFER_DST_BIT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_TRANSFER_DST_BIT;
enum VK_BUFFER_USAGE_2_UNIFORM_TEXEL_BUFFER_BIT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_UNIFORM_TEXEL_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_STORAGE_TEXEL_BUFFER_BIT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_STORAGE_TEXEL_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_UNIFORM_BUFFER_BIT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_UNIFORM_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_STORAGE_BUFFER_BIT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_STORAGE_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_INDEX_BUFFER_BIT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_INDEX_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_VERTEX_BUFFER_BIT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_VERTEX_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_INDIRECT_BUFFER_BIT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_INDIRECT_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_SHADER_DEVICE_ADDRESS_BIT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_SHADER_DEVICE_ADDRESS_BIT;
enum VK_BUFFER_USAGE_2_EXECUTION_GRAPH_SCRATCH_BIT_AMDX = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_EXECUTION_GRAPH_SCRATCH_BIT_AMDX;
enum VK_BUFFER_USAGE_2_RESERVED_28_BIT_KHR = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_RESERVED_28_BIT_KHR;
enum VK_BUFFER_USAGE_2_TRANSFER_SRC_BIT_KHR = VK_BUFFER_USAGE_2_TRANSFER_SRC_BIT;
enum VK_BUFFER_USAGE_2_TRANSFER_DST_BIT_KHR = VK_BUFFER_USAGE_2_TRANSFER_DST_BIT;
enum VK_BUFFER_USAGE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_UNIFORM_TEXEL_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_STORAGE_TEXEL_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_STORAGE_TEXEL_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_UNIFORM_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_UNIFORM_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_STORAGE_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_STORAGE_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_INDEX_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_INDEX_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_VERTEX_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_VERTEX_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_INDIRECT_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_INDIRECT_BUFFER_BIT;
enum VK_BUFFER_USAGE_2_CONDITIONAL_RENDERING_BIT_EXT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_CONDITIONAL_RENDERING_BIT_EXT;
enum VK_BUFFER_USAGE_2_SHADER_BINDING_TABLE_BIT_KHR = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_SHADER_BINDING_TABLE_BIT_KHR;
enum VK_BUFFER_USAGE_2_RAY_TRACING_BIT_NV = VK_BUFFER_USAGE_2_SHADER_BINDING_TABLE_BIT_KHR;
enum VK_BUFFER_USAGE_2_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT;
enum VK_BUFFER_USAGE_2_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT;
enum VK_BUFFER_USAGE_2_VIDEO_DECODE_SRC_BIT_KHR = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_VIDEO_DECODE_SRC_BIT_KHR;
enum VK_BUFFER_USAGE_2_VIDEO_DECODE_DST_BIT_KHR = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_VIDEO_DECODE_DST_BIT_KHR;
enum VK_BUFFER_USAGE_2_VIDEO_ENCODE_DST_BIT_KHR = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_VIDEO_ENCODE_DST_BIT_KHR;
enum VK_BUFFER_USAGE_2_VIDEO_ENCODE_SRC_BIT_KHR = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_VIDEO_ENCODE_SRC_BIT_KHR;
enum VK_BUFFER_USAGE_2_SHADER_DEVICE_ADDRESS_BIT_KHR = VK_BUFFER_USAGE_2_SHADER_DEVICE_ADDRESS_BIT;
enum VK_BUFFER_USAGE_2_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR;
enum VK_BUFFER_USAGE_2_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR;
enum VK_BUFFER_USAGE_2_SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT;
enum VK_BUFFER_USAGE_2_RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT;
enum VK_BUFFER_USAGE_2_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT;
enum VK_BUFFER_USAGE_2_MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT;
enum VK_BUFFER_USAGE_2_MICROMAP_STORAGE_BIT_EXT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_MICROMAP_STORAGE_BIT_EXT;
enum VK_BUFFER_USAGE_2_COMPRESSED_DATA_DGF1_BIT_AMDX = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_COMPRESSED_DATA_DGF1_BIT_AMDX;
enum VK_BUFFER_USAGE_2_DATA_GRAPH_FOREIGN_DESCRIPTOR_BIT_ARM = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_DATA_GRAPH_FOREIGN_DESCRIPTOR_BIT_ARM;
enum VK_BUFFER_USAGE_2_RESERVED_34_BIT_EXT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_RESERVED_34_BIT_EXT;
enum VK_BUFFER_USAGE_2_TILE_MEMORY_BIT_QCOM = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_TILE_MEMORY_BIT_QCOM;
enum VK_BUFFER_USAGE_2_RESERVED_32_BIT_NV = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_RESERVED_32_BIT_NV;
enum VK_BUFFER_USAGE_2_PREPROCESS_BUFFER_BIT_EXT = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_PREPROCESS_BUFFER_BIT_EXT;
enum VK_BUFFER_USAGE_2_RESERVED_35_BIT_KHR = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_RESERVED_35_BIT_KHR;
enum VK_BUFFER_USAGE_2_RESERVED_36_BIT_KHR = VkBufferUsageFlagBits2.VK_BUFFER_USAGE_2_RESERVED_36_BIT_KHR;

struct VkBufferUsageFlags2CreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO;
    const(void)* pNext;
    VkFlags64 usage;
}

version (VK_VERSION_1_4) {
    extern void vkCmdBindIndexBuffer2(
        VkCommandBuffer commandBuffer,
        VkBuffer buffer,
        VkDeviceSize offset,
        VkDeviceSize size,
        VkIndexType indexType,
    );
    
    extern void vkGetRenderingAreaGranularity(
        VkDevice device,
        const(VkRenderingAreaInfo)* pRenderingAreaInfo,
        VkExtent2D* pGranularity,
    );
    
    extern void vkGetDeviceImageSubresourceLayout(
        VkDevice device,
        const(VkDeviceImageSubresourceInfo)* pInfo,
        VkSubresourceLayout2* pLayout,
    );
    
    extern void vkGetImageSubresourceLayout2(
        VkDevice device,
        VkImage image,
        const(VkImageSubresource2)* pSubresource,
        VkSubresourceLayout2* pLayout,
    );
}

// Promoted from VK_KHR_push_descriptor (extension 81) 'Roadmap 2024'

struct VkPhysicalDevicePushDescriptorProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES;
    void* pNext;
    uint maxPushDescriptors;
}

version (VK_VERSION_1_4) {
    extern void vkCmdPushDescriptorSet(
        VkCommandBuffer commandBuffer,
        VkPipelineBindPoint pipelineBindPoint,
        VkPipelineLayout layout,
        uint set,
        uint descriptorWriteCount,
        const(VkWriteDescriptorSet)* pDescriptorWrites,
    );
    
    extern void vkCmdPushDescriptorSetWithTemplate(
        VkCommandBuffer commandBuffer,
        VkDescriptorUpdateTemplate descriptorUpdateTemplate,
        VkPipelineLayout layout,
        uint set,
        const(void)* pData,
    );
}

// Promoted from VK_KHR_dynamic_rendering_local_read (extension 233) 'Roadmap 2024'

struct VkPhysicalDeviceDynamicRenderingLocalReadFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES;
    void* pNext;
    VkBool32 dynamicRenderingLocalRead;
}

struct VkRenderingAttachmentLocationInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_LOCATION_INFO;
    const(void)* pNext;
    uint colorAttachmentCount;
    const(uint)* pColorAttachmentLocations;
}

struct VkRenderingInputAttachmentIndexInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_RENDERING_INPUT_ATTACHMENT_INDEX_INFO;
    const(void)* pNext;
    uint colorAttachmentCount;
    const(uint)* pColorAttachmentInputIndices;
    const(uint)* pDepthInputAttachmentIndex;
    const(uint)* pStencilInputAttachmentIndex;
}

version (VK_VERSION_1_4) {
    extern void vkCmdSetRenderingAttachmentLocations(
        VkCommandBuffer commandBuffer,
        const(VkRenderingAttachmentLocationInfo)* pLocationInfo,
    );
    
    extern void vkCmdSetRenderingInputAttachmentIndices(
        VkCommandBuffer commandBuffer,
        const(VkRenderingInputAttachmentIndexInfo)* pInputAttachmentIndexInfo,
    );
}

// Promoted from VK_KHR_maintenance6 (extension 546) 'additional functionality'

struct VkPhysicalDeviceMaintenance6Features {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES;
    void* pNext;
    VkBool32 maintenance6;
}

struct VkPhysicalDeviceMaintenance6Properties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES;
    void* pNext;
    VkBool32 blockTexelViewCompatibleMultipleLayers;
    uint maxCombinedImageSamplerDescriptorCount;
    VkBool32 fragmentShadingRateClampCombinerInputs;
}

struct VkBindMemoryStatus {
    VkStructureType sType = VK_STRUCTURE_TYPE_BIND_MEMORY_STATUS;
    const(void)* pNext;
    VkResult* pResult;
}

struct VkBindDescriptorSetsInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO;
    const(void)* pNext;
    VkFlags stageFlags;
    VkPipelineLayout layout;
    uint firstSet;
    uint descriptorSetCount;
    const(VkDescriptorSet)* pDescriptorSets;
    uint dynamicOffsetCount;
    const(uint)* pDynamicOffsets;
}

struct VkPushConstantsInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PUSH_CONSTANTS_INFO;
    const(void)* pNext;
    VkPipelineLayout layout;
    VkFlags stageFlags;
    uint offset;
    uint size;
    const(void)* pValues;
}

struct VkPushDescriptorSetInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO;
    const(void)* pNext;
    VkFlags stageFlags;
    VkPipelineLayout layout;
    uint set;
    uint descriptorWriteCount;
    const(VkWriteDescriptorSet)* pDescriptorWrites;
}

struct VkPushDescriptorSetWithTemplateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO;
    const(void)* pNext;
    VkDescriptorUpdateTemplate descriptorUpdateTemplate;
    VkPipelineLayout layout;
    uint set;
    const(void)* pData;
}

version (VK_VERSION_1_4) {
    extern void vkCmdBindDescriptorSets2(
        VkCommandBuffer commandBuffer,
        const(VkBindDescriptorSetsInfo)* pBindDescriptorSetsInfo,
    );
    
    extern void vkCmdPushConstants2(
        VkCommandBuffer commandBuffer,
        const(VkPushConstantsInfo)* pPushConstantsInfo,
    );
    
    extern void vkCmdPushDescriptorSet2(
        VkCommandBuffer commandBuffer,
        const(VkPushDescriptorSetInfo)* pPushDescriptorSetInfo,
    );
    
    extern void vkCmdPushDescriptorSetWithTemplate2(
        VkCommandBuffer commandBuffer,
        const(VkPushDescriptorSetWithTemplateInfo)* pPushDescriptorSetWithTemplateInfo,
    );
}

// Promoted from VK_EXT_pipeline_protected_access (extension 467) 'additional functionality'

struct VkPhysicalDevicePipelineProtectedAccessFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES;
    void* pNext;
    VkBool32 pipelineProtectedAccess;
}

// Promoted from VK_EXT_pipeline_robustness (extension 69) 'additional functionality'

struct VkPhysicalDevicePipelineRobustnessFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES;
    void* pNext;
    VkBool32 pipelineRobustness;
}

struct VkPhysicalDevicePipelineRobustnessProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES;
    void* pNext;
    VkPipelineRobustnessBufferBehavior defaultRobustnessStorageBuffers;
    VkPipelineRobustnessBufferBehavior defaultRobustnessUniformBuffers;
    VkPipelineRobustnessBufferBehavior defaultRobustnessVertexInputs;
    VkPipelineRobustnessImageBehavior defaultRobustnessImages;
}

struct VkPipelineRobustnessCreateInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO;
    const(void)* pNext;
    VkPipelineRobustnessBufferBehavior storageBuffers;
    VkPipelineRobustnessBufferBehavior uniformBuffers;
    VkPipelineRobustnessBufferBehavior vertexInputs;
    VkPipelineRobustnessImageBehavior images;
}

enum VkPipelineRobustnessBufferBehavior {
    DEVICE_DEFAULT = 0,
    DISABLED = 1,
    ROBUST_BUFFER_ACCESS = 2,
    ROBUST_BUFFER_ACCESS_2 = 3,
    DEVICE_DEFAULT_EXT = DEVICE_DEFAULT,
    DISABLED_EXT = DISABLED,
    ROBUST_BUFFER_ACCESS_EXT = ROBUST_BUFFER_ACCESS,
    ROBUST_BUFFER_ACCESS_2_EXT = ROBUST_BUFFER_ACCESS_2,
}

enum VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DEVICE_DEFAULT = VkPipelineRobustnessBufferBehavior.DEVICE_DEFAULT;
enum VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DISABLED = VkPipelineRobustnessBufferBehavior.DISABLED;
enum VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS = VkPipelineRobustnessBufferBehavior.ROBUST_BUFFER_ACCESS;
enum VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2 = VkPipelineRobustnessBufferBehavior.ROBUST_BUFFER_ACCESS_2;
enum VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DEVICE_DEFAULT_EXT = VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DEVICE_DEFAULT;
enum VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DISABLED_EXT = VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DISABLED;
enum VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_EXT = VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS;
enum VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2_EXT = VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2;

enum VkPipelineRobustnessImageBehavior {
    DEVICE_DEFAULT = 0,
    DISABLED = 1,
    ROBUST_IMAGE_ACCESS = 2,
    ROBUST_IMAGE_ACCESS_2 = 3,
    DEVICE_DEFAULT_EXT = DEVICE_DEFAULT,
    DISABLED_EXT = DISABLED,
    ROBUST_IMAGE_ACCESS_EXT = ROBUST_IMAGE_ACCESS,
    ROBUST_IMAGE_ACCESS_2_EXT = ROBUST_IMAGE_ACCESS_2,
}

enum VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DEVICE_DEFAULT = VkPipelineRobustnessImageBehavior.DEVICE_DEFAULT;
enum VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DISABLED = VkPipelineRobustnessImageBehavior.DISABLED;
enum VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS = VkPipelineRobustnessImageBehavior.ROBUST_IMAGE_ACCESS;
enum VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_2 = VkPipelineRobustnessImageBehavior.ROBUST_IMAGE_ACCESS_2;
enum VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DEVICE_DEFAULT_EXT = VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DEVICE_DEFAULT;
enum VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DISABLED_EXT = VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DISABLED;
enum VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_EXT = VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS;
enum VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_2_EXT = VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_2;

// Promoted (as optional feature) from VK_EXT_host_image_copy (extension 271) 'streaming transfers'

struct VkPhysicalDeviceHostImageCopyFeatures {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES;
    void* pNext;
    VkBool32 hostImageCopy;
}

struct VkPhysicalDeviceHostImageCopyProperties {
    VkStructureType sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES;
    void* pNext;
    uint copySrcLayoutCount;
    VkImageLayout* pCopySrcLayouts;
    uint copyDstLayoutCount;
    VkImageLayout* pCopyDstLayouts;
    ubyte[VK_UUID_SIZE] optimalTilingLayoutUUID;
    VkBool32 identicalMemoryTypeRequirements;
}

enum VkHostImageCopyFlagBits : uint {
    MEMCPY_BIT = 1,
    MEMCPY = MEMCPY_BIT,
    MEMCPY_BIT_EXT = MEMCPY_BIT,
    MEMCPY_EXT = MEMCPY_BIT,
}

enum VK_HOST_IMAGE_COPY_MEMCPY_BIT = VkHostImageCopyFlagBits.MEMCPY_BIT;
deprecated("aliased")
enum VK_HOST_IMAGE_COPY_MEMCPY = VK_HOST_IMAGE_COPY_MEMCPY_BIT;
enum VK_HOST_IMAGE_COPY_MEMCPY_BIT_EXT = VK_HOST_IMAGE_COPY_MEMCPY_BIT;
deprecated("aliased")
enum VK_HOST_IMAGE_COPY_MEMCPY_EXT = VK_HOST_IMAGE_COPY_MEMCPY_BIT;

alias VkHostImageCopyFlags = VkFlags;

struct VkMemoryToImageCopy {
    VkStructureType sType = VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY;
    const(void)* pNext;
    const(void)* pHostPointer;
    uint memoryRowLength;
    uint memoryImageHeight;
    VkImageSubresourceLayers imageSubresource;
    VkOffset3D imageOffset;
    VkExtent3D imageExtent;
}

struct VkImageToMemoryCopy {
    VkStructureType sType = VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY;
    const(void)* pNext;
    void* pHostPointer;
    uint memoryRowLength;
    uint memoryImageHeight;
    VkImageSubresourceLayers imageSubresource;
    VkOffset3D imageOffset;
    VkExtent3D imageExtent;
}

struct VkCopyMemoryToImageInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkImage dstImage;
    VkImageLayout dstImageLayout;
    uint regionCount;
    const(VkMemoryToImageCopy)* pRegions;
}

struct VkCopyImageToMemoryInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkImage srcImage;
    VkImageLayout srcImageLayout;
    uint regionCount;
    const(VkImageToMemoryCopy)* pRegions;
}

struct VkCopyImageToImageInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO;
    const(void)* pNext;
    VkFlags flags;
    VkImage srcImage;
    VkImageLayout srcImageLayout;
    VkImage dstImage;
    VkImageLayout dstImageLayout;
    uint regionCount;
    const(VkImageCopy2)* pRegions;
}

struct VkHostImageLayoutTransitionInfo {
    VkStructureType sType = VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO;
    const(void)* pNext;
    VkImage image;
    VkImageLayout oldLayout;
    VkImageLayout newLayout;
    VkImageSubresourceRange subresourceRange;
}

struct VkSubresourceHostMemcpySize {
    VkStructureType sType = VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE;
    void* pNext;
    VkDeviceSize size;
}

struct VkHostImageCopyDevicePerformanceQuery {
    VkStructureType sType = VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY;
    void* pNext;
    VkBool32 optimalDeviceAccess;
    VkBool32 identicalMemoryLayout;
}

version (VK_VERSION_1_4) {
    extern VkResult vkCopyMemoryToImage(
        VkDevice device,
        const(VkCopyMemoryToImageInfo)* pCopyMemoryToImageInfo,
    );
    
    extern VkResult vkCopyImageToMemory(
        VkDevice device,
        const(VkCopyImageToMemoryInfo)* pCopyImageToMemoryInfo,
    );
    
    extern VkResult vkCopyImageToImage(
        VkDevice device,
        const(VkCopyImageToImageInfo)* pCopyImageToImageInfo,
    );
    
    extern VkResult vkTransitionImageLayout(
        VkDevice device,
        uint transitionCount,
        const(VkHostImageLayoutTransitionInfo)* pTransitions,
    );
}
